d:least-power
LEAST-POWER
23 February 2006
TAG Finding
The Rule of Least Power
https://www.w3.org/2001/tag/doc/leastPower




Tim Berners-Lee
Noah Mendelsohn
-
d:leiri
leiri
3 November 2008
NOTE
Legacy extended IRIs for XML resource identification
https://www.w3.org/TR/leiri/




Henry Thompson
Richard Tobin
Norman Walsh
-
d:leiri-20081103
leiri-20081103
3 November 2008
NOTE
Legacy extended IRIs for XML resource identification
https://www.w3.org/TR/2008/NOTE-leiri-20081103/
https://www.w3.org/TR/2008/NOTE-leiri-20081103/



Henry Thompson
Richard Tobin
Norman Walsh
-
d:lewg1
LEWG1

CLOSED
Test Issue
https://wg21.link/lewg1




-
d:lewg10
LEWG10

NEEDS_PAPER
Provide a function to compute x mod 2**n
https://wg21.link/lewg10




-
d:lewg100
LEWG100

ADOPTED
Unify the interfaces of optional, any, and variant
https://wg21.link/lewg100




-
d:lewg101
LEWG101

CLOSED
If vector::reserve(n) reallocates, capacity()==n
https://wg21.link/lewg101




-
d:lewg102
LEWG102

ADOPTED
clamp()
https://wg21.link/lewg102




-
d:lewg103
LEWG103

ADOPTED
shared_ptr::weak_type
https://wg21.link/lewg103




-
d:lewg104
LEWG104

DESIGN_REVIEW
Function wrapper for const- and ref-qualified operator()
https://wg21.link/lewg104




-
d:lewg105
LEWG105

ADOPTED
Remove Deprecated iostreams aliases
https://wg21.link/lewg105




-
d:lewg106
LEWG106

ADOPTED
Adopt not_fn for C++17 and remove not1 & not2
https://wg21.link/lewg106




-
d:lewg107
LEWG107

ADOPTED
Adopt Type Traits Variable Templates for C++17
https://wg21.link/lewg107




-
d:lewg108
LEWG108

ADOPTED
Additions to Filesystem supporting Relative Paths
https://wg21.link/lewg108




-
d:lewg109
LEWG109

ADOPTED
Logical Operator Type Traits
https://wg21.link/lewg109




-
d:lewg11
LEWG11

NEEDS_PAPER
equal_range() should return a range
https://wg21.link/lewg11




-
d:lewg110
LEWG110

ADOPTED
Add a multiline option to std::regex for the ECMAScript engine
https://wg21.link/lewg110




-
d:lewg111
LEWG111

DESIGN_REVIEW
A specialization-friendly std::common_type
https://wg21.link/lewg111




-
d:lewg112
LEWG112

ADOPTED
Proxy Iterators for the Ranges Extensions
https://wg21.link/lewg112




-
d:lewg113
LEWG113

ADOPTED
A 3-Argument Overload for std::hypot
https://wg21.link/lewg113




-
d:lewg114
LEWG114

ADOPTED
Add Constexpr Modifiers to reverse_iterator, move_iterator, array and Range Access
https://wg21.link/lewg114




-
d:lewg115
LEWG115

ADOPTED
Fix enable_shared_from_this
https://wg21.link/lewg115




-
d:lewg116
LEWG116

ADOPTED
Support Civil Time in the standard library
https://wg21.link/lewg116




-
d:lewg117
LEWG117

CLOSED
Fixed-Point Real Numbers
https://wg21.link/lewg117




-
d:lewg118
LEWG118

WORDING_REVIEW
Flat Associative Containers
https://wg21.link/lewg118




-
d:lewg119
LEWG119

CLOSED
Extending raw_storage_iterator
https://wg21.link/lewg119




-
d:lewg12
LEWG12

NEEDS_PAPER
noexcept and the wide/narrow contract theory
https://wg21.link/lewg12




-
d:lewg120
LEWG120

ADOPTED
New uninitialized_* algorithms and destroy(range)
https://wg21.link/lewg120




-
d:lewg121
LEWG121

CLOSED
Unstable remove algorithms
https://wg21.link/lewg121




-
d:lewg122
LEWG122

DESIGN_REVIEW
A uniform way to undo type erasure
https://wg21.link/lewg122




-
d:lewg123
LEWG123

CLOSED
Function wrappers with allocators and noexcept
https://wg21.link/lewg123




-
d:lewg124
LEWG124

CLOSED
Change is_transparent to a metafunction
https://wg21.link/lewg124




-
d:lewg125
LEWG125

WORDING_REVIEW
Building overload sets from function objects
https://wg21.link/lewg125




-
d:lewg126
LEWG126

DESIGN_REVIEW
A generic match function
https://wg21.link/lewg126




-
d:lewg127
LEWG127

CLOSED
Interactions Between Coroutines and Networking Library
https://wg21.link/lewg127




-
d:lewg128
LEWG128

ADOPTED
Coroutines
https://wg21.link/lewg128




-
d:lewg129
LEWG129

DESIGN_REVIEW
Circular-buffer queues
https://wg21.link/lewg129




-
d:lewg13
LEWG13

NEEDS_PAPER
Making tuple concept-friendly
https://wg21.link/lewg13




-
d:lewg130
LEWG130

ADOPTED
High-performance number<->string conversions
https://wg21.link/lewg130




-
d:lewg131
LEWG131

ADOPTED
Make std::owner_less more flexible
https://wg21.link/lewg131




-
d:lewg132
LEWG132

ADOPTED
emplace* should return the new element
https://wg21.link/lewg132




-
d:lewg133
LEWG133

CLOSED
Remove result_type and friends
https://wg21.link/lewg133




-
d:lewg134
LEWG134

ADOPTED
Minor additions to <chrono>
https://wg21.link/lewg134




-
d:lewg135
LEWG135

DESIGN_REVIEW
Explicitly total-, weak-, and partial-ordering customization points
https://wg21.link/lewg135




-
d:lewg136
LEWG136

CLOSED
Boolean conversion for Standard Library types
https://wg21.link/lewg136




-
d:lewg137
LEWG137

DESIGN_REVIEW
Easy lexical conversions
https://wg21.link/lewg137




-
d:lewg138
LEWG138

CLOSED
read/write view of a sequence of characters
https://wg21.link/lewg138




-
d:lewg139
LEWG139

DESIGN_REVIEW
bitset inclusion test methods
https://wg21.link/lewg139




-
d:lewg14
LEWG14

CLOSED
Multidimensional bounds, index and array_view
https://wg21.link/lewg14




-
d:lewg140
LEWG140

DESIGN_REVIEW
Container operations that handle failure w/o exceptions
https://wg21.link/lewg140




-
d:lewg141
LEWG141

READY
constexpr std::thread::hardware_{constructive,destructive}_interference_size
https://wg21.link/lewg141




-
d:lewg142
LEWG142

DESIGN_REVIEW
Tweaks to the Kona Variant
https://wg21.link/lewg142




-
d:lewg143
LEWG143

DESIGN_REVIEW
memory_resource_ptr: A Limited Smart Pointer for memory_resource Correctness
https://wg21.link/lewg143




-
d:lewg144
LEWG144

CLOSED
Regular expressions with Unicode character types
https://wg21.link/lewg144




-
d:lewg145
LEWG145

CLOSED
Warning about concurrent use of random number engines
https://wg21.link/lewg145




-
d:lewg146
LEWG146

ADOPTED
Update the C reference to C11
https://wg21.link/lewg146




-
d:lewg147
LEWG147

ADOPTED
span: reference to a single-dimensional contiguous range of objects
https://wg21.link/lewg147




-
d:lewg148
LEWG148

DESIGN_REVIEW
Bitset Iterators, Masks, and Container Operations
https://wg21.link/lewg148




-
d:lewg149
LEWG149

ADOPTED
Deprecating Vestigial Library Parts
https://wg21.link/lewg149




-
d:lewg15
LEWG15

NEEDS_PAPER
Define some cryptographic operations.
https://wg21.link/lewg15




-
d:lewg150
LEWG150

ADOPTED
Synopses for the C library
https://wg21.link/lewg150




-
d:lewg151
LEWG151

WORDING_REVIEW
Cleaning up propagation allocator_traits
https://wg21.link/lewg151




-
d:lewg152
LEWG152

DESIGN_REVIEW
Unequal allocators and swap
https://wg21.link/lewg152




-
d:lewg153
LEWG153

ADOPTED
Reserve a New Library Namespace for Future Standardization
https://wg21.link/lewg153




-
d:lewg154
LEWG154

CLOSED
A default_order comparator
https://wg21.link/lewg154




-
d:lewg155
LEWG155

DESIGN_REVIEW
Iterator Facade Library
https://wg21.link/lewg155




-
d:lewg156
LEWG156

CLOSED
A generic none_t literal type for Nullable types
https://wg21.link/lewg156




-
d:lewg157
LEWG157

CLOSED
Add the Y Combinator to the Standard Library
https://wg21.link/lewg157




-
d:lewg158
LEWG158

WORDING_REVIEW
A cloning pointer class
https://wg21.link/lewg158




-
d:lewg159
LEWG159

CLOSED
Add constexpr modifiers to functions in <algorithm> and <cstring>
https://wg21.link/lewg159




-
d:lewg16
LEWG16

ADOPTED
Improving pair and tuple
https://wg21.link/lewg16




-
d:lewg160
LEWG160

DESIGN_REVIEW
Allow Seeding Random Number Engines with std::random_device
https://wg21.link/lewg160




-
d:lewg161
LEWG161

CLOSED
Joining threads on destruction
https://wg21.link/lewg161




-
d:lewg162
LEWG162

DESIGN_REVIEW
A helper for the copy-swap idiom in the presence of non-propagating allocators
https://wg21.link/lewg162




-
d:lewg163
LEWG163

ADOPTED
make_from_tuple: apply() for construction
https://wg21.link/lewg163




-
d:lewg164
LEWG164

CLOSED
A vector<> that doesn't store a capacity
https://wg21.link/lewg164




-
d:lewg165
LEWG165

DESIGN_REVIEW
Allocator-aware library wrappers for dynamic allocation
https://wg21.link/lewg165




-
d:lewg166
LEWG166

DESIGN_REVIEW
A Time-Zone Library
https://wg21.link/lewg166




-
d:lewg167
LEWG167

ADOPTED
Adopt the File System TS for C++17
https://wg21.link/lewg167




-
d:lewg168
LEWG168

ADOPTED
Adopt Library Fundamentals V1 TS Components for C++17
https://wg21.link/lewg168




-
d:lewg169
LEWG169

WORDING_REVIEW
Weakening the iterator categories of some sorting algorithms
https://wg21.link/lewg169




-
d:lewg17
LEWG17

CLOSED
Establish conventions for Technical Specification contents
https://wg21.link/lewg17




-
d:lewg170
LEWG170

CLOSED
Safe (bounds-checked) Integer Types
https://wg21.link/lewg170




-
d:lewg171
LEWG171

WORDING_REVIEW
Bit value, reference, pointer, and iterator
https://wg21.link/lewg171




-
d:lewg172
LEWG172

ADOPTED
Rename variant's corrupted_by_exception() to valueless_by_exception()
https://wg21.link/lewg172




-
d:lewg173
LEWG173

DESIGN_REVIEW
Regular void in the standard library
https://wg21.link/lewg173




-
d:lewg174
LEWG174

DESIGN_REVIEW
Text_view: A C++ concepts and range based character encoding and code point enumeration library
https://wg21.link/lewg174




-
d:lewg175
LEWG175

ADOPTED
Return the end of the match from searchers
https://wg21.link/lewg175




-
d:lewg176
LEWG176

ADOPTED
is_contiguous_layout
https://wg21.link/lewg176




-
d:lewg177
LEWG177

CLOSED
Add 2D Graphics Rendering and Display to C++
https://wg21.link/lewg177




-
d:lewg178
LEWG178

ADOPTED
Give 'std::string' a non-const '.data()' member function
https://wg21.link/lewg178




-
d:lewg179
LEWG179

DESIGN_REVIEW
Clump â€“ A Vector-like Contiguous Sequence Container with Embedded Storage
https://wg21.link/lewg179




-
d:lewg18
LEWG18

READY
Const-propagating smart pointer wrapper
https://wg21.link/lewg18




-
d:lewg180
LEWG180

CLOSED
Const-preserving overloads for the strtox family of functions
https://wg21.link/lewg180




-
d:lewg181
LEWG181

DESIGN_REVIEW
std::direct_init<T>, a functor to expose T's constructor overload set
https://wg21.link/lewg181




-
d:lewg182
LEWG182

ADOPTED
The Parallelism TS Should be Standardized
https://wg21.link/lewg182




-
d:lewg183
LEWG183

ADOPTED
Dynamic memory allocation for over-aligned data
https://wg21.link/lewg183




-
d:lewg184
LEWG184

ADOPTED
Adopt gcd and lcm from Library Fundamentals V2 Components for C++17
https://wg21.link/lewg184




-
d:lewg185
LEWG185

CLOSED
Default comparisons
https://wg21.link/lewg185




-
d:lewg186
LEWG186

UNCONFIRMED
missing rationale for numeric_limits template member values defaulting to 0.
https://wg21.link/lewg186




-
d:lewg187
LEWG187

CLOSED
Manipulating the width of numeric types
https://wg21.link/lewg187




-
d:lewg188
LEWG188

ADOPTED
Delete operator= for polymorphic_allocator
https://wg21.link/lewg188




-
d:lewg189
LEWG189

ADOPTED
Better Names for Parallel Execution Policies in C++17
https://wg21.link/lewg189




-
d:lewg19
LEWG19

DESIGN_REVIEW
Polymorphic Deleter for Unique Pointers
https://wg21.link/lewg19




-
d:lewg190
LEWG190

CLOSED
Floating Point Atomic
https://wg21.link/lewg190




-
d:lewg191
LEWG191

ADOPTED
Vector and Wavefront Policies
https://wg21.link/lewg191




-
d:lewg192
LEWG192

SG_REVIEW
Thread-Local Storage and light-weight executors
https://wg21.link/lewg192




-
d:lewg193
LEWG193

ADOPTED
Data-Parallel Vector Types & Operations
https://wg21.link/lewg193




-
d:lewg194
LEWG194

ADOPTED
Integrating std::string_view and std::string
https://wg21.link/lewg194




-
d:lewg195
LEWG195

ADOPTED
A byte type
https://wg21.link/lewg195




-
d:lewg196
LEWG196

CLOSED
Dynamic library loading
https://wg21.link/lewg196




-
d:lewg197
LEWG197

ADOPTED
Forward progress guarantees for the Parallelism TS v2
https://wg21.link/lewg197




-
d:lewg198
LEWG198

ADOPTED
Deprecating Allocator Support in std::function
https://wg21.link/lewg198




-
d:lewg199
LEWG199

ADOPTED
Optional<T>'s >= should forward to T's >=
https://wg21.link/lewg199




-
d:lewg2
LEWG2

ADOPTED
TransformationTrait Alias void_t
https://wg21.link/lewg2




-
d:lewg20
LEWG20

CLOSED
Ostream Buffers
https://wg21.link/lewg20




-
d:lewg200
LEWG200

CLOSED
Valueless Variants Considered Harmful
https://wg21.link/lewg200




-
d:lewg201
LEWG201

CLOSED
Splitting node and array allocation in allocators
https://wg21.link/lewg201




-
d:lewg202
LEWG202

ADOPTED
Directory Entry Caching for Filesystem
https://wg21.link/lewg202




-
d:lewg203
LEWG203

ADOPTED
Unwrapping reference_wrapper
https://wg21.link/lewg203




-
d:lewg204
LEWG204

CLOSED
Adding Emplace functions for promise<T>/future<T>
https://wg21.link/lewg204




-
d:lewg205
LEWG205

SG_REVIEW
Thread Constructor Attributes
https://wg21.link/lewg205




-
d:lewg206
LEWG206

DESIGN_REVIEW
User-creatable exception_list
https://wg21.link/lewg206




-
d:lewg207
LEWG207

WORDING_REVIEW
Adopt make_array into the IS
https://wg21.link/lewg207




-
d:lewg208
LEWG208

SG_REVIEW
Improving Parallel Algorithm Exception Handling
https://wg21.link/lewg208




-
d:lewg209
LEWG209

DESIGN_REVIEW
Immutable Containers
https://wg21.link/lewg209




-
d:lewg21
LEWG21

WORDING_REVIEW
Make it easier for users to define good hash functions
https://wg21.link/lewg21




-
d:lewg210
LEWG210

CLOSED
Generic factory function
https://wg21.link/lewg210




-
d:lewg211
LEWG211

WORDING_REVIEW
polymorphic_allocator<void> as a vocabulary type
https://wg21.link/lewg211




-
d:lewg212
LEWG212

WORDING_REVIEW
Making std::underlying_type SFINAE-friendly
https://wg21.link/lewg212




-
d:lewg213
LEWG213

CLOSED
High-order metaprogramming functions
https://wg21.link/lewg213




-
d:lewg214
LEWG214

ADOPTED
Rename "uniform random number generator" to "... bit generator"
https://wg21.link/lewg214




-
d:lewg215
LEWG215

DESIGN_REVIEW
Simplifying simple uses of <random>
https://wg21.link/lewg215




-
d:lewg216
LEWG216

DESIGN_REVIEW
Unicode Encoding Conversions
https://wg21.link/lewg216




-
d:lewg217
LEWG217

ADOPTED
reference_wrapper for incomplete types and assorted removals
https://wg21.link/lewg217




-
d:lewg218
LEWG218

ADOPTED
Fixes for not_fn
https://wg21.link/lewg218




-
d:lewg219
LEWG219

SG_REVIEW
Invoking Algorithms Asynchronously
https://wg21.link/lewg219




-
d:lewg22
LEWG22

ADOPTED
Rvalue reference overloads for optional
https://wg21.link/lewg22




-
d:lewg220
LEWG220

DESIGN_REVIEW
A class to describe the kind of data accesses
https://wg21.link/lewg220




-
d:lewg221
LEWG221

ADOPTED
Ranges TS Design Updates
https://wg21.link/lewg221




-
d:lewg222
LEWG222

DESIGN_REVIEW
A Single Generalization of std::invoke, std::apply, and std::visit
https://wg21.link/lewg222




-
d:lewg223
LEWG223

NEEDS_PAPER
General-Purpose Constant Value Type
https://wg21.link/lewg223




-
d:lewg224
LEWG224

ADOPTED
string_view and filesystem::path
https://wg21.link/lewg224




-
d:lewg225
LEWG225

CLOSED
Structured binding: customization points issues
https://wg21.link/lewg225




-
d:lewg226
LEWG226

UNCONFIRMED
operator+ overloads for std::string and std::string_view
https://wg21.link/lewg226




-
d:lewg227
LEWG227

ADOPTED
variant converting constructor allows unintended conversions
https://wg21.link/lewg227




-
d:lewg228
LEWG228

ADOPTED
P0019 - Atomic Ref
https://wg21.link/lewg228




-
d:lewg229
LEWG229

CLOSED
allocate_unique and allocator_delete
https://wg21.link/lewg229




-
d:lewg23
LEWG23

DESIGN_REVIEW
Hashing tuple-like types
https://wg21.link/lewg23




-
d:lewg230
LEWG230

WORDING_REVIEW
Pointer Cast Functions with Move Semantics
https://wg21.link/lewg230




-
d:lewg231
LEWG231

DESIGN_REVIEW
Extensions to the Allocator interface
https://wg21.link/lewg231




-
d:lewg232
LEWG232

ADOPTED
Literal suffixes for basic_string_view
https://wg21.link/lewg232




-
d:lewg233
LEWG233

DESIGN_REVIEW
Intrusive Containers
https://wg21.link/lewg233




-
d:lewg234
LEWG234

WORDING_REVIEW
Allocator-aware basic stringbuf
https://wg21.link/lewg234




-
d:lewg235
LEWG235

WORDING_REVIEW
Efficient Access to basic stringbufâ€™s Buffer
https://wg21.link/lewg235




-
d:lewg236
LEWG236

ADOPTED
Standard Library Specification in a Concepts and Contracts World
https://wg21.link/lewg236




-
d:lewg237
LEWG237

CLOSED
Constexpr for std::complex
https://wg21.link/lewg237




-
d:lewg238
LEWG238

ADOPTED
Constexpr for std::char_traits
https://wg21.link/lewg238




-
d:lewg239
LEWG239

ADOPTED
Integrating template deduction for class templates into the standard library
https://wg21.link/lewg239




-
d:lewg24
LEWG24

ADOPTED
Transaction-safe standard library
https://wg21.link/lewg24




-
d:lewg240
LEWG240

CLOSED
Floating Point Atomic View
https://wg21.link/lewg240




-
d:lewg241
LEWG241

INCUBATION
std::colony
https://wg21.link/lewg241




-
d:lewg242
LEWG242

DESIGN_REVIEW
A strstream replacement using span<charT> as buffer
https://wg21.link/lewg242




-
d:lewg243
LEWG243

CLOSED
A minimal multi-dimensional span, mdspan<>
https://wg21.link/lewg243




-
d:lewg244
LEWG244

CLOSED
String Prefix and Suffix Checking
https://wg21.link/lewg244




-
d:lewg245
LEWG245

ADOPTED
Checking for Existence of an Element in Associative Containers
https://wg21.link/lewg245




-
d:lewg246
LEWG246

ADOPTED
endian, Just endian
https://wg21.link/lewg246




-
d:lewg247
LEWG247

WORDING_REVIEW
Layout-compatibility and Pointer-interconvertibility Traits
https://wg21.link/lewg247




-
d:lewg248
LEWG248

DESIGN_REVIEW
Sample in place
https://wg21.link/lewg248




-
d:lewg249
LEWG249

DESIGN_REVIEW
Single argument std::inserter
https://wg21.link/lewg249




-
d:lewg25
LEWG25

ADOPTED
Enable noexcept on string and vector default/move constructors/assignments
https://wg21.link/lewg25




-
d:lewg250
LEWG250

DESIGN_REVIEW
Put std::monostate in <utility>
https://wg21.link/lewg250




-
d:lewg251
LEWG251

ADOPTED
Bit-casting object representations
https://wg21.link/lewg251




-
d:lewg252
LEWG252

DESIGN_REVIEW
std::monostate_function<>
https://wg21.link/lewg252




-
d:lewg253
LEWG253

NEEDS_PAPER
move_if_noexcept from a range to uninitialized memory
https://wg21.link/lewg253




-
d:lewg254
LEWG254

SG_REVIEW
Enhancing Thread Constructor Attributes
https://wg21.link/lewg254




-
d:lewg255
LEWG255

NEEDS_PAPER
for_each_iter algorithm
https://wg21.link/lewg255




-
d:lewg256
LEWG256

SG_REVIEW
Atomic maximum/minimum
https://wg21.link/lewg256




-
d:lewg257
LEWG257

CLOSED
contiguous_container
https://wg21.link/lewg257




-
d:lewg258
LEWG258

CLOSED
Deduction guide for std::array
https://wg21.link/lewg258




-
d:lewg259
LEWG259

NEEDS_PAPER
Add split/join of string/string_view
https://wg21.link/lewg259




-
d:lewg26
LEWG26

ADOPTED
Supporting move-only types with emplace in unique-key maps
https://wg21.link/lewg26




-
d:lewg260
LEWG260

ADOPTED
Post-Increment on Input and Output Iterators
https://wg21.link/lewg260




-
d:lewg261
LEWG261

WORDING_REVIEW
User Injection of Filesystems
https://wg21.link/lewg261




-
d:lewg262
LEWG262

NEEDS_PAPER
Supporting offsetof for Stable-layout Classes
https://wg21.link/lewg262




-
d:lewg263
LEWG263

CLOSED
Span - foundation for the future
https://wg21.link/lewg263




-
d:lewg264
LEWG264

WORDING_REVIEW
Adjuncts to std::hash
https://wg21.link/lewg264




-
d:lewg265
LEWG265

CLOSED
Transformation Trait uncvref
https://wg21.link/lewg265




-
d:lewg266
LEWG266

ADOPTED
Thou Shalt Not Specialize std Function Templates!
https://wg21.link/lewg266




-
d:lewg267
LEWG267

CLOSED
string_view for source_location
https://wg21.link/lewg267




-
d:lewg268
LEWG268

CLOSED
Class template deduction guides for "diamond operators"
https://wg21.link/lewg268




-
d:lewg269
LEWG269

CLOSED
Vector Front Operations
https://wg21.link/lewg269




-
d:lewg27
LEWG27

ADOPTED
Delimited iterators (fixing ostream_iterator)
https://wg21.link/lewg27




-
d:lewg270
LEWG270

ADOPTED
Utility functions to implement uses-allocator construction
https://wg21.link/lewg270




-
d:lewg271
LEWG271

CLOSED
[[nodiscard]] in the Library
https://wg21.link/lewg271




-
d:lewg272
LEWG272

WORDING_REVIEW
constexpr for <cmath> and <cstdlib>
https://wg21.link/lewg272




-
d:lewg273
LEWG273

DESIGN_REVIEW
An Intrusive Smart Pointer
https://wg21.link/lewg273




-
d:lewg274
LEWG274

ADOPTED
File system library on non-POSIX-like operating systems
https://wg21.link/lewg274




-
d:lewg275
LEWG275

CLOSED
Use string_view for library function parameters instead of const string &/const char *
https://wg21.link/lewg275




-
d:lewg276
LEWG276

NEEDS_PAPER
Numeric Traits for the Next Standard Library
https://wg21.link/lewg276




-
d:lewg277
LEWG277

SG_REVIEW
Toward a <random> Technical Specification
https://wg21.link/lewg277




-
d:lewg278
LEWG278

CLOSED
Saturation arithmetic
https://wg21.link/lewg278




-
d:lewg279
LEWG279

DESIGN_REVIEW
Bit operations
https://wg21.link/lewg279




-
d:lewg28
LEWG28

ADOPTED
Uniform Container Erasure
https://wg21.link/lewg28




-
d:lewg280
LEWG280

DESIGN_REVIEW
Integral power-of-2 operations
https://wg21.link/lewg280




-
d:lewg281
LEWG281

DESIGN_REVIEW
Consistent comparison
https://wg21.link/lewg281




-
d:lewg282
LEWG282

DESIGN_REVIEW
Standard Library Modules
https://wg21.link/lewg282




-
d:lewg283
LEWG283

SG_REVIEW
Updating Parallel Execution Policy Names in the Parallelism TS
https://wg21.link/lewg283




-
d:lewg284
LEWG284

CLOSED
Make std::memory_order a scoped enumeration
https://wg21.link/lewg284




-
d:lewg285
LEWG285

SG_REVIEW
Future-Proofing Parallel Algorithms Exception Handling
https://wg21.link/lewg285




-
d:lewg286
LEWG286

SG_REVIEW
Binary-Binary transform_reduce(): The Missing Overload
https://wg21.link/lewg286




-
d:lewg287
LEWG287

ADOPTED
Clarify That shared_futureâ€™s Copy Operations have Wide Contracts
https://wg21.link/lewg287




-
d:lewg288
LEWG288

ADOPTED
The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange
https://wg21.link/lewg288




-
d:lewg289
LEWG289

DESIGN_REVIEW
call/cc (call-with-current-continuation): A low-level API for stackful context switching
https://wg21.link/lewg289




-
d:lewg29
LEWG29

WORDING_REVIEW
std::expected<Error, T>
https://wg21.link/lewg29




-
d:lewg290
LEWG290

DESIGN_REVIEW
Type Requirements for <numeric> Algorithms
https://wg21.link/lewg290




-
d:lewg291
LEWG291

WORDING_REVIEW
Hazard Pointers
https://wg21.link/lewg291




-
d:lewg292
LEWG292

CLOSED
Product-Type access
https://wg21.link/lewg292




-
d:lewg293
LEWG293

NEEDS_PAPER
[Networking] PDTS ballot comment 001 (US): use callable/invocable terminology instead of "function object"
https://wg21.link/lewg293




-
d:lewg294
LEWG294

CLOSED
[Networking] PDTS ballot comment 004 (FR1): Implement using coroutines
https://wg21.link/lewg294




-
d:lewg295
LEWG295

NEEDS_PAPER
[Networking] PDTS ballot comment 006 (US): Use callbacks instead of completion tokens
https://wg21.link/lewg295




-
d:lewg296
LEWG296

NEEDS_WORDING
[Networking] PDTS ballot comment 008 (GB3): Specify reentrancy rules for dispatch functions
https://wg21.link/lewg296




-
d:lewg297
LEWG297

NEEDS_PAPER
[Networking] PDTS ballot comment 011 (US): Remove defer function from executors
https://wg21.link/lewg297




-
d:lewg298
LEWG298

NEEDS_WORDING
[Networking] PDTS ballot comment 015 (GB6): Reentrancy and use_service/make_service.
https://wg21.link/lewg298




-
d:lewg299
LEWG299

CONFIRMED
[Networking] PDTS ballot comment 016 (GB7): run()/run_one() specification overly restrictive on users.
https://wg21.link/lewg299




-
d:lewg3
LEWG3

DESIGN_REVIEW
Centralized Defensive-Programming Support for Narrow  Contracts
https://wg21.link/lewg3




-
d:lewg30
LEWG30

ADOPTED
Non-member size(), empty(), front(), back(), and data().
https://wg21.link/lewg30




-
d:lewg300
LEWG300

NEEDS_WORDING
[Networking] PDTS ballot comment 018 (GB9): user-provided overloads of buffer_size intended?
https://wg21.link/lewg300




-
d:lewg301
LEWG301

CLOSED
[Networking] PDTS ballot comment 022 (GB12): const_buffer is a view
https://wg21.link/lewg301




-
d:lewg302
LEWG302

CLOSED
[Networking] PDTS ballot comment 025 (GB14): Add integer_option helper
https://wg21.link/lewg302




-
d:lewg303
LEWG303

ADOPTED
[Networking] PDTS ballot comment 026 (GB15):  Consider adding release() member functions to basic_socket and basic_socket_acceptor
https://wg21.link/lewg303




-
d:lewg304
LEWG304

CLOSED
[Networking] PDTS ballot comment 027 (GB16): Consider adding constructors to basic_socket and basic_socket_acceptor to move a socket to another io_context
https://wg21.link/lewg304




-
d:lewg305
LEWG305

CONFIRMED
[Networking] PDTS ballot comment 033 (GB20): Shorten ip::resolver_errc enumerator names.
https://wg21.link/lewg305




-
d:lewg306
LEWG306

CONFIRMED
[Networking] PDTS ballot comment 034 (GB21): Consider ip::address::is_loopback() and ip::address_v6::is_loopback() behaviour for IPv4-mapped IPv6 addresses
https://wg21.link/lewg306




-
d:lewg307
LEWG307

CLOSED
[Networking] PDTS ballot comment 018 (GB9): user-provided overloads of buffer_size intended?
https://wg21.link/lewg307




-
d:lewg308
LEWG308

WORDING_REVIEW
apply() for synchronized_value<T>
https://wg21.link/lewg308




-
d:lewg309
LEWG309

DESIGN_REVIEW
Integrating simd with parallel algorithms and executors
https://wg21.link/lewg309




-
d:lewg31
LEWG31

READY
make_array
https://wg21.link/lewg31




-
d:lewg310
LEWG310

DESIGN_REVIEW
Distributed Counters
https://wg21.link/lewg310




-
d:lewg311
LEWG311

ADOPTED
Reviewing Deprecated Facilities of C++17 for C++20
https://wg21.link/lewg311




-
d:lewg312
LEWG312

CLOSED
Crochemore-Perrin search algorithm for std::search
https://wg21.link/lewg312




-
d:lewg313
LEWG313

SG_REVIEW
Floating point value access for std::ratio
https://wg21.link/lewg313




-
d:lewg314
LEWG314

ADOPTED
Switch the Ranges TS to Use Variable Concepts
https://wg21.link/lewg314




-
d:lewg315
LEWG315

ADOPTED
Improvements to library class template argument deduction
https://wg21.link/lewg315




-
d:lewg316
LEWG316

DESIGN_REVIEW
Support for contract based programming in C++
https://wg21.link/lewg316




-
d:lewg317
LEWG317

ADOPTED
variant and optional should propagate copy/move triviality
https://wg21.link/lewg317




-
d:lewg318
LEWG318

ADOPTED
de-pessimize legacy <numeric> algorithms with std::move
https://wg21.link/lewg318




-
d:lewg319
LEWG319

WORDING_REVIEW
Math Constants
https://wg21.link/lewg319




-
d:lewg32
LEWG32

DESIGN_REVIEW
Destructive Move
https://wg21.link/lewg32




-
d:lewg320
LEWG320

CLOSED
Add c_array() member function to std::array
https://wg21.link/lewg320




-
d:lewg321
LEWG321

NEEDS_PAPER
User-defined exception information and diagnostic information in exception objects
https://wg21.link/lewg321




-
d:lewg322
LEWG322

WORDING_REVIEW
Text Formatting
https://wg21.link/lewg322




-
d:lewg323
LEWG323

ADOPTED
Improving the Return Value of Erase-Like Algorithms
https://wg21.link/lewg323




-
d:lewg324
LEWG324

CLOSED
C++ Monadic interface
https://wg21.link/lewg324




-
d:lewg325
LEWG325

CLOSED
pointer_traits utility to convert to raw pointer
https://wg21.link/lewg325




-
d:lewg326
LEWG326

CLOSED
Deprecate Certain Declarations in the Global Namespace
https://wg21.link/lewg326




-
d:lewg327
LEWG327

DESIGN_REVIEW
slot_map Container
https://wg21.link/lewg327




-
d:lewg328
LEWG328

ADOPTED
Repairing elementary string conversions
https://wg21.link/lewg328




-
d:lewg329
LEWG329

CLOSED
[Networking] PDTS ballot comments US 9 and US 10
https://wg21.link/lewg329




-
d:lewg33
LEWG33

ADOPTED
Safe conversions in unique_ptr<T[]>
https://wg21.link/lewg33




-
d:lewg330
LEWG330

NEEDS_PAPER
Implicit and Explicit Conversions
https://wg21.link/lewg330




-
d:lewg331
LEWG331

SG_REVIEW
A Proposal to add wide_int Template Class
https://wg21.link/lewg331




-
d:lewg332
LEWG332

SG_REVIEW
Reducing <ratio>
https://wg21.link/lewg332




-
d:lewg333
LEWG333

SG_REVIEW
Numeric Traits for Type Composition
https://wg21.link/lewg333




-
d:lewg334
LEWG334

DESIGN_REVIEW
Template Library for Parallel For Loops
https://wg21.link/lewg334




-
d:lewg335
LEWG335

CLOSED
Adopt atomic<shared_ptr> from concurrency TS
https://wg21.link/lewg335




-
d:lewg336
LEWG336

SG_REVIEW
Composition of Arithmetic Types
https://wg21.link/lewg336




-
d:lewg337
LEWG337

NEEDS_PAPER
C++ Latches
https://wg21.link/lewg337




-
d:lewg338
LEWG338

CLOSED
Standard Library Specification in a Concepts and Contracts World
https://wg21.link/lewg338




-
d:lewg339
LEWG339

CLOSED
Library Support for the Spaceship (Comparison) Operaton
https://wg21.link/lewg339




-
d:lewg34
LEWG34

DESIGN_REVIEW
Need type-erased wrappers for move-only callable objects
https://wg21.link/lewg34




-
d:lewg340
LEWG340

WORDING_REVIEW
function_ref: a non-owning reference to a Callable
https://wg21.link/lewg340




-
d:lewg341
LEWG341

CLOSED
ValuedOrError and ValueOrNone types
https://wg21.link/lewg341




-
d:lewg342
LEWG342

CLOSED
Keep alias syntax extendable
https://wg21.link/lewg342




-
d:lewg343
LEWG343

CLOSED
No More Nested Namespaces in Library Design
https://wg21.link/lewg343




-
d:lewg344
LEWG344

ADOPTED
Comparing Unordered Containers
https://wg21.link/lewg344




-
d:lewg345
LEWG345

CLOSED
Ranges Naming
https://wg21.link/lewg345




-
d:lewg346
LEWG346

ADOPTED
Manipulators for C++ Synchronized Buffered Ostream
https://wg21.link/lewg346




-
d:lewg347
LEWG347

CLOSED
Using Concepts and requires in the C++ Standard Library
https://wg21.link/lewg347




-
d:lewg348
LEWG348

CLOSED
hash_combine() Again
https://wg21.link/lewg348




-
d:lewg349
LEWG349

NEEDS_PAPER
construct() shall Return the Replaced Address
https://wg21.link/lewg349




-
d:lewg35
LEWG35

ADOPTED
Minimal incomplete type support for standard containers
https://wg21.link/lewg35




-
d:lewg350
LEWG350

ADOPTED
visit<R>: Explicit Return Type for visit
https://wg21.link/lewg350




-
d:lewg351
LEWG351

WORDING_REVIEW
Comparing Containers
https://wg21.link/lewg351




-
d:lewg352
LEWG352

DESIGN_REVIEW
A conditional transform algorithm for C++
https://wg21.link/lewg352




-
d:lewg353
LEWG353

CLOSED
RAII Interface for Deferred Reclamation
https://wg21.link/lewg353




-
d:lewg354
LEWG354

CLOSED
Range Adaptors and Utilities
https://wg21.link/lewg354




-
d:lewg355
LEWG355

DESIGN_REVIEW
Effect of operator<=> on the C++ Standard Library
https://wg21.link/lewg355




-
d:lewg356
LEWG356

ADOPTED
Implicit conversion traits and utility functions
https://wg21.link/lewg356




-
d:lewg357
LEWG357

ADOPTED
Add shift to <algorithm>
https://wg21.link/lewg357




-
d:lewg358
LEWG358

DESIGN_REVIEW
Extensions to C++ for Short Float Type
https://wg21.link/lewg358




-
d:lewg359
LEWG359

DESIGN_REVIEW
Endian Library Request for Comments
https://wg21.link/lewg359




-
d:lewg36
LEWG36

NEEDS_PAPER
Develop guidelines for the use of constexpr
https://wg21.link/lewg36




-
d:lewg360
LEWG360

NEEDS_PAPER
Applying Concepts to the Standard Library
https://wg21.link/lewg360




-
d:lewg361
LEWG361

WORDING_REVIEW
Safe integral comparisons
https://wg21.link/lewg361




-
d:lewg362
LEWG362

CLOSED
std::vector Destruction Order
https://wg21.link/lewg362




-
d:lewg363
LEWG363

ADOPTED
<version>, to include implementation-specific meta-information
https://wg21.link/lewg363




-
d:lewg364
LEWG364

CLOSED
regex_iterator should be iterable
https://wg21.link/lewg364




-
d:lewg365
LEWG365

ADOPTED
std::function move operations should be noexcept
https://wg21.link/lewg365




-
d:lewg366
LEWG366

DESIGN_REVIEW
Towards meaningful fancy pointers
https://wg21.link/lewg366




-
d:lewg367
LEWG367

NEEDS_PAPER
Monadic operations for std::optional
https://wg21.link/lewg367




-
d:lewg368
LEWG368

CLOSED
Best practices and issues with <system_error>
https://wg21.link/lewg368




-
d:lewg369
LEWG369

DESIGN_REVIEW
A friendlier tuple get
https://wg21.link/lewg369




-
d:lewg37
LEWG37

CLOSED
A constexpr bitwise operations library for C++
https://wg21.link/lewg37




-
d:lewg370
LEWG370

NEEDS_PAPER
SFINAE-friendly std::bind
https://wg21.link/lewg370




-
d:lewg371
LEWG371

DESIGN_REVIEW
Update freestanding requirements
https://wg21.link/lewg371




-
d:lewg372
LEWG372

DESIGN_REVIEW
Fixed-Point Real Numbers
https://wg21.link/lewg372




-
d:lewg373
LEWG373

WORDING_REVIEW
Well-behaved interpolation for numbers and pointers
https://wg21.link/lewg373




-
d:lewg377
LEWG377

INCUBATION
C++ Concurrent Communication Queues
https://wg21.link/lewg377




-
d:lewg379
LEWG379

DESIGN_REVIEW
P0443: A Unified Executors Proposal for C++
https://wg21.link/lewg379




-
d:lewg38
LEWG38

CLOSED
Relax the allocator requirements on vector so that the small object optimization is allowed
https://wg21.link/lewg38




-
d:lewg39
LEWG39

ADOPTED
basic_string(const charT*, size_type, const Allocator&) requires clause too restrictive
https://wg21.link/lewg39




-
d:lewg391
LEWG391

CLOSED
Rebase the Parallelism TS onto the C++17 Standard
https://wg21.link/lewg391




-
d:lewg4
LEWG4

ADOPTED
Fixes for optional objects
https://wg21.link/lewg4




-
d:lewg40
LEWG40

ADOPTED
Simplified partial function application
https://wg21.link/lewg40




-
d:lewg403
LEWG403

CLOSED
Rebase the Parallelism TS onto the C++17 Standard
https://wg21.link/lewg403




-
d:lewg409
LEWG409

ADOPTED
Static reflection of functions
https://wg21.link/lewg409




-
d:lewg41
LEWG41

NEEDS_PAPER
Type Trait is_range<T>
https://wg21.link/lewg41




-
d:lewg410
LEWG410

ADOPTED
Symmetry for spaceship
https://wg21.link/lewg410




-
d:lewg411
LEWG411

ADOPTED
Standard Library Concepts
https://wg21.link/lewg411




-
d:lewg412
LEWG412

CLOSED
reference_wrapper for incomplete types
https://wg21.link/lewg412




-
d:lewg413
LEWG413

CLOSED
variant and optional should propagate copy/move triviality
https://wg21.link/lewg413




-
d:lewg414
LEWG414

ADOPTED
Extending the noexcept Policy
https://wg21.link/lewg414




-
d:lewg415
LEWG415

CLOSED
Naming implementation-defined simd_abi tag types
https://wg21.link/lewg415




-
d:lewg416
LEWG416

DESIGN_REVIEW
Heterogeneous lookup for unordered containers
https://wg21.link/lewg416




-
d:lewg417
LEWG417

DESIGN_REVIEW
Move-only iterators
https://wg21.link/lewg417




-
d:lewg418
LEWG418

DESIGN_REVIEW
Adding support for type-based metaprogramming to the standard library
https://wg21.link/lewg418




-
d:lewg419
LEWG419

DESIGN_REVIEW
P0546 - Span - foundation for the future
https://wg21.link/lewg419




-
d:lewg42
LEWG42

READY
Unspecialized std::tuple_size should be defined
https://wg21.link/lewg42




-
d:lewg420
LEWG420

CLOSED
Type Requirements for <numeric> Algorithms
https://wg21.link/lewg420




-
d:lewg421
LEWG421

DESIGN_REVIEW
P0856 - Restrict Access Property for mdspan and span
https://wg21.link/lewg421




-
d:lewg422
LEWG422

DESIGN_REVIEW
Fixing the partial_order comparison algorithm
https://wg21.link/lewg422




-
d:lewg423
LEWG423

WORDING_REVIEW
A Proposal to add stack trace library
https://wg21.link/lewg423




-
d:lewg424
LEWG424

DESIGN_REVIEW
An Ontology for Properties of mdspan
https://wg21.link/lewg424




-
d:lewg425
LEWG425

ADOPTED
Renaming cell<> to latest<>
https://wg21.link/lewg425




-
d:lewg426
LEWG426

CLOSED
Define basic_string_view(nullptr) and basic_string(nullptr)
https://wg21.link/lewg426




-
d:lewg427
LEWG427

WORDING_REVIEW
Tightening the constraints on std::function
https://wg21.link/lewg427




-
d:lewg428
LEWG428

WORDING_REVIEW
Introducing a <smart_ptr> header
https://wg21.link/lewg428




-
d:lewg429
LEWG429

ADOPTED
string::reserve Should Not Shrink
https://wg21.link/lewg429




-
d:lewg43
LEWG43

WORDING_REVIEW
Extend INVOKE to support types convertible to target class
https://wg21.link/lewg43




-
d:lewg430
LEWG430

DESIGN_REVIEW
allocate_unique and allocator_delete
https://wg21.link/lewg430




-
d:lewg431
LEWG431

CLOSED
Making std::underlying_type SFINAE-friendly
https://wg21.link/lewg431




-
d:lewg432
LEWG432

DIRECTION_REVIEW
Crochemore-Perrin search algorithm for std::search
https://wg21.link/lewg432




-
d:lewg433
LEWG433

WORDING_REVIEW
fixed_capacity_vector
https://wg21.link/lewg433




-
d:lewg434
LEWG434

INCUBATION
A Proposal for a Universally Unique Identifier Library
https://wg21.link/lewg434




-
d:lewg435
LEWG435

CLOSED
User-defined Literals for std::filesystem::path
https://wg21.link/lewg435




-
d:lewg436
LEWG436

ADOPTED
The identity metafunction
https://wg21.link/lewg436




-
d:lewg437
LEWG437

ADOPTED
Integrating feature-test macros into the C++ WD
https://wg21.link/lewg437




-
d:lewg438
LEWG438

ADOPTED
Merging the Ranges TS
https://wg21.link/lewg438




-
d:lewg439
LEWG439

ADOPTED
Add symmetric coroutine control transfer
https://wg21.link/lewg439




-
d:lewg44
LEWG44

ADOPTED
A proposal to add invoke() function template
https://wg21.link/lewg44




-
d:lewg440
LEWG440

ADOPTED
char8_t: A type for UTF-8 characters and strings
https://wg21.link/lewg440




-
d:lewg441
LEWG441

ADOPTED
std::is_constant_evaluated()
https://wg21.link/lewg441




-
d:lewg442
LEWG442

WORDING_REVIEW
Standard containers and constexpr
https://wg21.link/lewg442




-
d:lewg443
LEWG443

ADOPTED
Standard Library Compatibility
https://wg21.link/lewg443




-
d:lewg444
LEWG444

INCUBATION
How to catch an exception_ptr without even try-ing
https://wg21.link/lewg444




-
d:lewg445
LEWG445

DESIGN_REVIEW
realloc() for C++
https://wg21.link/lewg445




-
d:lewg446
LEWG446

CLOSED
Runtime type introspection with std::exception ptr
https://wg21.link/lewg446




-
d:lewg447
LEWG447

ADOPTED
Finding the right set of traits for simd<T>
https://wg21.link/lewg447




-
d:lewg448
LEWG448

CLOSED
Better, Safer Range Access Customization Points
https://wg21.link/lewg448




-
d:lewg449
LEWG449

INCUBATION
A few additional type manipulation utilities
https://wg21.link/lewg449




-
d:lewg45
LEWG45

CLOSED
Should the rvalue-ref-qualified overloads for optional really return a value?
https://wg21.link/lewg45




-
d:lewg450
LEWG450

ADOPTED
Smart pointer creation with default initialization
https://wg21.link/lewg450




-
d:lewg451
LEWG451

ADOPTED
constexpr comparison operators for std::array
https://wg21.link/lewg451




-
d:lewg452
LEWG452

WORDING_REVIEW
Usability Enhancements for std::span
https://wg21.link/lewg452




-
d:lewg453
LEWG453

NEEDS_PAPER
A call for a Data Persistence (iostream v2) study group
https://wg21.link/lewg453




-
d:lewg454
LEWG454

NEEDS_PAPER
SG14 status_code and standard error object for P0709 Zero-overhead deterministic exceptions
https://wg21.link/lewg454




-
d:lewg455
LEWG455

DESIGN_REVIEW
std::filesystem::path_view
https://wg21.link/lewg455




-
d:lewg456
LEWG456

DESIGN_REVIEW
Low level file i/o library
https://wg21.link/lewg456




-
d:lewg457
LEWG457

ADOPTED
Misc constexpr bits
https://wg21.link/lewg457




-
d:lewg458
LEWG458

CLOSED
Rangify the uninitialised memory algorithms!
https://wg21.link/lewg458




-
d:lewg459
LEWG459

NEEDS_PAPER
Input range adaptors
https://wg21.link/lewg459




-
d:lewg46
LEWG46

DESIGN_REVIEW
Fix iterator categories
https://wg21.link/lewg46




-
d:lewg460
LEWG460

CLOSED
Deep Integration of the Ranges TS
https://wg21.link/lewg460




-
d:lewg461
LEWG461

DESIGN_REVIEW
A proposal for a type trait to detect scoped enumerations
https://wg21.link/lewg461




-
d:lewg462
LEWG462

DESIGN_REVIEW
std::experimental::expected LWG design issues
https://wg21.link/lewg462




-
d:lewg463
LEWG463

DESIGN_REVIEW
A Modest Executor Proposal
https://wg21.link/lewg463




-
d:lewg464
LEWG464

DIRECTION_REVIEW
Adapting Asio to use std::expected
https://wg21.link/lewg464




-
d:lewg465
LEWG465

CLOSED
On empty structs in the standard library
https://wg21.link/lewg465




-
d:lewg466
LEWG466

WORDING_REVIEW
Move resource_adaptor from Library TS to the C++ WP
https://wg21.link/lewg466




-
d:lewg467
LEWG467

CLOSED
Sizes Should Only span Unsigned
https://wg21.link/lewg467




-
d:lewg468
LEWG468

ADOPTED
<chrono> zero(), min(), and max() should be noexcept
https://wg21.link/lewg468




-
d:lewg469
LEWG469

ADOPTED
std::assume_aligned
https://wg21.link/lewg469




-
d:lewg47
LEWG47

ADOPTED
Task Regions
https://wg21.link/lewg47




-
d:lewg470
LEWG470

DIRECTION_REVIEW
Container support for implicit lifetime types
https://wg21.link/lewg470




-
d:lewg471
LEWG471

DESIGN_REVIEW
P0860: Atomic Access Property for mdspan
https://wg21.link/lewg471




-
d:lewg472
LEWG472

DIRECTION_REVIEW
P0958: Networking TS changes to support proposed Executors TS
https://wg21.link/lewg472




-
d:lewg473
LEWG473

DESIGN_REVIEW
std::async() in an Executors World
https://wg21.link/lewg473




-
d:lewg474
LEWG474

SG_REVIEW
[P1053] Future-proofing continuations for executors
https://wg21.link/lewg474




-
d:lewg475
LEWG475

NEEDS_PAPER
A Cooperatively Interruptible Joining Thread, Rev 2
https://wg21.link/lewg475




-
d:lewg476
LEWG476

CLOSED
Concurrency TS is growing: Concurrent Utilities and Data Structures
https://wg21.link/lewg476




-
d:lewg477
LEWG477

DESIGN_REVIEW
P0836:Introduce Parallelism to the Ranges TS
https://wg21.link/lewg477




-
d:lewg478
LEWG478

ADOPTED
Feedback on P0214
https://wg21.link/lewg478




-
d:lewg479
LEWG479

NEEDS_PAPER
Support C atomics in C++
https://wg21.link/lewg479




-
d:lewg48
LEWG48

DESIGN_REVIEW
Searching and Manipulation of Parameter Packs
https://wg21.link/lewg48




-
d:lewg480
LEWG480

NEEDS_PAPER
String View Conversion for Function Arguments
https://wg21.link/lewg480




-
d:lewg481
LEWG481

WORDING_REVIEW
Making std::vector constexpr
https://wg21.link/lewg481




-
d:lewg482
LEWG482

ADOPTED
Constexpr in std::pointer_traits
https://wg21.link/lewg482




-
d:lewg483
LEWG483

CLOSED
Constant Pointer View - std::as_const Strikes Back!
https://wg21.link/lewg483




-
d:lewg484
LEWG484

CLOSED
Constexpr iterator requirements
https://wg21.link/lewg484




-
d:lewg485
LEWG485

DESIGN_REVIEW
A Function Returning Whether An Underlying Type Value Is a Valid Enumerator of a Given Enumeration
https://wg21.link/lewg485




-
d:lewg486
LEWG486

DESIGN_REVIEW
namespace std { namespace fs = filesystem; }
https://wg21.link/lewg486




-
d:lewg487
LEWG487

DESIGN_REVIEW
Let strong_order Truly Be a Customization Point!
https://wg21.link/lewg487




-
d:lewg49
LEWG49

ADOPTED
introduce the term "contiguous iterator"
https://wg21.link/lewg49




-
d:lewg491
LEWG491

DESIGN_REVIEW
Fractional Numeric Type
https://wg21.link/lewg491




-
d:lewg493
LEWG493

WORDING_REVIEW
Target Vectorization Policies from Parallelism V2 TS to C++20
https://wg21.link/lewg493




-
d:lewg494
LEWG494

WORDING_REVIEW
Fixing Atomic Initialization
https://wg21.link/lewg494




-
d:lewg495
LEWG495

CLOSED
Contiguous Ranges
https://wg21.link/lewg495




-
d:lewg496
LEWG496

ADOPTED
Should Span Be Regular
https://wg21.link/lewg496




-
d:lewg497
LEWG497

WORDING_REVIEW
Add coroutine task type
https://wg21.link/lewg497




-
d:lewg498
LEWG498

CLOSED
Improving atomic_flag
https://wg21.link/lewg498




-
d:lewg499
LEWG499

NEEDS_PAPER
Add c_array() member function to std::array
https://wg21.link/lewg499




-
d:lewg5
LEWG5

ADOPTED
not_fn()
https://wg21.link/lewg5




-
d:lewg50
LEWG50

NEEDS_WORDING
raw_storage_iterator needs rvalue ref support
https://wg21.link/lewg50




-
d:lewg500
LEWG500

DESIGN_REVIEW
P1122R0: Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)
https://wg21.link/lewg500




-
d:lewg501
LEWG501

WORDING_REVIEW
Function to mark unreachable code
https://wg21.link/lewg501




-
d:lewg502
LEWG502

SG_REVIEW
fiber_handle - fibers without scheduler
https://wg21.link/lewg502




-
d:lewg503
LEWG503

CLOSED
Everyone Deserves a Little Order
https://wg21.link/lewg503




-
d:lewg504
LEWG504

SG_REVIEW
More simd<> operations
https://wg21.link/lewg504




-
d:lewg505
LEWG505

WORDING_REVIEW
Precalculated hash values in lookup
https://wg21.link/lewg505




-
d:lewg506
LEWG506

CLOSED
Runtime type introspection with std::exception ptr
https://wg21.link/lewg506




-
d:lewg507
LEWG507

DESIGN_REVIEW
Making std::string constexpr
https://wg21.link/lewg507




-
d:lewg508
LEWG508

DESIGN_REVIEW
std::embed
https://wg21.link/lewg508




-
d:lewg509
LEWG509

INCUBATION
Refining standard library support for Class Template Argument Deduction
https://wg21.link/lewg509




-
d:lewg51
LEWG51

READY
bool_constant
https://wg21.link/lewg51




-
d:lewg510
LEWG510

NEEDS_PAPER
Optimized Initialization for basic_string and vector
https://wg21.link/lewg510




-
d:lewg511
LEWG511

DIRECTION_REVIEW
Efficient composition with DynamicBuffer
https://wg21.link/lewg511




-
d:lewg512
LEWG512

DESIGN_REVIEW
web_view
https://wg21.link/lewg512




-
d:lewg513
LEWG513

DESIGN_REVIEW
out_ptr - a scalable output pointer abstraction
https://wg21.link/lewg513




-
d:lewg514
LEWG514

DIRECTION_REVIEW
Networking TS Associations For Call Wrappers
https://wg21.link/lewg514




-
d:lewg515
LEWG515

WORDING_REVIEW
The C++20 Synchronization Library
https://wg21.link/lewg515




-
d:lewg516
LEWG516

DIRECTION_REVIEW
Buffer Sequence Adaptors
https://wg21.link/lewg516




-
d:lewg517
LEWG517

DESIGN_REVIEW
Printing volatile Pointers
https://wg21.link/lewg517




-
d:lewg518
LEWG518

DESIGN_REVIEW
Constexpr regex
https://wg21.link/lewg518




-
d:lewg519
LEWG519

CLOSED
Type Erased Iterators for modern C++
https://wg21.link/lewg519




-
d:lewg52
LEWG52

ADOPTED
Ranges for the Standard Library
https://wg21.link/lewg52




-
d:lewg520
LEWG520

CLOSED
ADD TEST POLYMORPHIC MEMORY RESOURCE TO THE STANDARD LIBRARY
https://wg21.link/lewg520




-
d:lewg521
LEWG521

DESIGN_REVIEW
The Concept of Memory Allocator
https://wg21.link/lewg521




-
d:lewg522
LEWG522

NEEDS_PAPER
a simple and practical optional reference for C++
https://wg21.link/lewg522




-
d:lewg523
LEWG523

DESIGN_REVIEW
C++ Compile
https://wg21.link/lewg523




-
d:lewg524
LEWG524

CLOSED
New names for the power-of-2 templates
https://wg21.link/lewg524




-
d:lewg525
LEWG525

WORDING_REVIEW
When do you actually use <=>?
https://wg21.link/lewg525




-
d:lewg526
LEWG526

WORDING_REVIEW
A type trait for std::compare_3way()'s type
https://wg21.link/lewg526




-
d:lewg527
LEWG527

WORDING_REVIEW
Adding operator<=> to types that are not currently comparable
https://wg21.link/lewg527




-
d:lewg528
LEWG528

DESIGN_REVIEW
Making <system_error> constexpr
https://wg21.link/lewg528




-
d:lewg529
LEWG529

CLOSED
Value-based std::error_category comparison
https://wg21.link/lewg529




-
d:lewg53
LEWG53

ADOPTED
Source-Code Information Capture
https://wg21.link/lewg53




-
d:lewg530
LEWG530

CLOSED
A non-allocating overload of error_category::message()
https://wg21.link/lewg530




-
d:lewg531
LEWG531

CLOSED
Adding error_category::failed()
https://wg21.link/lewg531




-
d:lewg532
LEWG532

CLOSED
Variant direct comparisons
https://wg21.link/lewg532




-
d:lewg533
LEWG533

DESIGN_REVIEW
Range constructors for standard containers and views
https://wg21.link/lewg533




-
d:lewg534
LEWG534

DESIGN_REVIEW
Movability of Single-pass Iterators
https://wg21.link/lewg534




-
d:lewg535
LEWG535

NEEDS_PAPER
Adopt source_location from Library Fundamentals V3 for C++20
https://wg21.link/lewg535




-
d:lewg536
LEWG536

ADOPTED
Adopt Consistent Container Erasure from Library Fundamentals 2 for C++20
https://wg21.link/lewg536




-
d:lewg537
LEWG537

ADOPTED
Completing the Rebase of Library Fundamentals, Version 3, Working Draft
https://wg21.link/lewg537




-
d:lewg538
LEWG538

NEEDS_PAPER
A Standard flat_set
https://wg21.link/lewg538




-
d:lewg539
LEWG539

DESIGN_REVIEW
find_backward
https://wg21.link/lewg539




-
d:lewg54
LEWG54

CLOSED
Data-Invariant (constant time/side-channel-resistant) Functions
https://wg21.link/lewg54




-
d:lewg540
LEWG540

NEEDS_PAPER
Signed size() functions
https://wg21.link/lewg540




-
d:lewg541
LEWG541

WORDING_REVIEW
Shift-by-negative in shift_left and shift_right
https://wg21.link/lewg541




-
d:lewg542
LEWG542

WORDING_REVIEW
Rangify New Algorithms
https://wg21.link/lewg542




-
d:lewg543
LEWG543

ADOPTED
Fixing Relations
https://wg21.link/lewg543




-
d:lewg544
LEWG544

NEEDS_PAPER
Extension by inspecting members of User Defined Types?
https://wg21.link/lewg544




-
d:lewg545
LEWG545

WORDING_REVIEW
A more constexpr bitset
https://wg21.link/lewg545




-
d:lewg546
LEWG546

WORDING_REVIEW
Ranges Design Cleanup
https://wg21.link/lewg546




-
d:lewg547
LEWG547

NEEDS_PAPER
A view of 0 or 1 elements: view::maybe
https://wg21.link/lewg547




-
d:lewg548
LEWG548

WORDING_REVIEW
Integer Width Literals
https://wg21.link/lewg548




-
d:lewg549
LEWG549

CLOSED
std::ranges::less<> Should Be More!
https://wg21.link/lewg549




-
d:lewg55
LEWG55

ADOPTED
TriviallyCopyable reference_wrapper
https://wg21.link/lewg55




-
d:lewg550
LEWG550

NEEDS_PAPER
ostream_joiner
https://wg21.link/lewg550




-
d:lewg551
LEWG551

WORDING_REVIEW
Spaceship library update
https://wg21.link/lewg551




-
d:lewg552
LEWG552

DESIGN_REVIEW
Unifying the many ways to compare
https://wg21.link/lewg552




-
d:lewg553
LEWG553

NEEDS_PAPER
Comparison Concepts
https://wg21.link/lewg553




-
d:lewg554
LEWG554

DESIGN_REVIEW
unique_val: a default-on-move type
https://wg21.link/lewg554




-
d:lewg555
LEWG555

DESIGN_REVIEW
secure_val: a secure-clear-on-move type
https://wg21.link/lewg555




-
d:lewg556
LEWG556

CLOSED
Remove return type deduction in std::apply
https://wg21.link/lewg556




-
d:lewg557
LEWG557

DESIGN_REVIEW
Tuple application traits
https://wg21.link/lewg557




-
d:lewg558
LEWG558

WORDING_REVIEW
to_array from LFTS with updates
https://wg21.link/lewg558




-
d:lewg559
LEWG559

DESIGN_REVIEW
Feedback on 2D Graphics
https://wg21.link/lewg559




-
d:lewg56
LEWG56

ADOPTED
Remove auto_ptr
https://wg21.link/lewg56




-
d:lewg560
LEWG560

WORDING_REVIEW
Byteswapping for fun&&nuf
https://wg21.link/lewg560




-
d:lewg561
LEWG561

CLOSED
A Class for Status and Optional Value
https://wg21.link/lewg561




-
d:lewg562
LEWG562

CLOSED
Explicitly implicifying explicit constructors
https://wg21.link/lewg562




-
d:lewg563
LEWG563

CLOSED
Fixing allocator usage for operator + (basic_string)
https://wg21.link/lewg563




-
d:lewg564
LEWG564

ADOPTED
Fixing allocator usage for operator + (basic_string)
https://wg21.link/lewg564




-
d:lewg565
LEWG565

NEEDS_PAPER
Unified executors proposal
https://wg21.link/lewg565




-
d:lewg566
LEWG566

INCUBATION
std::environment and std::arguments
https://wg21.link/lewg566




-
d:lewg57
LEWG57

CONFIRMED
Remove deprecated library features
https://wg21.link/lewg57




-
d:lewg58
LEWG58

ADOPTED
Remove random_shuffle()
https://wg21.link/lewg58




-
d:lewg59
LEWG59

ADOPTED
Remove old function objects and binders
https://wg21.link/lewg59




-
d:lewg6
LEWG6

WORDING_REVIEW
Scoped Resource - Generic RAII Wrapper for the Standard Library
https://wg21.link/lewg6




-
d:lewg60
LEWG60

DESIGN_REVIEW
Utilities for contiguous iterators
https://wg21.link/lewg60




-
d:lewg61
LEWG61

CLOSED
Alignment helpers
https://wg21.link/lewg61




-
d:lewg62
LEWG62

CLOSED
Size and alignment control for std::bitset
https://wg21.link/lewg62




-
d:lewg63
LEWG63

CLOSED
Fast ASCII Character Manipulation
https://wg21.link/lewg63




-
d:lewg64
LEWG64

ADOPTED
Latches and Barriers
https://wg21.link/lewg64




-
d:lewg65
LEWG65

ADOPTED
std::rand replacement
https://wg21.link/lewg65




-
d:lewg66
LEWG66

ADOPTED
Variant
https://wg21.link/lewg66




-
d:lewg67
LEWG67

DESIGN_REVIEW
array_view extensions: storage ordering, operator(), range access, and data()
https://wg21.link/lewg67




-
d:lewg68
LEWG68

ADOPTED
Networking Library
https://wg21.link/lewg68




-
d:lewg69
LEWG69

ADOPTED
Static reflection
https://wg21.link/lewg69




-
d:lewg7
LEWG7

ADOPTED
Extending make_shared to Support Arrays
https://wg21.link/lewg7




-
d:lewg70
LEWG70

SG_REVIEW
Reflection Type Traits For Classes, Unions and Enumerations
https://wg21.link/lewg70




-
d:lewg71
LEWG71

ADOPTED
Editorial: Order of functions in section 5.8 and 5.9 are inconsistent.
https://wg21.link/lewg71




-
d:lewg72
LEWG72

CLOSED
bad_optional_access should derive from std::exception, not std::logic_error
https://wg21.link/lewg72




-
d:lewg73
LEWG73

CONFIRMED
Editorial - some functions in optional have remarks about constexpr; others do not.
https://wg21.link/lewg73




-
d:lewg74
LEWG74

NEEDS_PAPER
Some tuple and pair constructors need magic SFINAE "does not participate in overload resolution" wording
https://wg21.link/lewg74




-
d:lewg75
LEWG75

CLOSED
Optional specifies that a constructor that takes a forwarding reference will move from it
https://wg21.link/lewg75




-
d:lewg76
LEWG76

NEEDS_PAPER
Consider supporting fancy pointers in propagate_const
https://wg21.link/lewg76




-
d:lewg77
LEWG77

CLOSED
User-defined literals for additional arithmetic types
https://wg21.link/lewg77




-
d:lewg78
LEWG78

CLOSED
'end' arguments to advance(), next(), and prev()
https://wg21.link/lewg78




-
d:lewg79
LEWG79

NEEDS_WORDING
An absolute-difference function
https://wg21.link/lewg79




-
d:lewg8
LEWG8

ADOPTED
Greatest Common Divisor and Least Common Multiple
https://wg21.link/lewg8




-
d:lewg80
LEWG80

WORDING_REVIEW
P0009 - Multidimensional Array View with Polymorphic Layout
https://wg21.link/lewg80




-
d:lewg81
LEWG81

CLOSED
vector::release to extract vector's internal array
https://wg21.link/lewg81




-
d:lewg82
LEWG82

DESIGN_REVIEW
Add bitset::size_type
https://wg21.link/lewg82




-
d:lewg83
LEWG83

CLOSED
Make advance(it) equivalent to ++it
https://wg21.link/lewg83




-
d:lewg84
LEWG84

ADOPTED
An easy conversion to const
https://wg21.link/lewg84




-
d:lewg85
LEWG85

DESIGN_REVIEW
Design future customization points
https://wg21.link/lewg85




-
d:lewg86
LEWG86

NEEDS_PAPER
Improve or replace iostreams
https://wg21.link/lewg86




-
d:lewg87
LEWG87

CLOSED
Make vector support non-moveable types
https://wg21.link/lewg87




-
d:lewg88
LEWG88

ADOPTED
Adding [nothrow-]swappable traits
https://wg21.link/lewg88




-
d:lewg89
LEWG89

CLOSED
Standard Library Support for the C++ Detection Idiom
https://wg21.link/lewg89




-
d:lewg9
LEWG9

WORDING_REVIEW
Allocator-aware regular expressions
https://wg21.link/lewg9




-
d:lewg90
LEWG90

ADOPTED
Move the Mathematical Special Functions into C++
https://wg21.link/lewg90




-
d:lewg91
LEWG91

ADOPTED
An is_callable trait
https://wg21.link/lewg91




-
d:lewg92
LEWG92

DESIGN_REVIEW
Message digests (includes cryptographic hashes)
https://wg21.link/lewg92




-
d:lewg93
LEWG93

ADOPTED
Merge Fundamentals v1 into v2
https://wg21.link/lewg93




-
d:lewg94
LEWG94

ADOPTED
Splicing Maps and Sets
https://wg21.link/lewg94




-
d:lewg95
LEWG95

DESIGN_REVIEW
std::decay_copy()
https://wg21.link/lewg95




-
d:lewg96
LEWG96

DESIGN_REVIEW
A compile-time string type
https://wg21.link/lewg96




-
d:lewg97
LEWG97

ADOPTED
shared_mutex (untimed)
https://wg21.link/lewg97




-
d:lewg98
LEWG98

READY
N4509 constexpr atomic<T>::is_always_lock_free
https://wg21.link/lewg98




-
d:lewg99
LEWG99

CLOSED
Unions with differing access control are not standard layout (but could be)
https://wg21.link/lewg99




-
d:lexicon-reqs
lexicon-reqs
29 October 2004
WD
Pronunciation Lexicon Specification (PLS) Version 1.0 Requirements
https://www.w3.org/TR/lexicon-reqs/




Paolo Baggia
Frank Scahill
-
d:lexicon-reqs-20010312
lexicon-reqs-20010312
12 March 2001
WD
Pronunciation Lexicon Specification (PLS) Version 1.0 Requirements
https://www.w3.org/TR/2001/WD-lexicon-reqs-20010312/
https://www.w3.org/TR/2001/WD-lexicon-reqs-20010312/



Paolo Baggia
Frank Scahill
-
d:lexicon-reqs-20041029
lexicon-reqs-20041029
29 October 2004
WD
Pronunciation Lexicon Specification (PLS) Version 1.0 Requirements
https://www.w3.org/TR/2004/WD-lexicon-reqs-20041029/
https://www.w3.org/TR/2004/WD-lexicon-reqs-20041029/



Paolo Baggia
Frank Scahill
-

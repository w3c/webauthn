d:d0003r5
D0003R5


Removing dynamic exception specifications
https://wg21.link/d0003r5




-
d:d0019
D0019


(Untitled)
https://wg21.link/d0019




-
d:d0019r8
D0019R8


Update to P0019r7 with requested LWG edits
https://wg21.link/d0019r8




-
d:d0053r3
D0053R3


after small group discussion ostreambuffer
https://wg21.link/d0053r3




-
d:d0057
D0057


Coroutine TS wording with sections 1-3 renumbered per ISO guidelines
https://wg21.link/d0057




-
d:d0057r7
D0057R7


Applied the changes recommeded during Nov 7 Core Review
https://wg21.link/d0057r7




-
d:d0057r9
D0057R9


Application of Rebase Coro to C++17 to the Coroutine Working Draft
https://wg21.link/d0057r9




-
d:d0067r5
D0067R5


(Untitled)
https://wg21.link/d0067r5




-
d:d0122r7
D0122R7


span, R7
https://wg21.link/d0122r7




-
d:d0156r1
D0156R1


Rename variadic lock_guard to scoped_lock in response to NB comments
https://wg21.link/d0156r1




-
d:d0156r2
D0156R2


scoped_lock update
https://wg21.link/d0156r2




-
d:d0192r5
D0192R5


Update of P0192R4 with open questions and SG-6 feedback.
https://wg21.link/d0192r5




-
d:d0194r6
D0194R6


Static Reflection
https://wg21.link/d0194r6




-
d:d0195r2
D0195R2


(Untitled)
https://wg21.link/d0195r2




-
d:d0201r5
D0201R5


Draft with revised polymorphic_value wording
https://wg21.link/d0201r5




-
d:d0201r6
D0201R6


Revised edition of polymorphic_value wording
https://wg21.link/d0201r6




-
d:d0211r2
D0211R2


Allocator-aware library wrappers for dynamic allocation
https://wg21.link/d0211r2




-
d:d0214r9
D0214R9


simd paper with less SFINAE requirements
https://wg21.link/d0214r9




-
d:d0250r3
D0250R3


(Untitled)
https://wg21.link/d0250r3




-
d:d0260r1
D0260R1


C++ Concurrent Queues
https://wg21.link/d0260r1




-
d:d0270r2
D0270R2


D0270R2: Revision of signal handlers paper
https://wg21.link/d0270r2




-
d:d0270r3
D0270R3


P0270R2 Signal handlers update, as requested
https://wg21.link/d0270r3




-
d:d0288r3
D0288R3


(Untitled)
https://wg21.link/d0288r3




-
d:d0288r4
D0288R4


(Untitled)
https://wg21.link/d0288r4




-
d:d0288r5
D0288R5


any_invocable
https://wg21.link/d0288r5




-
d:d0290r2
D0290R2


apply() for synchronized_values
https://wg21.link/d0290r2




-
d:d0298r2
D0298R2


D0298R2 std::byte proposal with updated wording
https://wg21.link/d0298r2




-
d:d0298r3
D0298R3


D0298R3 updated std::byte paper
https://wg21.link/d0298r3




-
d:d0306r2
D0306R2


Comma deletion and comma omission, draft R2
https://wg21.link/d0306r2




-
d:d0315r2
D0315R2


D0315R2 addressing CWG comments in Issaquah
https://wg21.link/d0315r2




-
d:d0323r7
D0323R7


D0323r7
https://wg21.link/d0323r7




-
d:d0325r3
D0325R3


to_array from LFTS revision 3 (draft after small group)
https://wg21.link/d0325r3




-
d:d0325r4
D0325R4


to_array with expects, feature-test macro
https://wg21.link/d0325r4




-
d:d0329r2
D0329R2


Designated Initialization Wording
https://wg21.link/d0329r2




-
d:d0330
D0330


D0330r8 Literal suffix for (signed) size_t
https://wg21.link/d0330




-
d:d0340r2
D0340R2


Making std::underlying_type SFINAE-friendly
https://wg21.link/d0340r2




-
d:d0350r3
D0350R3


Integrating simd with parallel algorithms
https://wg21.link/d0350r3




-
d:d0355r6
D0355R6


Date/time
https://wg21.link/d0355r6




-
d:d0355r7
D0355R7


Extending chrono to Calendars and Time Zones
https://wg21.link/d0355r7




-
d:d0356r5
D0356R5


(Untitled)
https://wg21.link/d0356r5




-
d:d0357r3
D0357R3


Updated to use new elements.
https://wg21.link/d0357r3




-
d:d0388r4
D0388R4


(Untitled)
https://wg21.link/d0388r4




-
d:d0401r2
D0401R2


Revised P0401R1, based on pre-meeting feedback
https://wg21.link/d0401r2




-
d:d0414r2
D0414R2


D0414r2 Merging shared_ptr changes from Library Fundamentals to C++17
https://wg21.link/d0414r2




-
d:d0417r1
D0417R1


C++17 should refer to ISO/IEC 10646 2014 instead of 1994 (R1)
https://wg21.link/d0417r1




-
d:d0424r3
D0424R3


D0424R3 - Templated string UDL
https://wg21.link/d0424r3




-
d:d0426r1
D0426R1


Constexpr for char traits along with asssign(char_type& c1, const char_type& c2) function
https://wg21.link/d0426r1




-
d:d0429r7
D0429R7


Updated flat_map wording.
https://wg21.link/d0429r7




-
d:d0429r8
D0429R8


Update flat_map wording.
https://wg21.link/d0429r8




-
d:d0430
D0430


https://docs.google.com/document/d/15uDEVDmuPXksdBdJlGPE5PiwkhVtklGIi4TVwDp1_a8/
https://wg21.link/d0430




-
d:d0430r1
D0430R1


https://docs.google.com/document/d/15uDEVDmuPXksdBdJlGPE5PiwkhVtklGIi4TVwDp1_a8/edit
https://wg21.link/d0430r1




-
d:d0430r2
D0430R2


Resolves filesystem NB comments US75/CA4, US76/CA5, US79/CA8 https://docs.google.com/document/d/15uDEVDmuPXksdBdJlGPE5PiwkhVtklGIi4TVwDp1_a8/edit
https://wg21.link/d0430r2




-
d:d0433r2
D0433R2


Toward a resolution of US7 and US14: Integrating template deduction for class templates into the standard library
https://wg21.link/d0433r2




-
d:d0452r1
D0452R1


Unifying Numeric Parallel Algorithms
https://wg21.link/d0452r1




-
d:d0454r1
D0454R1


(Untitled)
https://wg21.link/d0454r1




-
d:d0459r1
D0459R1


C++ Extensions for Ranges, Speculative Combined Proposal Document (now with Proxy Iterators!)
https://wg21.link/d0459r1




-
d:d0464r1
D0464R1


D0464R1 - Updated version of P0464R0
https://wg21.link/d0464r1




-
d:d0464r2
D0464R2


Updated version of P0464R1
https://wg21.link/d0464r2




-
d:d0466r5
D0466R5


LWG clarifications and fixes
https://wg21.link/d0466r5




-
d:d0467r1
D0467R1


Require at least ForwardIterator for parallelism
https://wg21.link/d0467r1




-
d:d0467r2
D0467R2


Revising Input/Output iterator categories for parallel algorithms
https://wg21.link/d0467r2




-
d:d0479r5
D0479R5


Likely/unlikely revision
https://wg21.link/d0479r5




-
d:d0482r4
D0482R4


(Untitled)
https://wg21.link/d0482r4




-
d:d0482r6
D0482R6


(Untitled)
https://wg21.link/d0482r6




-
d:d0490r0
D0490R0


(Untitled)
https://wg21.link/d0490r0




-
d:d0492r0
D0492R0


Proposed Resolution of C++17 National Body Comments for Filesystem(R0)
https://wg21.link/d0492r0




-
d:d0492r2
D0492R2


D0492R2 Proposed Resolution of C++17 National Body Comments for Filesystems(R2)
https://wg21.link/d0492r2




-
d:d0495r0
D0495R0


Concurrency Safety in C++ Data Structures
https://wg21.link/d0495r0




-
d:d0497r0
D0497R0


Fixes to shared_ptr support for arrays
https://wg21.link/d0497r0




-
d:d0500
D0500


(Untitled)
https://wg21.link/d0500




-
d:d0502
D0502


D0502
https://wg21.link/d0502




-
d:d0503r0
D0503R0


D0503R0: Fix for US154,US155, GB68
https://wg21.link/d0503r0




-
d:d0504r0
D0504R0


Revisiting in-place tag types for any/optional/variant
https://wg21.link/d0504r0




-
d:d0505r0
D0505R0


Wording for GB 50
https://wg21.link/d0505r0




-
d:d0507r0
D0507R0


(Untitled)
https://wg21.link/d0507r0




-
d:d0508r0
D0508R0


Wording for GB 58
https://wg21.link/d0508r0




-
d:d0509r0
D0509R0


PRs for GB41 and GB42: Updating “Restrictions on exception handling”
https://wg21.link/d0509r0




-
d:d0509r1
D0509R1


Restrictions on exception handling: final draft with LWG edits
https://wg21.link/d0509r1




-
d:d0510
D0510


(Untitled)
https://wg21.link/d0510




-
d:d0510r0
D0510R0


(Untitled)
https://wg21.link/d0510r0




-
d:d0511r1
D0511R1


Deduction guide for std::array
https://wg21.link/d0511r1




-
d:d0512r0
D0512R0


class template argument deduction nb us19,20
https://wg21.link/d0512r0




-
d:d0518r0
D0518R0


D0518r0: Restricting address reliance of function objects given to parallel algorithms
https://wg21.link/d0518r0




-
d:d0518r1
D0518R1


Draft 1 of d0518
https://wg21.link/d0518r1




-
d:d0523r0
D0523R0


d0523r0: Wording for CH10 "Complexity for parallel algorithms"
https://wg21.link/d0523r0




-
d:d0523r1
D0523R1


New wording for CH10
https://wg21.link/d0523r1




-
d:d0524r0
D0524R0


Draft Proposal for Pointers To Reference Datamembers
https://wg21.link/d0524r0




-
d:d0528r1
D0528R1


The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange - wording fixes
https://wg21.link/d0528r1




-
d:d0528r2
D0528R2


D0528r2
https://wg21.link/d0528r2




-
d:d0528r3
D0528R3


D0528r3
https://wg21.link/d0528r3




-
d:d0533r6
D0533R6


Move proposed text from [expr.const] to [library.c]
https://wg21.link/d0533r6




-
d:d0542r4
D0542R4


Support for contract based programming in C++
https://wg21.link/d0542r4




-
d:d0542r5
D0542R5


D0542R5 - Support for contract based programming in C++
https://wg21.link/d0542r5




-
d:d0547r1
D0547R1


Updated to account for stl3#330 <https://github.com/ericniebler/stl2/issues/330>
https://wg21.link/d0547r1




-
d:d0551r3
D0551R3


"Don't Specialize std function templates!"
https://wg21.link/d0551r3




-
d:d0553r3
D0553R3


Bit operations
https://wg21.link/d0553r3




-
d:d0553r4
D0553R4


(Untitled)
https://wg21.link/d0553r4




-
d:d0558r1
D0558R1


(Untitled)
https://wg21.link/d0558r1




-
d:d0564r1
D0564R1


Wording for three-way comparisons
https://wg21.link/d0564r1




-
d:d0571r1
D0571R1


Type Requirements for Numeric Algorithms
https://wg21.link/d0571r1




-
d:d0574r1
D0574R1


Algorithm Complexity Constraints and Parallel Overloads
https://wg21.link/d0574r1




-
d:d0583r0
D0583R0


(Untitled)
https://wg21.link/d0583r0




-
d:d0586r1
D0586R1


Update of P0586R0
https://wg21.link/d0586r1




-
d:d0586r2
D0586R2


Revision of p0586r1, updated as discussed
https://wg21.link/d0586r2




-
d:d0591
D0591


Revision of P0591r3 (uses-allocator construction) as per LWG wording review Tuesday
https://wg21.link/d0591




-
d:d0591r1
D0591R1


Much more precise proposed wording for P0591r0 Utility functions to implement uses-allocator constructionUtility functions to implement uses-allocator construction
https://wg21.link/d0591r1




-
d:d0593r4
D0593R4


Implicit creation of objects for low-level object manipulation (with wording)
https://wg21.link/d0593r4




-
d:d0593r5
D0593R5


(Untitled)
https://wg21.link/d0593r5




-
d:d0593r6
D0593R6


Implicit creation of objects for low-level object manipulation
https://wg21.link/d0593r6




-
d:d0602r2
D0602R2


variant and optional should propagate copy/move triviality (rebased)
https://wg21.link/d0602r2




-
d:d0603r0
D0603R0


Fixing memcpy: A simpler implementation primitive for seqlock and friends
https://wg21.link/d0603r0




-
d:d0604r0
D0604R0


Resolving GB 55, US 84, US 85, US 86 (Now: INVOKE<R>(f, Args...) and including LEWG vote results and SG10 recommendation change)
https://wg21.link/d0604r0




-
d:d0605r0
D0605R0


[Draft] Initial deduction guides for the standard library (late)
https://wg21.link/d0605r0




-
d:d0607r0
D0607R0


Resolves NB comments FI 9 and GB 28
https://wg21.link/d0607r0




-
d:d0608r2
D0608R2


D0608R2 A sane variant converting constructor
https://wg21.link/d0608r2




-
d:d0614r0
D0614R0


Range-based for statements with initializer
https://wg21.link/d0614r0




-
d:d0619r3
D0619R3


Removing deprecated features
https://wg21.link/d0619r3




-
d:d0619r4
D0619R4


Remove deprecated facilities from C++20 please
https://wg21.link/d0619r4




-
d:d0623r0
D0623R0


Final C++17 Parallel Algorithms Fixes
https://wg21.link/d0623r0




-
d:d0626r0
D0626R0


No Internal Locks for C++ Atomics
https://wg21.link/d0626r0




-
d:d0627r4
D0627R4


std::unreachable() (fetch James Touton if this comes up)
https://wg21.link/d0627r4




-
d:d0631r3
D0631R3


Math Constants (Revision 3)
https://wg21.link/d0631r3




-
d:d0631r7
D0631R7


(Old: Please use D0631R8 instead) Updated Math Constant wording revision 7 (post telecon 2019-04-23)
https://wg21.link/d0631r7




-
d:d0631r8
D0631R8


Updated Math Constant wording revision 8 (post telecon 2019-04-23) updated 2019-07-17
https://wg21.link/d0631r8




-
d:d0634r3
D0634R3


Revision of Down with typename!
https://wg21.link/d0634r3




-
d:d0642r4
D0642R4


(Untitled)
https://wg21.link/d0642r4




-
d:d0645r10
D0645R10


Draft of P0645 with comments from June 21 LWG telecom addressed
https://wg21.link/d0645r10




-
d:d0645r4
D0645R4


Text Formatting
https://wg21.link/d0645r4




-
d:d0645r6
D0645R6


D0645R6 Text Formatting for C++20
https://wg21.link/d0645r6




-
d:d0645r8
D0645R8


(Old: use D0645R10 instead) Draft of P0645 with comments from March 18 LWG telecon addressed
https://wg21.link/d0645r8




-
d:d0645r9
D0645R9


(Old: use D0645R10 instead) Draft of P0645 with comments from June 14 LWG telecon addressed
https://wg21.link/d0645r9




-
d:d0652r4
D0652R4


Concurrent associative data structure with unsynchronized view
https://wg21.link/d0652r4




-
d:d0660r10
D0660R10


jthread and stop_token Monday Evening and Night
https://wg21.link/d0660r10




-
d:d0660r7
D0660R7


D0660R7 (interrupt tokens with callbacks and jthread)
https://wg21.link/d0660r7




-
d:d0664r2
D0664R2


Coroutine Issue List (March 2018)
https://wg21.link/d0664r2




-
d:d0664r4
D0664R4


Created issues 31 and 32 requested by SG1
https://wg21.link/d0664r4




-
d:d0664r7
D0664R7


Coroutines TS Issue list (with fixed wording for ready issues), others moved to not ready
https://wg21.link/d0664r7




-
d:d0664r8
D0664R8


Coroutine TS issues ready for CWG review
https://wg21.link/d0664r8




-
d:d0668r5
D0668R5


D0668R5 memory model
https://wg21.link/d0668r5




-
d:d0670r4
D0670R4


Function reflection
https://wg21.link/d0670r4




-
d:d0722r3
D0722R3


Efficient sized delete for variable sized classes
https://wg21.link/d0722r3




-
d:d0732r1
D0732R1


classes in non-type template parameters
https://wg21.link/d0732r1




-
d:d0732r2
D0732R2


D0732R2 class type NTTPs
https://wg21.link/d0732r2




-
d:d0735r1
D0735R1


D0735R1: Interaction of memory_order_consume with release sequences
https://wg21.link/d0735r1




-
d:d0758r1
D0758R1


D07581R1 Implicit conversion traits and utility functions
https://wg21.link/d0758r1




-
d:d0759r1
D0759R1


D07591R1 fpos Requirements
https://wg21.link/d0759r1




-
d:d0769r1
D0769R1


shift algorithm
https://wg21.link/d0769r1




-
d:d0780r2
D0780R2


(Untitled)
https://wg21.link/d0780r2




-
d:d0784r2
D0784R2


Standard containers and constexpr
https://wg21.link/d0784r2




-
d:d0784r5
D0784R5


(Untitled)
https://wg21.link/d0784r5




-
d:d0784r6
D0784R6


More constexpr containers (including EWG cut)
https://wg21.link/d0784r6




-
d:d0784r7
D0784R7


More constexpr containers
https://wg21.link/d0784r7




-
d:d0806r2
D0806R2


Deprecate implicit capture of "this" via [=]
https://wg21.link/d0806r2




-
d:d0811r3
D0811R3


Revisions to midpoint/lerp
https://wg21.link/d0811r3




-
d:d0820r3
D0820R3


Feedback on P0214 (simd<>)
https://wg21.link/d0820r3




-
d:d0820r4
D0820R4


Feedback on P0214
https://wg21.link/d0820r4




-
d:d0823r0
D0823R0


Modules: semantics of declarations
https://wg21.link/d0823r0




-
d:d0840r2
D0840R2


(Untitled)
https://wg21.link/d0840r2




-
d:d0847r1
D0847R1


(Untitled)
https://wg21.link/d0847r1




-
d:d0847r3
D0847R3


Deducing this
https://wg21.link/d0847r3




-
d:d0848r1
D0848R1


(Untitled)
https://wg21.link/d0848r1




-
d:d0848r2
D0848R2


(Untitled)
https://wg21.link/d0848r2




-
d:d0848r3
D0848R3


conditionally trivial
https://wg21.link/d0848r3




-
d:d0870r2
D0870R2


Revision of P0870R1, based on LEWG-I feedback today
https://wg21.link/d0870r2




-
d:d0876r1
D0876R1


fibers without scheduler, revised per SG1 in Jacksonville
https://wg21.link/d0876r1




-
d:d0876r3
D0876R3


Updated draft of fiber_handle proposal
https://wg21.link/d0876r3




-
d:d0876r7
D0876R7


Köln update of P0876 based on Monday's SG1 feedback
https://wg21.link/d0876r7




-
d:d0881r3
D0881R3


Stacktrace wording (after LEWG address() votes)
https://wg21.link/d0881r3




-
d:d0881r4
D0881R4


Stacktrace with LEWG feedback
https://wg21.link/d0881r4




-
d:d0881r6
D0881R6


Stacktrace (after the CWG review)
https://wg21.link/d0881r6




-
d:d0891r3
D0891R3


D0981R3 (strong_order customization point + P1380R1 weak_order for floats)
https://wg21.link/d0891r3




-
d:d0892r1
D0892R1


(Untitled)
https://wg21.link/d0892r1




-
d:d0892r2
D0892R2


(Untitled)
https://wg21.link/d0892r2




-
d:d0893r2
D0893R2


(Untitled)
https://wg21.link/d0893r2




-
d:d0898r3
D0898R3


Standard Library Concepts
https://wg21.link/d0898r3




-
d:d0905r1
D0905R1


(Untitled)
https://wg21.link/d0905r1




-
d:d0907r1
D0907R1


D0907r1
https://wg21.link/d0907r1




-
d:d0907r3
D0907R3


D0907r3
https://wg21.link/d0907r3




-
d:d0912r1
D0912R1


Revised P0912r0 rendered as HTML + fixes
https://wg21.link/d0912r1




-
d:d0917r1
D0917R1


updated paper with more motivation for operator?:
https://wg21.link/d0917r1




-
d:d0918r1
D0918R1


Moar simd<> operations
https://wg21.link/d0918r1




-
d:d0920r1
D0920R1


(Untitled)
https://wg21.link/d0920r1




-
d:d0920r2
D0920R2


Precalculated hash values in lookup
https://wg21.link/d0920r2




-
d:d0928r1
D0928R1


D0928R1: Mitigating Speculation Attacks in C++
https://wg21.link/d0928r1




-
d:d0929r1
D0929R1


D0929R1: Checking for abstract class types (update for arrays)
https://wg21.link/d0929r1




-
d:d0929r2
D0929R2


(Untitled)
https://wg21.link/d0929r2




-
d:d0941r2
D0941R2


D0941R2 feature-test wording
https://wg21.link/d0941r2




-
d:d0942r1
D0942R1


(Untitled)
https://wg21.link/d0942r1




-
d:d0943r1
D0943R1


D0943R1: C atomics in C++ revision
https://wg21.link/d0943r1




-
d:d0943r2
D0943R2


D0943R2: Support C atomics in C++
https://wg21.link/d0943r2




-
d:d0947r1
D0947R1


(Untitled)
https://wg21.link/d0947r1




-
d:d0957r4
D0957R4


(Untitled)
https://wg21.link/d0957r4




-
d:d0960r2
D0960R2


Allow initializing aggregates from a parenthesized list of values
https://wg21.link/d0960r2




-
d:d0960r3
D0960R3


Allow initializing aggregates from a parenthesized list of values
https://wg21.link/d0960r3




-
d:d0961r1
D0961R1


(Untitled)
https://wg21.link/d0961r1




-
d:d0962r1
D0962R1


(Untitled)
https://wg21.link/d0962r1




-
d:d0964r1
D0964R1


Finding the right set of traits for simd
https://wg21.link/d0964r1




-
d:d0966r1
D0966R1


Mark Zeren - updated to deprecate default parameter.
https://wg21.link/d0966r1




-
d:d0968r0
D0968R0


Tentatively ready issues to be moved in Jacksonville
https://wg21.link/d0968r0




-
d:d0969r0
D0969R0


(Untitled)
https://wg21.link/d0969r0




-
d:d0970r0
D0970R0


Better, Safer Range Access Customization Points
https://wg21.link/d0970r0




-
d:d0971
D0971


(Untitled)
https://wg21.link/d0971




-
d:d0973r0
D0973R0


D0973R0: Coroutines TS Use Cases and Design Issues
https://wg21.link/d0973r0




-
d:d0975r0
D0975R0


Library impact of coroutines
https://wg21.link/d0975r0




-
d:d0978r0
D0978R0


Response to Coroutine Concerns raised in D0973r0
https://wg21.link/d0978r0




-
d:d0979r0
D0979R0


German position on merging Ranges TS
https://wg21.link/d0979r0




-
d:d0980r1
D0980R1


constexpr std::string with latest wording updates
https://wg21.link/d0980r1




-
d:d0981r3
D0981R3


D0981R3 (Let strong_order be a customization point) with LEWG Kona addenda
https://wg21.link/d0981r3




-
d:d0982r1
D0982R1


D0982
https://wg21.link/d0982r1




-
d:d0991r0
D0991R0


Comparison of Stackful Coroutine Proposals
https://wg21.link/d0991r0




-
d:d0995r0
D0995R0


D0995r0
https://wg21.link/d0995r0




-
d:d0995r1
D0995R1


D0995r1
https://wg21.link/d0995r1




-
d:d0996r0
D0996R0


Rebase Library Fundamentals on C++17
https://wg21.link/d0996r0




-
d:d0996r1
D0996R1


Rebase Library Fundamentals on C++17
https://wg21.link/d0996r1




-
d:d0997r2
D0997R2


Draft P0997 "Retire Pernicious Language Constructs in Module Contexts"
https://wg21.link/d0997r2




-
d:d0997r3
D0997R3


Draft 3 P0997 "Retire Pernicious Language Constructs in Module Contexts"
https://wg21.link/d0997r3




-

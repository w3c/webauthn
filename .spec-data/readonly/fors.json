{
  "/": [
    "!", 
    "!important", 
    "\"all\"-named elements", 
    "\"is origin potentially trustworthy?\"", 
    "\"no-referrer\"", 
    "\"no-referrer-when-downgrade\"", 
    "\"origin\"", 
    "\"origin-when-cross-origin\"", 
    "\"same-origin\"", 
    "\"strict-origin\"", 
    "\"strict-origin-when-cross-origin\"", 
    "\"unsafe-url\"", 
    "#", 
    "%arrayprototype%", 
    "%jsonparse%", 
    "%objproto_valueof%", 
    "&", 
    "&&", 
    "'@media' rule", 
    "'@supports' rule", 
    "'name'", 
    "'none'", 
    "'rendering-intent'", 
    "'report-sample'", 
    "'self'", 
    "'src'", 
    "'strict-dynamic'", 
    "'unsafe-allow-redirects'", 
    "'unsafe-eval'", 
    "'unsafe-hashes'", 
    "'unsafe-inline'", 
    "*", 
    "+", 
    ",", 
    "--*", 
    "-webkit-appearance", 
    "-webkit-line-clamp", 
    "/deep/", 
    "1", 
    "100...900 weight values", 
    "1st <length>", 
    "200 response", 
    "200 status code", 
    "2d", 
    "2d context creation algorithm", 
    "2d matrix", 
    "2nd <length>", 
    "3d matrix", 
    "3d rendering context", 
    "3d transform functions", 
    "3d transformed element", 
    "3rd <length>", 
    "4th <length>", 
    "4x4 abstract matrix", 
    "4xx", 
    "4xx status code", 
    "5xx", 
    "5xx status code", 
    "::after", 
    "::attr()", 
    "::backdrop", 
    "::before", 
    "::content", 
    "::first-letter", 
    "::first-line", 
    "::grammar-error", 
    "::inactive-selection", 
    "::marker", 
    "::nth-fragment()", 
    "::part()", 
    "::placeholder", 
    "::selection", 
    "::shadow", 
    "::slotted()", 
    "::spelling-error", 
    ":active", 
    ":any-link", 
    ":blank", 
    ":checked", 
    ":current", 
    ":current()", 
    ":default", 
    ":defined", 
    ":dir()", 
    ":dir(ltr)", 
    ":dir(rtl)", 
    ":disabled", 
    ":empty", 
    ":enabled", 
    ":first-child", 
    ":first-of-page", 
    ":first-of-type", 
    ":focus", 
    ":focus-visible", 
    ":focus-within", 
    ":fullscreen", 
    ":future", 
    ":has()", 
    ":host", 
    ":host()", 
    ":host-context()", 
    ":hover", 
    ":in-range", 
    ":indeterminate", 
    ":invalid", 
    ":is()", 
    ":lang", 
    ":lang()", 
    ":last-child", 
    ":last-of-page", 
    ":last-of-type", 
    ":link", 
    ":local-link", 
    ":matches()", 
    ":not()", 
    ":nth-child()", 
    ":nth-col()", 
    ":nth-last-child()", 
    ":nth-last-col()", 
    ":nth-last-of-type()", 
    ":nth-of-page(n)", 
    ":nth-of-type()", 
    ":only-child", 
    ":only-of-type", 
    ":optional", 
    ":out-of-range", 
    ":past", 
    ":paused", 
    ":placeholder-shown", 
    ":playing", 
    ":read-only", 
    ":read-write", 
    ":required", 
    ":root", 
    ":scope", 
    ":scope element", 
    ":start-of-page", 
    ":target", 
    ":target-within", 
    ":user-invalid", 
    ":valid", 
    ":visited", 
    ":where()", 
    "<(-token>", 
    "<)-token>", 
    "<?xml-stylesheet?>", 
    "<[-token>", 
    "<]-token>", 
    "<absolute-size>", 
    "<alpha-value>", 
    "<alphavalue>", 
    "<an+b>", 
    "<angle-percentage>", 
    "<angle>", 
    "<angular-color-hint>", 
    "<angular-color-stop-list>", 
    "<angular-color-stop>", 
    "<animateable-feature>", 
    "<any-value>", 
    "<at-keyword-token>", 
    "<attachment>", 
    "<attr-fallback>", 
    "<attr-matcher>", 
    "<attr-modifier>", 
    "<attr-name>", 
    "<attribute-selector>", 
    "<auto-repeat>", 
    "<auto-track-list>", 
    "<bad-string-token>", 
    "<bad-url-token>", 
    "<baseline-position>", 
    "<basic-shape>", 
    "<bg-clip>", 
    "<bg-image>", 
    "<bg-layer>", 
    "<bg-position>", 
    "<bg-size>", 
    "<blend-mode>", 
    "<border-style>", 
    "<border-width>", 
    "<bottom>", 
    "<box>", 
    "<calc-number-product>", 
    "<calc-number-sum>", 
    "<calc-number-value>", 
    "<calc-product>", 
    "<calc-sum>", 
    "<calc-value>", 
    "<cdc-token>", 
    "<cdo-token>", 
    "<cf-image>", 
    "<class-selector>", 
    "<clip-source>", 
    "<cmyk-component>", 
    "<col-width>", 
    "<colon-token>", 
    "<color-font-technology>", 
    "<color-stop-angle>", 
    "<color-stop-length>", 
    "<color-stop-list>", 
    "<color-stop>", 
    "<color>", 
    "<column-token>", 
    "<combinator>", 
    "<comma-token>", 
    "<common-lig-values>", 
    "<complex-selector-list>", 
    "<complex-selector>", 
    "<composite-mode>", 
    "<compositing-operator>", 
    "<compound-selector-list>", 
    "<compound-selector>", 
    "<content-distribution>", 
    "<content-list>", 
    "<content-position>", 
    "<contextual-alt-values>", 
    "<counter-style-name>", 
    "<counter-style>", 
    "<counter>", 
    "<cubic-bezier-easing-function>", 
    "<custom-arg>", 
    "<custom-ident>", 
    "<custom-property-name>", 
    "<custom-selector>", 
    "<dash-match-token>", 
    "<dasharray>", 
    "<dashndashdigit-ident>", 
    "<declaration-list>", 
    "<declaration-value>", 
    "<declaration>", 
    "<delim-token>", 
    "<deprecated-system-color>", 
    "<dimension-token>", 
    "<dimension>", 
    "<discretionary-lig-values>", 
    "<display-box>", 
    "<display-inside>", 
    "<display-internal>", 
    "<display-legacy>", 
    "<display-listitem>", 
    "<display-outside>", 
    "<easing-function>", 
    "<east-asian-variant-values>", 
    "<east-asian-width-values>", 
    "<eof-token>", 
    "<explicit-track-list>", 
    "<extension-name>", 
    "<extent-keyword>", 
    "<extent>", 
    "<family-name>", 
    "<feature-tag-value>", 
    "<feature-value-name>", 
    "<fill-rule>", 
    "<filter-function-list>", 
    "<filter-function>", 
    "<filter-value-list>", 
    "<final-bg-layer>", 
    "<fixed-breadth>", 
    "<fixed-repeat>", 
    "<fixed-size>", 
    "<flex>", 
    "<font-face-name>", 
    "<font-format>", 
    "<font-stretch-css3>", 
    "<font-technology>", 
    "<font-variant-css21>", 
    "<font-variant-css2>", 
    "<font-weight-absolute>", 
    "<frequency-percentage>", 
    "<frequency>", 
    "<function-token>", 
    "<general-enclosed>", 
    "<generic-family>", 
    "<generic-voice>", 
    "<geometry-box>", 
    "<gradient>", 
    "<hash-token>", 
    "<hex-color>", 
    "<historical-lig-values>", 
    "<hue>", 
    "<id-selector>", 
    "<id>", 
    "<ident-token>", 
    "<ident>", 
    "<image-decl>", 
    "<image-list>", 
    "<image-set-option>", 
    "<image-src>", 
    "<image-tags>", 
    "<image>", 
    "<include-match-token>", 
    "<inflexible-breadth>", 
    "<integer>", 
    "<isolation-mode>", 
    "<keyframe-block>", 
    "<keyframe-selector>", 
    "<keyframes-name>", 
    "<leader-type>", 
    "<left>", 
    "<length-percentage>", 
    "<length>", 
    "<line-name-list>", 
    "<line-names>", 
    "<line-style>", 
    "<line-width>", 
    "<linear-color-hint>", 
    "<linear-color-stop>", 
    "<linear-gradient>", 
    "<margin-width>", 
    "<marker-ref>", 
    "<mask-layer>", 
    "<mask-reference>", 
    "<mask-source>", 
    "<masking-mode>", 
    "<media-and>", 
    "<media-condition-without-or>", 
    "<media-condition>", 
    "<media-feature>", 
    "<media-in-parens>", 
    "<media-not>", 
    "<media-or>", 
    "<media-query-list>", 
    "<media-query>", 
    "<media-type>", 
    "<mf-boolean>", 
    "<mf-comparison>", 
    "<mf-eq>", 
    "<mf-gt>", 
    "<mf-lt>", 
    "<mf-name>", 
    "<mf-plain>", 
    "<mf-range>", 
    "<mf-value>", 
    "<minmax>", 
    "<mq-boolean>", 
    "<n-dimension>", 
    "<na-name>", 
    "<na-prefix>", 
    "<name-repeat>", 
    "<named-color>", 
    "<namespace-attr>", 
    "<ndash-dimension>", 
    "<ndashdigit-dimension>", 
    "<ndashdigit-ident>", 
    "<ns-prefix>", 
    "<number-optional-number>", 
    "<number-percentage>", 
    "<number-token>", 
    "<number>", 
    "<numeric-figure-values>", 
    "<numeric-fraction-values>", 
    "<numeric-spacing-values>", 
    "<outline-line-style>", 
    "<overflow-position>", 
    "<padding-width>", 
    "<page-selector-list>", 
    "<page-selector>", 
    "<paint>", 
    "<percentage-token>", 
    "<percentage>", 
    "<points>", 
    "<position>", 
    "<prefix-match-token>", 
    "<pseudo-class-selector>", 
    "<pseudo-element-selector>", 
    "<pseudo-page>", 
    "<quirky-color>", 
    "<quirky-length>", 
    "<quote>", 
    "<radial-gradient>", 
    "<ratio>", 
    "<relative-selector-list>", 
    "<relative-selector>", 
    "<relative-size>", 
    "<repeat-style>", 
    "<repeating-linear-gradient>", 
    "<repeating-radial-gradient>", 
    "<resolution>", 
    "<right>", 
    "<row-height>", 
    "<rule-list>", 
    "<selector-list>", 
    "<self-position>", 
    "<semicolon-token>", 
    "<shadow>", 
    "<shape-arg>", 
    "<shape-box>", 
    "<shape-radius>", 
    "<shape>", 
    "<side-or-corner>", 
    "<signed-integer>", 
    "<signless-integer>", 
    "<simple-selector-list>", 
    "<simple-selector>", 
    "<single-animation-composition>", 
    "<single-animation-direction>", 
    "<single-animation-fill-mode>", 
    "<single-animation-iteration-count>", 
    "<single-animation-play-state>", 
    "<single-animation>", 
    "<single-transition-property>", 
    "<single-transition>", 
    "<size>", 
    "<source-size-list>", 
    "<source-size-value>", 
    "<source-size>", 
    "<specific-voice>", 
    "<speech-rate>", 
    "<step-easing-function>", 
    "<step-position>", 
    "<string-token>", 
    "<string>", 
    "<stylesheet>", 
    "<subclass-selector>", 
    "<substring-match-token>", 
    "<suffix-match-token>", 
    "<supports-condition>", 
    "<supports-decl>", 
    "<supports-feature>", 
    "<supports-in-parens>", 
    "<supports-selector-fn>", 
    "<svg-paint>", 
    "<symbol>", 
    "<symbols-type>", 
    "<target-name>", 
    "<target>", 
    "<time-percentage>", 
    "<time>", 
    "<toggle-value>", 
    "<top>", 
    "<track-breadth>", 
    "<track-list>", 
    "<track-repeat>", 
    "<track-size>", 
    "<transform-function>", 
    "<transform-list>", 
    "<type-or-unit>", 
    "<type-selector>", 
    "<unicode-range-token>", 
    "<urange>", 
    "<uri>", 
    "<url-modifier>", 
    "<url-token>", 
    "<url>", 
    "<viewport-length>", 
    "<whitespace-token>", 
    "<wq-name>", 
    "<zero>", 
    "<{-token>", 
    "<}-token>", 
    ">", 
    "?", 
    "@@hasinstance", 
    "@@isconcatspreadable", 
    "@@toprimitive", 
    "@@tostringtag", 
    "@bottom-center", 
    "@bottom-left", 
    "@bottom-left-corner", 
    "@bottom-right", 
    "@bottom-right-corner", 
    "@charset", 
    "@color-profile", 
    "@counter-style", 
    "@custom-media", 
    "@custom-selector", 
    "@font-face", 
    "@font-feature-values", 
    "@font-palette-values", 
    "@import", 
    "@keyframes", 
    "@left-bottom", 
    "@left-middle", 
    "@left-top", 
    "@media", 
    "@nest", 
    "@page", 
    "@region", 
    "@right-bottom", 
    "@right-middle", 
    "@right-top", 
    "@scope", 
    "@supports", 
    "@top-center", 
    "@top-left", 
    "@top-left-corner", 
    "@top-right", 
    "@top-right-corner", 
    "@viewport", 
    "AAGUID", 
    "AbortController", 
    "AbortError", 
    "AbortSignal", 
    "AbstractRange", 
    "AbstractWorker", 
    "AcquireReadableStreamBYOBReader", 
    "AcquireReadableStreamDefaultReader", 
    "AcquireWritableStreamDefaultWriter", 
    "AddEventListenerOptions", 
    "AllowShared", 
    "AllowedBluetoothDevice", 
    "AllowedUSBDevice", 
    "Animatable", 
    "Animation", 
    "AnimationEffect", 
    "AnimationEvent", 
    "AnimationEventInit", 
    "AnimationFrameProvider", 
    "AnimationPlayState", 
    "AnimationPlaybackEvent", 
    "AnimationPlaybackEventInit", 
    "AnimationReplaceState", 
    "AnimationTimeline", 
    "AnimationWorkletGlobalScope", 
    "AnimatorInstanceConstructor", 
    "ApplicationCache", 
    "ArrayBuffer", 
    "ArrayBufferView", 
    "AssignedNodesOptions", 
    "AttestationConveyancePreference", 
    "Attr", 
    "AudioTrack", 
    "AudioTrackList", 
    "AuthenticationExtensionsAuthenticatorInputs", 
    "AuthenticationExtensionsClientInputs", 
    "AuthenticationExtensionsClientOutputs", 
    "AuthenticationExtensionsSupported", 
    "AuthenticatorAssertionResponse", 
    "AuthenticatorAttachment", 
    "AuthenticatorAttestationResponse", 
    "AuthenticatorResponse", 
    "AuthenticatorSelectionCriteria", 
    "AuthenticatorSelectionList", 
    "AuthenticatorTransport", 
    "BarProp", 
    "BaseComputedKeyframe", 
    "BaseKeyframe", 
    "BasePropertyIndexedKeyframe", 
    "Baseline", 
    "BeforeUnloadEvent", 
    "BinaryData", 
    "BinaryType", 
    "Blob", 
    "BlobCallback", 
    "BlobPart", 
    "BlobPropertyBag", 
    "BlockFragmentationType", 
    "Bluetooth", 
    "BluetoothAdvertisingEvent", 
    "BluetoothAdvertisingEventInit", 
    "BluetoothCharacteristicProperties", 
    "BluetoothCharacteristicUUID", 
    "BluetoothDataFilterInit", 
    "BluetoothDescriptorUUID", 
    "BluetoothDevice", 
    "BluetoothDeviceEventHandlers", 
    "BluetoothLEScanFilterInit", 
    "BluetoothManufacturerDataMap", 
    "BluetoothPermissionData", 
    "BluetoothPermissionDescriptor", 
    "BluetoothPermissionResult", 
    "BluetoothRemoteGATTCharacteristic", 
    "BluetoothRemoteGATTDescriptor", 
    "BluetoothRemoteGATTServer", 
    "BluetoothRemoteGATTService", 
    "BluetoothServiceDataMap", 
    "BluetoothServiceUUID", 
    "BluetoothUUID", 
    "Body", 
    "BodyInit", 
    "BoxQuadOptions", 
    "BreakToken", 
    "BreakTokenOptions", 
    "BreakType", 
    "BroadcastChannel", 
    "BroadcastChannel()", 
    "BufferSource", 
    "ByteLengthQueuingStrategy", 
    "ByteString", 
    "CDATASection", 
    "CEReactions", 
    "COSEAlgorithmIdentifier", 
    "CSPViolationReportBody", 
    "CSS", 
    "CSSAnimation", 
    "CSSBoxType", 
    "CSSConditionRule", 
    "CSSCounterStyleRule", 
    "CSSFontFaceLoadEvent", 
    "CSSFontFaceLoadEventInit", 
    "CSSFontFaceRule", 
    "CSSFontFeatureValuesMap", 
    "CSSFontFeatureValuesRule", 
    "CSSFontPaletteValuesRule", 
    "CSSGroupingRule", 
    "CSSImageValue", 
    "CSSImportRule", 
    "CSSKeyframeEffectReadOnly", 
    "CSSKeyframeRule", 
    "CSSKeyframesRule", 
    "CSSKeywordValue", 
    "CSSMarginRule", 
    "CSSMathClamp", 
    "CSSMathInvert", 
    "CSSMathMax", 
    "CSSMathMin", 
    "CSSMathNegate", 
    "CSSMathOperator", 
    "CSSMathProduct", 
    "CSSMathSum", 
    "CSSMathValue", 
    "CSSMatrixComponent", 
    "CSSMatrixComponentOptions", 
    "CSSMediaRule", 
    "CSSNamespaceRule", 
    "CSSNumberish", 
    "CSSNumericArray", 
    "CSSNumericBaseType", 
    "CSSNumericType", 
    "CSSNumericValue", 
    "CSSOMString", 
    "CSSPageRule", 
    "CSSPerspective", 
    "CSSPositionValue", 
    "CSSPseudoElement", 
    "CSSRotate", 
    "CSSRule", 
    "CSSRuleList", 
    "CSSScale", 
    "CSSSkew", 
    "CSSSkewX", 
    "CSSSkewY", 
    "CSSStyleDeclaration", 
    "CSSStyleRule", 
    "CSSStyleSheet", 
    "CSSStyleValue", 
    "CSSSupportsRule", 
    "CSSTransformComponent", 
    "CSSTransformValue", 
    "CSSTransition", 
    "CSSTranslate", 
    "CSSUnitValue", 
    "CSSUnparsedSegment", 
    "CSSUnparsedValue", 
    "CSSVariableReferenceValue", 
    "CSSViewportRule", 
    "Cache", 
    "CacheQueryOptions", 
    "CacheStorage", 
    "CanPlayTypeResult", 
    "CanvasCompositing", 
    "CanvasDirection", 
    "CanvasDrawImage", 
    "CanvasDrawPath", 
    "CanvasFillRule", 
    "CanvasFillStrokeStyles", 
    "CanvasFilters", 
    "CanvasGradient", 
    "CanvasImageData", 
    "CanvasImageSmoothing", 
    "CanvasImageSource", 
    "CanvasLineCap", 
    "CanvasLineJoin", 
    "CanvasPath", 
    "CanvasPathDrawingStyles", 
    "CanvasPattern", 
    "CanvasRect", 
    "CanvasRenderingContext2D", 
    "CanvasRenderingContext2DSettings", 
    "CanvasShadowStyles", 
    "CanvasState", 
    "CanvasText", 
    "CanvasTextAlign", 
    "CanvasTextBaseline", 
    "CanvasTextDrawingStyles", 
    "CanvasTransform", 
    "CanvasUserInterface", 
    "CaretPosition", 
    "CharacterData", 
    "CharacteristicEventHandlers", 
    "ChildBreakToken", 
    "ChildDisplayType", 
    "ChildNode", 
    "Clamp", 
    "Client", 
    "ClientQueryOptions", 
    "ClientType", 
    "Clients", 
    "CloseEvent", 
    "CloseEventInit", 
    "CollectedClientData", 
    "ColorSpaceConversion", 
    "Comment", 
    "CompositeOperation", 
    "CompositeOperationOrAuto", 
    "CompositionEvent", 
    "CompositionEventInit", 
    "ComputedEffectTiming", 
    "ConstraintError", 
    "Constructor", 
    "ConvertCoordinateOptions", 
    "ConvertToInt", 
    "CountQueuingStrategy", 
    "CrashReportBody", 
    "Create a Credential", 
    "Create a FederatedCredential from FederatedCredentialInit", 
    "Create a PasswordCredential from PasswordCredentialData", 
    "Create a PasswordCredential from an HTMLFormElement", 
    "CreateAlgorithmFromUnderlyingMethod", 
    "CreateReadableByteStream", 
    "CreateReadableStream", 
    "CreateSyntheticModule", 
    "CreateTransformStream", 
    "CreateWritableStream", 
    "Credential", 
    "CredentialCreationOptions", 
    "CredentialData", 
    "CredentialMediationRequirement", 
    "CredentialPropertiesOutput", 
    "CredentialRequestOptions", 
    "CredentialUserData", 
    "CredentialsContainer", 
    "CustomElementConstructor", 
    "CustomElementRegistry", 
    "CustomEvent", 
    "CustomEventInit", 
    "DOM anchor", 
    "DOMConfiguration", 
    "DOMError", 
    "DOMErrorHandler", 
    "DOMException", 
    "DOMImplementation", 
    "DOMImplementationList", 
    "DOMImplementationSource", 
    "DOMLocator", 
    "DOMMatrix", 
    "DOMMatrix2DInit", 
    "DOMMatrixInit", 
    "DOMMatrixReadOnly", 
    "DOMObject", 
    "DOMPoint", 
    "DOMPointInit", 
    "DOMPointReadOnly", 
    "DOMQuad", 
    "DOMQuadInit", 
    "DOMRect", 
    "DOMRectInit", 
    "DOMRectList", 
    "DOMRectReadOnly", 
    "DOMString", 
    "DOMStringList", 
    "DOMStringMap", 
    "DOMStringSizeError", 
    "DOMTimeStamp", 
    "DOMTokenList", 
    "DOMTokenList.value", 
    "DOMUserData", 
    "DataCloneError", 
    "DataError", 
    "DataTransfer", 
    "DataTransfer()", 
    "DataTransferItem", 
    "DataTransferItemList", 
    "DataView", 
    "DeadFragmentInformation", 
    "DedicatedWorkerGlobalScope", 
    "Default", 
    "DeprecationReportBody", 
    "DequeueValue", 
    "DevicePermissionDescriptor", 
    "Document", 
    "DocumentAndElementEventHandlers", 
    "DocumentFragment", 
    "DocumentOrShadowRoot", 
    "DocumentReadyState", 
    "DocumentTimeline", 
    "DocumentTimelineOptions", 
    "DocumentType", 
    "DragEvent", 
    "DragEventInit", 
    "EffectTiming", 
    "Element", 
    "ElementCSSInlineStyle", 
    "ElementContentEditable", 
    "ElementCreationOptions", 
    "ElementDefinitionOptions", 
    "ElementInternals", 
    "ElementTimeControl", 
    "EncodingError", 
    "EndingType", 
    "EnforceRange", 
    "EnqueueValueWithSize", 
    "Entity", 
    "EntityReference", 
    "ErrorEvent", 
    "ErrorEventInit", 
    "EvalError", 
    "Event", 
    "EventHandler", 
    "EventHandlerNonNull", 
    "EventInit", 
    "EventListener", 
    "EventListenerOptions", 
    "EventModifierInit", 
    "EventSource", 
    "EventSource(url, eventSourceInitDict)", 
    "EventSourceInit", 
    "EventTarget", 
    "Exposed", 
    "ExtendableEvent", 
    "ExtendableEventInit", 
    "ExtendableMessageEvent", 
    "ExtendableMessageEventInit", 
    "External", 
    "FakeWorkletGlobalScope", 
    "FeaturePolicy", 
    "FeaturePolicyViolationReportBody", 
    "FederatedCredential", 
    "FederatedCredentialInit", 
    "FederatedCredentialRequestOptions", 
    "FetchEvent", 
    "FetchEventInit", 
    "File", 
    "FileList", 
    "FilePropertyBag", 
    "FileReader", 
    "FileReaderSync", 
    "FillMode", 
    "Float32Array", 
    "Float64Array", 
    "FocusEvent", 
    "FocusEventInit", 
    "FocusOptions", 
    "FocusableAreaSearchMode", 
    "FocusableAreasOption", 
    "Font", 
    "FontFace", 
    "FontFaceDescriptors", 
    "FontFaceLoadStatus", 
    "FontFaceSet", 
    "FontFaceSetLoadEvent", 
    "FontFaceSetLoadEventInit", 
    "FontFaceSetLoadStatus", 
    "FontFaceSource", 
    "FontMetrics", 
    "ForEachCallback", 
    "FormData", 
    "FormDataEntryValue", 
    "FormDataEvent", 
    "FormDataEventInit", 
    "Formatter", 
    "FragmentFilter", 
    "FragmentResult", 
    "FragmentResultOptions", 
    "FrameRequestCallback", 
    "FrameType", 
    "FrozenArray", 
    "FrozenArray<T>", 
    "FullscreenNavigationUI", 
    "FullscreenOptions", 
    "Function", 
    "FunctionStringCallback", 
    "GenerateTestReportParameters", 
    "GenericTransformStream", 
    "GeometryNode", 
    "GeometryUtils", 
    "GetAnimationsOptions", 
    "GetRootNodeOptions", 
    "GetSVGDocument", 
    "Global", 
    "GlobalEventHandlers", 
    "HTMLAllCollection", 
    "HTMLAnchorElement", 
    "HTMLAreaElement", 
    "HTMLAudioElement", 
    "HTMLBRElement", 
    "HTMLBaseElement", 
    "HTMLBodyElement", 
    "HTMLButtonElement", 
    "HTMLCanvasElement", 
    "HTMLCollection", 
    "HTMLCollection.item()", 
    "HTMLCollection.length", 
    "HTMLCollection.namedItem()", 
    "HTMLConstructor", 
    "HTMLDListElement", 
    "HTMLDataElement", 
    "HTMLDataListElement", 
    "HTMLDetailsElement", 
    "HTMLDialogElement", 
    "HTMLDirectoryElement", 
    "HTMLDivElement", 
    "HTMLElement", 
    "HTMLEmbedElement", 
    "HTMLFieldSetElement", 
    "HTMLFontElement", 
    "HTMLFormControlsCollection", 
    "HTMLFormElement", 
    "HTMLFrameElement", 
    "HTMLFrameSetElement", 
    "HTMLHRElement", 
    "HTMLHeadElement", 
    "HTMLHeadingElement", 
    "HTMLHtmlElement", 
    "HTMLHyperlinkElementUtils", 
    "HTMLIFrameElement", 
    "HTMLImageElement", 
    "HTMLInputElement", 
    "HTMLLIElement", 
    "HTMLLabelElement", 
    "HTMLLegendElement", 
    "HTMLLinkElement", 
    "HTMLMapElement", 
    "HTMLMarqueeElement", 
    "HTMLMediaElement", 
    "HTMLMenuElement", 
    "HTMLMetaElement", 
    "HTMLMeterElement", 
    "HTMLModElement", 
    "HTMLOListElement", 
    "HTMLObjectElement", 
    "HTMLOptGroupElement", 
    "HTMLOptionElement", 
    "HTMLOptionsCollection", 
    "HTMLOrSVGElement", 
    "HTMLOrSVGImageElement", 
    "HTMLOrSVGScriptElement", 
    "HTMLOutputElement", 
    "HTMLParagraphElement", 
    "HTMLParamElement", 
    "HTMLPictureElement", 
    "HTMLPreElement", 
    "HTMLProgressElement", 
    "HTMLQuoteElement", 
    "HTMLScriptElement", 
    "HTMLSelectElement", 
    "HTMLSlotElement", 
    "HTMLSourceElement", 
    "HTMLSpanElement", 
    "HTMLStyleElement", 
    "HTMLTableCaptionElement", 
    "HTMLTableCellElement", 
    "HTMLTableColElement", 
    "HTMLTableElement", 
    "HTMLTableRowElement", 
    "HTMLTableSectionElement", 
    "HTMLTemplateElement", 
    "HTMLTextAreaElement", 
    "HTMLTimeElement", 
    "HTMLTitleElement", 
    "HTMLTrackElement", 
    "HTMLUListElement", 
    "HTMLUnknownElement", 
    "HTMLVideoElement", 
    "HashChangeEvent", 
    "HashChangeEventInit", 
    "Headers", 
    "HeadersInit", 
    "HierarchyRequestError", 
    "History", 
    "IDBCursor", 
    "IDBCursorDirection", 
    "IDBCursorWithValue", 
    "IDBDatabase", 
    "IDBDatabaseInfo", 
    "IDBFactory", 
    "IDBIndex", 
    "IDBIndexParameters", 
    "IDBKeyRange", 
    "IDBObjectStore", 
    "IDBObjectStoreParameters", 
    "IDBOpenDBRequest", 
    "IDBRequest", 
    "IDBRequestReadyState", 
    "IDBTransaction", 
    "IDBTransactionMode", 
    "IDBVersionChangeEvent", 
    "IDBVersionChangeEventInit", 
    "ImageBitmap", 
    "ImageBitmapOptions", 
    "ImageBitmapRenderingContext", 
    "ImageBitmapRenderingContextSettings", 
    "ImageBitmapSource", 
    "ImageData", 
    "ImageData()", 
    "ImageEncodeOptions", 
    "ImageOrientation", 
    "ImageSmoothingQuality", 
    "InUseAttributeError", 
    "IndexSizeError", 
    "InitializeReadableStream", 
    "InitializeTransformStream", 
    "InitializeWritableStream", 
    "InputEvent", 
    "InputEventInit", 
    "Int16Array", 
    "Int32Array", 
    "Int8Array", 
    "IntegerPart", 
    "InterventionReportBody", 
    "IntrinsicSizes", 
    "IntrinsicSizesRequest", 
    "IntrinsicSizesResultOptions", 
    "InvalidAccessError", 
    "InvalidCharacterError", 
    "InvalidModificationError", 
    "InvalidNodeTypeError", 
    "InvalidStateError", 
    "InvokeOrNoop", 
    "Is an environment settings object contextually secure?", 
    "IsFiniteNonNegativeNumber", 
    "IsNonNegativeNumber", 
    "IsReadableByteStreamController", 
    "IsReadableStream", 
    "IsReadableStreamAsyncIterator", 
    "IsReadableStreamBYOBReader", 
    "IsReadableStreamBYOBRequest", 
    "IsReadableStreamDefaultController", 
    "IsReadableStreamDefaultReader", 
    "IsReadableStreamDisturbed", 
    "IsReadableStreamLocked", 
    "IsTransformStream", 
    "IsTransformStreamDefaultController", 
    "IsWritableStream", 
    "IsWritableStreamDefaultController", 
    "IsWritableStreamDefaultWriter", 
    "IsWritableStreamLocked", 
    "IterationCompositeOperation", 
    "KeyboardEvent", 
    "KeyboardEventInit", 
    "KeyframeAnimationOptions", 
    "KeyframeEffect", 
    "KeyframeEffectOptions", 
    "LayoutChild", 
    "LayoutConstraints", 
    "LayoutConstraintsOptions", 
    "LayoutEdgeSizes", 
    "LayoutEdges", 
    "LayoutFragment", 
    "LayoutFragmentRequest", 
    "LayoutFragmentRequestOrIntrinsicSizesRequest", 
    "LayoutOptions", 
    "LayoutSizingMode", 
    "LayoutWorkletGlobalScope", 
    "LegacyNamespace", 
    "LegacyPlatformObjectGetOwnProperty", 
    "LegacyUnenumerableNamedProperties", 
    "LegacyWindowAlias", 
    "LenientSetter", 
    "LenientThis", 
    "LinkStyle", 
    "Location", 
    "Logger", 
    "MakeSizeAlgorithmFromSizeFunction", 
    "MediaError", 
    "MediaList", 
    "MediaProvider", 
    "MediaQueryList", 
    "MediaQueryListEvent", 
    "MediaQueryListEventInit", 
    "MessageChannel", 
    "MessageChannel()", 
    "MessageEvent", 
    "MessageEventInit", 
    "MessageEventSource", 
    "MessagePort", 
    "MidiPermissionDescriptor", 
    "MimeType", 
    "MimeTypeArray", 
    "MockSensor", 
    "MockSensorConfiguration", 
    "MockSensorReadingValues", 
    "MockSensorType", 
    "MouseEvent", 
    "MouseEventInit", 
    "MultiCacheQueryOptions", 
    "MutationCallback", 
    "MutationEvent", 
    "MutationNameEvent", 
    "MutationObserver", 
    "MutationObserverInit", 
    "MutationRecord", 
    "NameList", 
    "Named elements", 
    "Named objects", 
    "NamedConstructor", 
    "NamedFlow", 
    "NamedFlowMap", 
    "NamedNodeMap", 
    "NamespaceError", 
    "NavigationEvent", 
    "NavigationEventInit", 
    "NavigationPreloadManager", 
    "NavigationPreloadState", 
    "Navigator", 
    "NavigatorConcurrentHardware", 
    "NavigatorContentUtils", 
    "NavigatorCookies", 
    "NavigatorID", 
    "NavigatorLanguage", 
    "NavigatorOnLine", 
    "NavigatorPlugins", 
    "NavigatorStorage", 
    "NetworkError", 
    "NewObject", 
    "NoDataAllowedError", 
    "NoInterfaceObject", 
    "NoModificationAllowedError", 
    "Node", 
    "NodeFilter", 
    "NodeIterator", 
    "NodeList", 
    "NonDocumentTypeChildNode", 
    "NonElementParentNode", 
    "NotAllowedError", 
    "NotFoundError", 
    "NotReadableError", 
    "NotSupportedError", 
    "Notation", 
    "OffscreenCanvas", 
    "OffscreenCanvas(width, height)", 
    "OffscreenCanvasRenderingContext2D", 
    "OffscreenRenderingContext", 
    "OffscreenRenderingContextId", 
    "OnBeforeUnloadEventHandler", 
    "OnBeforeUnloadEventHandlerNonNull", 
    "OnErrorEventHandler", 
    "OnErrorEventHandlerNonNull", 
    "OperationError", 
    "OptionalEffectTiming", 
    "OverrideBuiltins", 
    "PageTransitionEvent", 
    "PageTransitionEventInit", 
    "PaintRenderingContext2D", 
    "PaintRenderingContext2DSettings", 
    "PaintSize", 
    "PaintWorkletGlobalScope", 
    "ParentNode", 
    "PasswordCredential", 
    "PasswordCredentialData", 
    "PasswordCredentialInit", 
    "Path2D", 
    "Path2D(path)", 
    "PeekQueueValue", 
    "PermissionDescriptor", 
    "PermissionName", 
    "PermissionSetParameters", 
    "PermissionState", 
    "PermissionStatus", 
    "Permissions", 
    "PlaybackDirection", 
    "Plugin", 
    "PluginArray", 
    "PopStateEvent", 
    "PopStateEventInit", 
    "PostMessageOptions", 
    "PremultiplyAlpha", 
    "Prevent Silent Access", 
    "Printer", 
    "ProcessingInstruction", 
    "ProgressEvent", 
    "ProgressEvent.lengthComputable", 
    "ProgressEvent.loaded", 
    "ProgressEvent.total", 
    "ProgressEventInit", 
    "Promise", 
    "Promise<T>", 
    "PromiseCall", 
    "PromiseRejectionEvent", 
    "PromiseRejectionEventInit", 
    "PropertyDescriptor", 
    "PublicKeyCredential", 
    "PublicKeyCredentialCreationOptions", 
    "PublicKeyCredentialDescriptor", 
    "PublicKeyCredentialEntity", 
    "PublicKeyCredentialParameters", 
    "PublicKeyCredentialRequestOptions", 
    "PublicKeyCredentialRpEntity", 
    "PublicKeyCredentialType", 
    "PublicKeyCredentialUserEntity", 
    "PushPermissionDescriptor", 
    "PutForwards", 
    "QuotaExceededError", 
    "RadioNodeList", 
    "Range", 
    "RangeError", 
    "RangeException", 
    "ReadOnlyError", 
    "ReadableByteStreamController", 
    "ReadableByteStreamControllerCallPullIfNeeded", 
    "ReadableByteStreamControllerClearAlgorithms", 
    "ReadableByteStreamControllerClearPendingPullIntos", 
    "ReadableByteStreamControllerClose", 
    "ReadableByteStreamControllerCommitPullIntoDescriptor", 
    "ReadableByteStreamControllerConvertPullIntoDescriptor", 
    "ReadableByteStreamControllerEnqueue", 
    "ReadableByteStreamControllerEnqueueChunkToQueue", 
    "ReadableByteStreamControllerError", 
    "ReadableByteStreamControllerFillHeadPullIntoDescriptor", 
    "ReadableByteStreamControllerFillPullIntoDescriptorFromQueue", 
    "ReadableByteStreamControllerGetDesiredSize", 
    "ReadableByteStreamControllerHandleQueueDrain", 
    "ReadableByteStreamControllerInvalidateBYOBRequest", 
    "ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue", 
    "ReadableByteStreamControllerPullInto", 
    "ReadableByteStreamControllerRespond", 
    "ReadableByteStreamControllerRespondInClosedState", 
    "ReadableByteStreamControllerRespondInReadableState", 
    "ReadableByteStreamControllerRespondInternal", 
    "ReadableByteStreamControllerRespondWithNewView", 
    "ReadableByteStreamControllerShiftPendingPullInto", 
    "ReadableByteStreamControllerShouldCallPull", 
    "ReadableStream", 
    "ReadableStreamAddReadIntoRequest", 
    "ReadableStreamAddReadRequest", 
    "ReadableStreamAsyncIteratorPrototype", 
    "ReadableStreamBYOBReader", 
    "ReadableStreamBYOBReaderRead", 
    "ReadableStreamBYOBRequest", 
    "ReadableStreamCancel", 
    "ReadableStreamClose", 
    "ReadableStreamCreateReadResult", 
    "ReadableStreamDefaultController", 
    "ReadableStreamDefaultControllerCallPullIfNeeded", 
    "ReadableStreamDefaultControllerCanCloseOrEnqueue", 
    "ReadableStreamDefaultControllerClearAlgorithms", 
    "ReadableStreamDefaultControllerClose", 
    "ReadableStreamDefaultControllerEnqueue", 
    "ReadableStreamDefaultControllerError", 
    "ReadableStreamDefaultControllerGetDesiredSize", 
    "ReadableStreamDefaultControllerHasBackpressure", 
    "ReadableStreamDefaultControllerShouldCallPull", 
    "ReadableStreamDefaultReader", 
    "ReadableStreamDefaultReaderRead", 
    "ReadableStreamError", 
    "ReadableStreamFulfillReadIntoRequest", 
    "ReadableStreamFulfillReadRequest", 
    "ReadableStreamGetNumReadIntoRequests", 
    "ReadableStreamGetNumReadRequests", 
    "ReadableStreamHasBYOBReader", 
    "ReadableStreamHasDefaultReader", 
    "ReadableStreamPipeTo", 
    "ReadableStreamReaderGenericCancel", 
    "ReadableStreamReaderGenericInitialize", 
    "ReadableStreamReaderGenericRelease", 
    "ReadableStreamTee", 
    "ReferenceError", 
    "ReferrerPolicy", 
    "Region", 
    "RegistrationOptions", 
    "RenderingContext", 
    "Replaceable", 
    "Report", 
    "ReportBody", 
    "ReportList", 
    "ReportingObserver", 
    "ReportingObserverCallback", 
    "ReportingObserverOptions", 
    "Request", 
    "Request a Credential", 
    "RequestCache", 
    "RequestCredentials", 
    "RequestDestination", 
    "RequestDeviceOptions", 
    "RequestInfo", 
    "RequestInit", 
    "RequestMode", 
    "RequestRedirect", 
    "ResetQueue", 
    "ResidentKeyRequirement", 
    "ResizeObservation", 
    "ResizeObserver", 
    "ResizeObserverBoxOptions", 
    "ResizeObserverCallback", 
    "ResizeObserverEntry", 
    "ResizeObserverOptions", 
    "ResizeObserverSize", 
    "ResizeQuality", 
    "Response", 
    "ResponseInit", 
    "ResponseType", 
    "SVGAElement", 
    "SVGAltGlyphDefElement", 
    "SVGAltGlyphElement", 
    "SVGAltGlyphItemElement", 
    "SVGAngle", 
    "SVGAnimateColorElement", 
    "SVGAnimateElement", 
    "SVGAnimateMotionElement", 
    "SVGAnimateTransformElement", 
    "SVGAnimatedAngle", 
    "SVGAnimatedBoolean", 
    "SVGAnimatedEnumeration", 
    "SVGAnimatedInteger", 
    "SVGAnimatedLength", 
    "SVGAnimatedLengthList", 
    "SVGAnimatedNumber", 
    "SVGAnimatedNumberList", 
    "SVGAnimatedPathData", 
    "SVGAnimatedPoints", 
    "SVGAnimatedPreserveAspectRatio", 
    "SVGAnimatedRect", 
    "SVGAnimatedString", 
    "SVGAnimatedTransformList", 
    "SVGAnimationElement", 
    "SVGCSSRule", 
    "SVGCircleElement", 
    "SVGClipPathElement", 
    "SVGColor", 
    "SVGColorProfileElement", 
    "SVGColorProfileRule", 
    "SVGComponentTransferFunctionElement", 
    "SVGCursorElement", 
    "SVGDefsElement", 
    "SVGDescElement", 
    "SVGDocument", 
    "SVGElement", 
    "SVGElementInstance", 
    "SVGElementInstanceList", 
    "SVGEllipseElement", 
    "SVGExternalResourcesRequired", 
    "SVGFEBlendElement", 
    "SVGFEColorMatrixElement", 
    "SVGFEComponentTransferElement", 
    "SVGFECompositeElement", 
    "SVGFEConvolveMatrixElement", 
    "SVGFEDiffuseLightingElement", 
    "SVGFEDisplacementMapElement", 
    "SVGFEDistantLightElement", 
    "SVGFEDropShadowElement", 
    "SVGFEFloodElement", 
    "SVGFEFuncAElement", 
    "SVGFEFuncBElement", 
    "SVGFEFuncGElement", 
    "SVGFEFuncRElement", 
    "SVGFEGaussianBlurElement", 
    "SVGFEImageElement", 
    "SVGFEMergeElement", 
    "SVGFEMergeNodeElement", 
    "SVGFEMorphologyElement", 
    "SVGFEOffsetElement", 
    "SVGFEPointLightElement", 
    "SVGFESpecularLightingElement", 
    "SVGFESpotLightElement", 
    "SVGFETileElement", 
    "SVGFETurbulenceElement", 
    "SVGFilterElement", 
    "SVGFilterPrimitiveStandardAttributes", 
    "SVGFitToViewBox", 
    "SVGFontElement", 
    "SVGFontFaceElement", 
    "SVGFontFaceFormatElement", 
    "SVGFontFaceNameElement", 
    "SVGFontFaceSrcElement", 
    "SVGFontFaceUriElement", 
    "SVGForeignObjectElement", 
    "SVGGElement", 
    "SVGGeometryElement", 
    "SVGGlyphElement", 
    "SVGGlyphRefElement", 
    "SVGGradientElement", 
    "SVGGraphicsElement", 
    "SVGHKernElement", 
    "SVGICCColor", 
    "SVGImageElement", 
    "SVGLangSpace", 
    "SVGLength", 
    "SVGLengthList", 
    "SVGLineElement", 
    "SVGLinearGradientElement", 
    "SVGLocatable", 
    "SVGMPathElement", 
    "SVGMarkerElement", 
    "SVGMaskElement", 
    "SVGMatrix", 
    "SVGMetadataElement", 
    "SVGMissingGlyphElement", 
    "SVGNumber", 
    "SVGNumberList", 
    "SVGPaint", 
    "SVGPathElement", 
    "SVGPathSeg", 
    "SVGPathSegArcAbs", 
    "SVGPathSegArcRel", 
    "SVGPathSegClosePath", 
    "SVGPathSegCurvetoCubicAbs", 
    "SVGPathSegCurvetoCubicRel", 
    "SVGPathSegCurvetoCubicSmoothAbs", 
    "SVGPathSegCurvetoCubicSmoothRel", 
    "SVGPathSegCurvetoQuadraticAbs", 
    "SVGPathSegCurvetoQuadraticRel", 
    "SVGPathSegCurvetoQuadraticSmoothAbs", 
    "SVGPathSegCurvetoQuadraticSmoothRel", 
    "SVGPathSegLinetoAbs", 
    "SVGPathSegLinetoHorizontalAbs", 
    "SVGPathSegLinetoHorizontalRel", 
    "SVGPathSegLinetoRel", 
    "SVGPathSegLinetoVerticalAbs", 
    "SVGPathSegLinetoVerticalRel", 
    "SVGPathSegList", 
    "SVGPathSegMovetoAbs", 
    "SVGPathSegMovetoRel", 
    "SVGPatternElement", 
    "SVGPoint", 
    "SVGPointList", 
    "SVGPolygonElement", 
    "SVGPolylineElement", 
    "SVGPreserveAspectRatio", 
    "SVGRadialGradientElement", 
    "SVGRect", 
    "SVGRectElement", 
    "SVGRenderingIntent", 
    "SVGSVGElement", 
    "SVGScriptElement", 
    "SVGSetElement", 
    "SVGStopElement", 
    "SVGStringList", 
    "SVGStylable", 
    "SVGStyleElement", 
    "SVGSwitchElement", 
    "SVGSymbolElement", 
    "SVGTRefElement", 
    "SVGTSpanElement", 
    "SVGTests", 
    "SVGTextContentElement", 
    "SVGTextElement", 
    "SVGTextPathElement", 
    "SVGTextPositioningElement", 
    "SVGTitleElement", 
    "SVGTransform", 
    "SVGTransformList", 
    "SVGTransformable", 
    "SVGURIReference", 
    "SVGUnitTypes", 
    "SVGUnknownElement", 
    "SVGUseElement", 
    "SVGUseElementShadowRoot", 
    "SVGVKernElement", 
    "SVGViewElement", 
    "SVGViewSpec", 
    "SVGZoomAndPan", 
    "SVGZoomEvent", 
    "SameObject", 
    "Screen", 
    "ScrollBehavior", 
    "ScrollIntoViewOptions", 
    "ScrollLogicalPosition", 
    "ScrollOptions", 
    "ScrollRestoration", 
    "ScrollToOptions", 
    "SecureContext", 
    "SecurityError", 
    "SecurityPolicyViolationEvent", 
    "SecurityPolicyViolationEventDisposition", 
    "SecurityPolicyViolationEventInit", 
    "SelectionMode", 
    "Sensor", 
    "SensorErrorEvent", 
    "SensorErrorEventInit", 
    "SensorOptions", 
    "Serializable", 
    "ServiceEventHandlers", 
    "ServiceWorker", 
    "ServiceWorkerContainer", 
    "ServiceWorkerGlobalScope", 
    "ServiceWorkerRegistration", 
    "ServiceWorkerState", 
    "ServiceWorkerUpdateViaCache", 
    "SetSyntheticModuleExport", 
    "SetUpReadableByteStreamController", 
    "SetUpReadableByteStreamControllerFromUnderlyingSource", 
    "SetUpReadableStreamBYOBRequest", 
    "SetUpReadableStreamDefaultController", 
    "SetUpReadableStreamDefaultControllerFromUnderlyingSource", 
    "SetUpTransformStreamDefaultController", 
    "SetUpTransformStreamDefaultControllerFromTransformer", 
    "SetUpWritableStreamDefaultController", 
    "SetUpWritableStreamDefaultControllerFromUnderlyingSink", 
    "ShadowAnimation", 
    "ShadowRoot", 
    "ShadowRootInit", 
    "ShadowRootMode", 
    "SharedWorker", 
    "SharedWorker(scriptURL, options)", 
    "SharedWorkerGlobalScope", 
    "Slotable", 
    "SpatialNavigationDirection", 
    "SpatialNavigationSearchOptions", 
    "StatefulAnimator", 
    "StatelessAnimator", 
    "StaticRange", 
    "Storage", 
    "StorageEstimate", 
    "StorageEvent", 
    "StorageEventInit", 
    "StorageManager", 
    "Store a Credential", 
    "StructuredDeserialize", 
    "StructuredDeserializeWithTransfer", 
    "StructuredSerialize", 
    "StructuredSerializeForStorage", 
    "StructuredSerializeInternal", 
    "StructuredSerializeWithTransfer", 
    "StylePropertyMap", 
    "StylePropertyMapReadOnly", 
    "StyleSheet", 
    "StyleSheetList", 
    "SyncEvent", 
    "SyncEventInit", 
    "SyncManager", 
    "SyntaxError", 
    "Text", 
    "TextDecodeOptions", 
    "TextDecoder", 
    "TextDecoderCommon", 
    "TextDecoderOptions", 
    "TextDecoderStream", 
    "TextEncoder", 
    "TextEncoderCommon", 
    "TextEncoderEncodeIntoResult", 
    "TextEncoderStream", 
    "TextMetrics", 
    "TextTrack", 
    "TextTrackCue", 
    "TextTrackCueList", 
    "TextTrackKind", 
    "TextTrackList", 
    "TextTrackMode", 
    "TimeEvent", 
    "TimeRanges", 
    "TimeoutError", 
    "TimerHandler", 
    "TokenBinding", 
    "TokenBindingStatus", 
    "TrackEvent", 
    "TrackEventInit", 
    "TransactionInactiveError", 
    "TransferArrayBuffer", 
    "Transferable", 
    "TransformStream", 
    "TransformStreamDefaultController", 
    "TransformStreamDefaultControllerClearAlgorithms", 
    "TransformStreamDefaultControllerEnqueue", 
    "TransformStreamDefaultControllerError", 
    "TransformStreamDefaultControllerPerformTransform", 
    "TransformStreamDefaultControllerTerminate", 
    "TransformStreamDefaultSinkAbortAlgorithm", 
    "TransformStreamDefaultSinkCloseAlgorithm", 
    "TransformStreamDefaultSinkWriteAlgorithm", 
    "TransformStreamDefaultSourcePullAlgorithm", 
    "TransformStreamError", 
    "TransformStreamErrorWritableAndUnblockWrite", 
    "TransformStreamSetBackpressure", 
    "TransitionEvent", 
    "TransitionEventInit", 
    "TreatNonObjectAsNull", 
    "TreatNullAs", 
    "TreeWalker", 
    "TypeError", 
    "TypeInfo", 
    "TypeMismatchError", 
    "UIEvent", 
    "UIEventInit", 
    "URIError", 
    "URL", 
    "URLMismatchError", 
    "URLSearchParams", 
    "USB", 
    "USBAlternateInterface", 
    "USBConfiguration", 
    "USBConnectionEvent", 
    "USBConnectionEventInit", 
    "USBControlTransferParameters", 
    "USBDevice", 
    "USBDeviceFilter", 
    "USBDeviceRequestOptions", 
    "USBDirection", 
    "USBEndpoint", 
    "USBEndpointType", 
    "USBInTransferResult", 
    "USBInterface", 
    "USBIsochronousInTransferPacket", 
    "USBIsochronousInTransferResult", 
    "USBIsochronousOutTransferPacket", 
    "USBIsochronousOutTransferResult", 
    "USBOutTransferResult", 
    "USBPermissionDescriptor", 
    "USBPermissionResult", 
    "USBPermissionStorage", 
    "USBRecipient", 
    "USBRequestType", 
    "USBTransferStatus", 
    "USVString", 
    "UUID", 
    "Uint16Array", 
    "Uint32Array", 
    "Uint8Array", 
    "Uint8ClampedArray", 
    "Unforgeable", 
    "UnknownError", 
    "Unscopable", 
    "UserDataHandler", 
    "UserVerificationRequirement", 
    "UvmEntries", 
    "UvmEntry", 
    "ValidateAndNormalizeHighWaterMark", 
    "ValidationError", 
    "ValidityState", 
    "ValidityStateFlags", 
    "ValueEvent", 
    "ValueEventInit", 
    "VersionError", 
    "VideoTrack", 
    "VideoTrackList", 
    "VoidFunction", 
    "WebKitCSSMatrix", 
    "WebSocket", 
    "WebSocket(url, protocols)", 
    "WheelEvent", 
    "WheelEventInit", 
    "Window", 
    "WindowClient", 
    "WindowEventHandlers", 
    "WindowLocalStorage", 
    "WindowOrWorkerGlobalScope", 
    "WindowPostMessageOptions", 
    "WindowProxy", 
    "WindowSessionStorage", 
    "Worker", 
    "Worker(scriptURL, options)", 
    "WorkerGlobalScope", 
    "WorkerLocation", 
    "WorkerNavigator", 
    "WorkerOptions", 
    "WorkerType", 
    "Worklet", 
    "WorkletAnimation", 
    "WorkletGlobalScope", 
    "WorkletGroupEffect", 
    "WorkletOptions", 
    "WritableStream", 
    "WritableStreamAbort", 
    "WritableStreamAddWriteRequest", 
    "WritableStreamCloseQueuedOrInFlight", 
    "WritableStreamDealWithRejection", 
    "WritableStreamDefaultController", 
    "WritableStreamDefaultControllerAdvanceQueueIfNeeded", 
    "WritableStreamDefaultControllerClearAlgorithms", 
    "WritableStreamDefaultControllerClose", 
    "WritableStreamDefaultControllerError", 
    "WritableStreamDefaultControllerErrorIfNeeded", 
    "WritableStreamDefaultControllerGetBackpressure", 
    "WritableStreamDefaultControllerGetChunkSize", 
    "WritableStreamDefaultControllerGetDesiredSize", 
    "WritableStreamDefaultControllerProcessClose", 
    "WritableStreamDefaultControllerProcessWrite", 
    "WritableStreamDefaultControllerWrite", 
    "WritableStreamDefaultWriter", 
    "WritableStreamDefaultWriterAbort", 
    "WritableStreamDefaultWriterClose", 
    "WritableStreamDefaultWriterCloseWithErrorPropagation", 
    "WritableStreamDefaultWriterEnsureClosedPromiseRejected", 
    "WritableStreamDefaultWriterEnsureReadyPromiseRejected", 
    "WritableStreamDefaultWriterGetDesiredSize", 
    "WritableStreamDefaultWriterRelease", 
    "WritableStreamDefaultWriterWrite", 
    "WritableStreamFinishErroring", 
    "WritableStreamFinishInFlightClose", 
    "WritableStreamFinishInFlightCloseWithError", 
    "WritableStreamFinishInFlightWrite", 
    "WritableStreamFinishInFlightWriteWithError", 
    "WritableStreamHasOperationMarkedInFlight", 
    "WritableStreamMarkCloseRequestInFlight", 
    "WritableStreamMarkFirstWriteRequestInFlight", 
    "WritableStreamRejectCloseAndClosedPromiseIfNeeded", 
    "WritableStreamStartErroring", 
    "WritableStreamUpdateBackpressure", 
    "WrongDocumentError", 
    "XMLDocument", 
    "XMLHttpRequest", 
    "XMLHttpRequest.responseXML", 
    "XMLHttpRequestEventTarget", 
    "XMLHttpRequestResponseType", 
    "XMLHttpRequestUpload", 
    "[<length> | <percentage>]{2}", 
    "[[CancelSteps]]", 
    "[[PullSteps]]", 
    "[[crossoriginpropertydescriptormap]]", 
    "[[defaultorientation]]", 
    "[[defaultproperties]]", 
    "[[ishtmldda]]", 
    "[[orientationlock]]", 
    "[[orientationpendingpromise]]", 
    "[[realm]] field of a platform object", 
    "[[window]]", 
    "_charset_", 
    "`last-event-id`", 
    "`ping-from`", 
    "`ping-to`", 
    "`refresh`", 
    "a", 
    "a edge", 
    "a element", 
    "a known definite encoding", 
    "a label", 
    "a language", 
    "a list of zero or more cues", 
    "a mode", 
    "a new promise", 
    "a pause-on-exit flag", 
    "a plausible language", 
    "a priori authenticated url", 
    "a promise rejected with", 
    "a promise resolved with", 
    "a readiness state", 
    "a serialization of the bitmap as a file", 
    "a start time", 
    "a type that the user agent knows it cannot render", 
    "a websocket message has been received", 
    "aaguid", 
    "abbr", 
    "abnf", 
    "abort", 
    "abort a parser", 
    "abort a running script", 
    "abort a transaction", 
    "abort a writable stream", 
    "abort an upgrade transaction", 
    "abort fetch", 
    "abort the image request", 
    "abort when", 
    "abort_err", 
    "aborted network error", 
    "aborterror", 
    "about-to-be-notified rejected promises list", 
    "about:", 
    "about:blank", 
    "about:html-kind", 
    "about:legacy-compat", 
    "about:srcdoc", 
    "abrupt-closing-of-empty-comment", 
    "abrupt-doctype-public-identifier", 
    "abrupt-doctype-system-identifier", 
    "absence-of-digits-in-numeric-character-reference", 
    "absolute length", 
    "absolute url", 
    "absolute-url string", 
    "absolute-url-with-fragment string", 
    "absolutely positioned", 
    "absolutely positioned box", 
    "absolutely positioned element", 
    "absolutize a relative selector", 
    "absolutize a relative selector list", 
    "abstract dimensions", 
    "abstract equality comparison", 
    "accept", 
    "accept-language", 
    "access key", 
    "access-control-allow-credentials", 
    "access-control-allow-headers", 
    "access-control-allow-methods", 
    "access-control-allow-origin", 
    "access-control-expose-headers", 
    "access-control-max-age", 
    "access-control-request-headers", 
    "access-control-request-method", 
    "accessible name", 
    "accumulate", 
    "accumulated 3d transformation matrix", 
    "accumulation for one-based values", 
    "accumulation procedure", 
    "achromatic", 
    "acknowledged", 
    "acos()", 
    "acquaintance", 
    "acronym", 
    "action", 
    "activate", 
    "activate a sensor object", 
    "activate an event handler", 
    "activated sensor objects", 
    "activation behavior", 
    "activation trigger", 
    "active", 
    "active configuration", 
    "active document", 
    "active duration", 
    "active flag", 
    "active flag was set when the script started", 
    "active frame element", 
    "active function object", 
    "active interval", 
    "active needed worker", 
    "active notification context set", 
    "active orientation lock", 
    "active parser", 
    "active phase", 
    "active range", 
    "active reader", 
    "active replace state", 
    "active sandboxing flag set", 
    "active script", 
    "active shadow tree", 
    "active time", 
    "active worker", 
    "active writer", 
    "active-after boundary time", 
    "activeborder", 
    "activecaption", 
    "actual value", 
    "actual viewport", 
    "actually disabled", 
    "ad structure", 
    "add", 
    "add a css style sheet", 
    "add a vcard line", 
    "add an event listener", 
    "add an icalendar line", 
    "add device to storage", 
    "add map elements from an iterable", 
    "add two types", 
    "addEventListener()", 
    "addition procedure", 
    "additional-name", 
    "additionaldata", 
    "additive", 
    "additive tuple", 
    "address", 
    "address type strings", 
    "address-level1", 
    "address-level2", 
    "address-level3", 
    "address-level4", 
    "address-line1", 
    "address-line2", 
    "address-line3", 
    "addressable character", 
    "addtrack", 
    "adjoining", 
    "adjust foreign attributes", 
    "adjust mathml attributes", 
    "adjust svg attributes", 
    "adjusted current node", 
    "adopt", 
    "adopting steps", 
    "adoption agency algorithm", 
    "adr", 
    "advanced to the next child of the table", 
    "advertising data", 
    "advertising event", 
    "advertising events", 
    "advisory information", 
    "aescbcparams", 
    "aesctrparams", 
    "aesderivedkeyparams", 
    "aesgcmparams", 
    "aeskeyalgorithm", 
    "aeskeygenparams", 
    "affected by a base url change", 
    "after attribute name state", 
    "after attribute value (quoted) state", 
    "after doctype name state", 
    "after doctype public identifier state", 
    "after doctype public keyword state", 
    "after doctype system identifier state", 
    "after doctype system keyword state", 
    "after phase", 
    "after-change style", 
    "agent", 
    "agent cluster", 
    "algorithm", 
    "algorithm for assigning header cells", 
    "algorithm for ending a row group", 
    "algorithm for extracting a character encoding from a meta element", 
    "algorithm for growing downward-growing cells", 
    "algorithm for processing row groups", 
    "algorithm for processing rows", 
    "algorithm queue", 
    "algorithm to convert a date object to a string", 
    "algorithm to convert a number to a string", 
    "algorithm to convert a string to a date object", 
    "algorithm to convert a string to a number", 
    "algorithm_cached", 
    "algorithmidentifier", 
    "aliceblue", 
    "align", 
    "align descendants", 
    "align-content", 
    "align-items", 
    "align-self", 
    "alignment baseline", 
    "alignment container", 
    "alignment context", 
    "alignment point", 
    "alignment subject", 
    "alignment-baseline", 
    "alink", 
    "all", 
    "all-petite-caps", 
    "all-small-caps", 
    "allow-forms", 
    "allow-list", 
    "allow-list-value", 
    "allow-modals", 
    "allow-orientation-lock", 
    "allow-pointer-lock", 
    "allow-popups", 
    "allow-popups-to-escape-sandbox", 
    "allow-presentation", 
    "allow-same-origin", 
    "allow-scripts", 
    "allow-top-navigation", 
    "allow-top-navigation-by-user-activation", 
    "allowed in non-secure contexts", 
    "allowed in the body", 
    "allowed to navigate", 
    "allowed to play", 
    "allowed to request fullscreen", 
    "allowed to resize and move", 
    "allowed to use", 
    "allowed value step", 
    "allowlist", 
    "allowlists", 
    "allowtransparency", 
    "alpha", 
    "alphabetic baseline", 
    "already constructed marker", 
    "already started", 
    "alternate flag", 
    "alternative", 
    "altglyph", 
    "altglyphdef", 
    "ambiguous ampersand", 
    "ambiguous ampersand state", 
    "an end time", 
    "an entry with persisted user state", 
    "an exception was thrown", 
    "an identifier", 
    "an iframe srcdoc document", 
    "an in-band metadata track dispatch type", 
    "an unstyled document view", 
    "an+b", 
    "ancestor browsing context", 
    "ancestor origins list", 
    "ancestor-source", 
    "ancestor-source-list", 
    "anchor", 
    "anchor node selection algorithm", 
    "anchor point", 
    "anchor unit", 
    "android key attestation certificate extension data", 
    "animatable", 
    "animate", 
    "animate function", 
    "animatecolor", 
    "animatemotion", 
    "animatetransform", 
    "animation", 
    "animation animator name", 
    "animation class", 
    "animation composite order", 
    "animation direction", 
    "animation effect", 
    "animation events", 
    "animation frame", 
    "animation frame callback identifier", 
    "animation frame task", 
    "animation origin", 
    "animation playback events", 
    "animation property name to idl attribute name", 
    "animation requested flag", 
    "animation time to origin-relative time", 
    "animation time to timeline time", 
    "animation type", 
    "animation worklet", 
    "animation-composition", 
    "animation-delay", 
    "animation-direction", 
    "animation-duration", 
    "animation-fill-mode", 
    "animation-iteration-count", 
    "animation-name", 
    "animation-play-state", 
    "animation-tainted", 
    "animation-timing-function", 
    "animationevent()", 
    "animator", 
    "animator current time", 
    "animator definition", 
    "animator effect", 
    "animator instance", 
    "animator instance set", 
    "animator name", 
    "animator name to animator definition map", 
    "animator serialized options", 
    "animator timeline", 
    "anniversary", 
    "annotated types", 
    "annotation", 
    "annotation level", 
    "announce the connection", 
    "anonymization ca", 
    "anonymous", 
    "anonymous block of a slot", 
    "anonymous button content box", 
    "anonymous fieldset content box", 
    "antiquewhite", 
    "any", 
    "any link size", 
    "apc", 
    "api value", 
    "appbannerpromptoutcome", 
    "appearance", 
    "appearance of a cross-fade()", 
    "append", 
    "append (for list)", 
    "append (for set)", 
    "append an attribute", 
    "append an entry", 
    "append to an event path", 
    "appendChild()", 
    "appid", 
    "applet", 
    "applicable specification", 
    "application cache", 
    "application cache download process", 
    "application cache group", 
    "application cache selection algorithm", 
    "application context", 
    "application life-cycle task source", 
    "application's name", 
    "application-name", 
    "application/atom+xml", 
    "application/ecmascript", 
    "application/javascript", 
    "application/json", 
    "application/microdata+json", 
    "application/octet-stream", 
    "application/rss+xml", 
    "application/x-ecmascript", 
    "application/x-javascript", 
    "application/x-www-form-urlencoded", 
    "application/x-www-form-urlencoded serializer", 
    "application/xhtml+xml", 
    "application/xml", 
    "applied", 
    "apply", 
    "apply an orientation lock", 
    "apply any pending playback rate", 
    "apply the percent hint", 
    "applying", 
    "appropriate end tag token", 
    "appropriate place for inserting a node", 
    "appropriate template contents owner document", 
    "appworkspace", 
    "aqua", 
    "aquamarine", 
    "archive", 
    "archive mime type", 
    "archive type pattern matching algorithm", 
    "arcs linejoin", 
    "are a valid escape", 
    "area", 
    "area element", 
    "aria attributes", 
    "aria-*", 
    "aria-describedby", 
    "aria-disabled", 
    "aria-label", 
    "armenian", 
    "array", 
    "array index property name", 
    "array key", 
    "arraybuffer", 
    "arraybuffer response", 
    "arraybufferview", 
    "arraycreate", 
    "art direction", 
    "article", 
    "as a download", 
    "as conformance class", 
    "ascending", 
    "ascii alpha", 
    "ascii alphanumeric", 
    "ascii byte", 
    "ascii case-insensitive", 
    "ascii code point", 
    "ascii decode", 
    "ascii digit", 
    "ascii encode", 
    "ascii hex digit", 
    "ascii lower alpha", 
    "ascii lower hex digit", 
    "ascii lowercase", 
    "ascii serialization of an origin", 
    "ascii string", 
    "ascii tab or newline", 
    "ascii tabs or newlines", 
    "ascii upper alpha", 
    "ascii upper hex digit", 
    "ascii uppercase", 
    "ascii whitespace", 
    "ascii-compatible encoding", 
    "aside", 
    "asin()", 
    "ask the user to choose a Credential", 
    "asks for a reset", 
    "aspect value", 
    "aspect-ratio", 
    "aspects", 
    "assert", 
    "assertion", 
    "assertion signature", 
    "assign a slot", 
    "assign slotables", 
    "assign slotables for a tree", 
    "assignable table width", 
    "assigned access key", 
    "assigned media provider object", 
    "assigned nodes", 
    "associate animator instance of worklet animation", 
    "associated", 
    "associated animation of an animation effect", 
    "associated css style sheet", 
    "associated document", 
    "associated element", 
    "associated inert template document", 
    "associated node", 
    "associated offscreencanvas object", 
    "associated realm", 
    "associated sensors", 
    "associated with a manifest", 
    "associated with a timeline", 
    "associated with an animation", 
    "async", 
    "asynchronous read method", 
    "asynchronously execute a request", 
    "at-risk", 
    "at-rule", 
    "atan()", 
    "atan2()", 
    "atomic http redirect handling", 
    "atomic initial letter", 
    "atomic initial letter box", 
    "atomic inline", 
    "atomic inline box", 
    "atomic inline-level boxes", 
    "att bearer", 
    "attach", 
    "attachShadow()", 
    "attached", 
    "attached internals", 
    "attca", 
    "attestation", 
    "attestation ca", 
    "attestation certificate", 
    "attestation conveyance", 
    "attestation key pair", 
    "attestation object", 
    "attestation private key", 
    "attestation public key", 
    "attestation signature", 
    "attestation statement", 
    "attestation statement format", 
    "attestation statement format identifier", 
    "attestation trust path", 
    "attestation type", 
    "attested credential data", 
    "attestedcredentialdata", 
    "attr", 
    "attr()", 
    "attribute", 
    "attribute caching", 
    "attribute change steps", 
    "attribute getter", 
    "attribute handle", 
    "attribute list", 
    "attribute name state", 
    "attribute names", 
    "attribute node selector", 
    "attribute selector", 
    "attribute setter", 
    "attribute type", 
    "attribute value (double-quoted) state", 
    "attribute value (single-quoted) state", 
    "attribute value (unquoted) state", 
    "attribute values", 
    "attribute's serialized name", 
    "attributename", 
    "attributes", 
    "attributes for form submission", 
    "attributetype", 
    "audio", 
    "audio or video mime type", 
    "audio or video type pattern matching algorithm", 
    "augmented grid", 
    "aural \"box\" model", 
    "authdataextensions", 
    "authentication", 
    "authentication assertion", 
    "authentication ceremony", 
    "authentication entry", 
    "authentication extension", 
    "authentication factor capability", 
    "authenticator", 
    "authenticator attachment modality", 
    "authenticator data", 
    "authenticator data claimed to have been used for the attestation", 
    "authenticator data for the attestation", 
    "authenticator extension", 
    "authenticator extension input", 
    "authenticator extension output", 
    "authenticator extension processing", 
    "authenticator model", 
    "authenticator operations", 
    "authenticator session", 
    "authenticator type", 
    "authenticatorBiometricPerfBounds", 
    "authenticatorcancel", 
    "authenticatorgetassertion", 
    "authenticatormakecredential", 
    "author", 
    "author origin", 
    "author request headers", 
    "author style sheet", 
    "authoring tool", 
    "authoritative", 
    "authority state", 
    "authorization gesture", 
    "auto", 
    "auto!!font-kerning", 
    "auto-column", 
    "auto-placement", 
    "auto-placement cursor", 
    "autocapitalization hints", 
    "autocapitalize", 
    "autocapitalize-inheriting elements", 
    "autocomplete", 
    "autofill anchor mantle", 
    "autofill detail tokens", 
    "autofill expectation mantle", 
    "autofill field", 
    "autofill field name", 
    "autofill hint set", 
    "autofill scope", 
    "autofills form controls", 
    "autofocus", 
    "automated install prompt", 
    "automatic", 
    "automatic column position", 
    "automatic grid position", 
    "automatic minimum size", 
    "automatic placement", 
    "automatic position", 
    "automatic row position", 
    "automatic semicolon insertion", 
    "automatic size", 
    "autonomous custom element", 
    "autoplay", 
    "auxclick", 
    "auxiliary browsing context", 
    "available", 
    "available block space", 
    "available font faces", 
    "available grid space", 
    "available height", 
    "available in both secure and non-secure contexts", 
    "available inline space", 
    "available only in secure contexts", 
    "available space", 
    "available width", 
    "avoid break values", 
    "await a stable state", 
    "axis", 
    "axis value", 
    "axis-lock", 
    "azimuth", 
    "azure", 
    "b", 
    "backdrop", 
    "backdrop root", 
    "backdrop root image", 
    "backdrop-filter", 
    "backface-visibility", 
    "background", 
    "background painting area", 
    "background positioning area", 
    "background-attachment", 
    "background-blend-mode", 
    "background-clip", 
    "background-color", 
    "background-image", 
    "background-origin", 
    "background-position", 
    "background-position-block", 
    "background-position-inline", 
    "background-position-x", 
    "background-position-y", 
    "background-repeat", 
    "background-size", 
    "backpressure", 
    "backup element queue", 
    "backup incumbent settings object stack", 
    "bad import script response", 
    "bad port", 
    "barred the element from constraint validation", 
    "base", 
    "base level", 
    "base size", 
    "base url", 
    "base url change steps", 
    "base-uri", 
    "base64 encoding", 
    "base64-value", 
    "base64url encoding", 
    "basefont", 
    "baseline", 
    "baseline alignment", 
    "baseline alignment preference", 
    "baseline content-alignment", 
    "baseline of a table-root", 
    "baseline of the row", 
    "baseline self-alignment", 
    "baseline set", 
    "baseline table", 
    "baseline-sharing group", 
    "baseline-shift", 
    "baseline-source", 
    "baseline-table", 
    "basic", 
    "basic attestation", 
    "basic filtered response", 
    "basic shape", 
    "basic url parser", 
    "batch cache operations", 
    "bd_addr", 
    "bday", 
    "bday-day", 
    "bday-month", 
    "bday-year", 
    "bdi", 
    "bdo", 
    "bearing angle", 
    "become browsing-context connected", 
    "become browsing-context disconnected", 
    "become disconnected", 
    "becomes connected", 
    "before attribute name state", 
    "before attribute value state", 
    "before doctype name state", 
    "before doctype public identifier state", 
    "before doctype system identifier state", 
    "before flag", 
    "before phase", 
    "before-active boundary time", 
    "before-change style", 
    "beforeinput", 
    "beforeinstallpromptevent", 
    "begin", 
    "beginning edges", 
    "behave as auto", 
    "behaves as auto", 
    "behaving as auto", 
    "beige", 
    "being activated", 
    "being actively pointed at", 
    "being rendered", 
    "being used as relevant canvas fallback content", 
    "best representation of the number n as a floating-point number", 
    "between doctype public and system identifiers state", 
    "bfc", 
    "bgcolor", 
    "bgsound", 
    "bi-orientational", 
    "bi-orientational transform", 
    "biaxial", 
    "bidi formatting characters", 
    "bidi isolation", 
    "bidi paragraph", 
    "bidi-isolate", 
    "bidi-isolated", 
    "bidirectionality", 
    "big", 
    "big5", 
    "big5 decoder", 
    "big5 encoder", 
    "big5 lead", 
    "biginteger", 
    "billing", 
    "binary data byte", 
    "binary object store", 
    "binding edge", 
    "biometric authenticator", 
    "biometric recognition", 
    "bisque", 
    "bitmap", 
    "bitmap data", 
    "bitmap mode", 
    "bitmaprenderer", 
    "black", 
    "blanchedalmond", 
    "blank", 
    "blank!!pseudo-element", 
    "bleed area", 
    "blink", 
    "blob", 
    "blob response", 
    "blob url", 
    "blob url entry", 
    "blob url store", 
    "blob:", 
    "block", 
    "block axis", 
    "block bad port", 
    "block box", 
    "block boxes", 
    "block container", 
    "block container box", 
    "block container,", 
    "block dimension", 
    "block end", 
    "block flow direction", 
    "block formatting context", 
    "block formatting context root", 
    "block overflow ellipsis", 
    "block scripts", 
    "block size", 
    "block start", 
    "block-all-mixed-content", 
    "block-axis", 
    "block-ellipsis", 
    "block-end", 
    "block-flow direction", 
    "block-level", 
    "block-level box", 
    "block-level boxes", 
    "block-level content", 
    "block-level elements", 
    "block-overflow", 
    "block-size", 
    "block-start", 
    "block-step", 
    "block-step-align", 
    "block-step-insert", 
    "block-step-round", 
    "block-step-size", 
    "blockable", 
    "blockable mixed content", 
    "blocked by a modal dialog", 
    "blocked media element", 
    "blocked-on-parser", 
    "blockification", 
    "blockify", 
    "blocklisted", 
    "blocklisted for reads", 
    "blocklisted for writes", 
    "blockquote", 
    "blue", 
    "bluetooth cache", 
    "bluetooth device", 
    "bluetooth device name", 
    "bluetooth tree", 
    "blueviolet", 
    "blur", 
    "blur radius", 
    "body", 
    "body element", 
    "body-ok", 
    "bogus comment state", 
    "bogus doctype state", 
    "bold", 
    "bolder", 
    "bond", 
    "bookmark-label", 
    "bookmark-level", 
    "bookmark-state", 
    "bookmarks", 
    "boolean", 
    "boolean attributes", 
    "boolean context", 
    "boolean feature", 
    "boolean permission query algorithm", 
    "boolean permission request algorithm", 
    "border", 
    "border area", 
    "border box", 
    "border edge", 
    "border image area", 
    "border properties", 
    "border radius", 
    "border-block", 
    "border-block-color", 
    "border-block-end", 
    "border-block-end-color", 
    "border-block-end-style", 
    "border-block-end-width", 
    "border-block-start", 
    "border-block-start-color", 
    "border-block-start-style", 
    "border-block-start-width", 
    "border-block-style", 
    "border-block-width", 
    "border-bottom", 
    "border-bottom-color", 
    "border-bottom-left-radius", 
    "border-bottom-right-radius", 
    "border-bottom-style", 
    "border-bottom-width", 
    "border-boundary", 
    "border-box", 
    "border-clip", 
    "border-clip-bottom", 
    "border-clip-left", 
    "border-clip-right", 
    "border-clip-top", 
    "border-collapse", 
    "border-color", 
    "border-end-end-radius", 
    "border-end-start-radius", 
    "border-image", 
    "border-image-outset", 
    "border-image-repeat", 
    "border-image-slice", 
    "border-image-source", 
    "border-image-width", 
    "border-inline", 
    "border-inline-color", 
    "border-inline-end", 
    "border-inline-end-color", 
    "border-inline-end-style", 
    "border-inline-end-width", 
    "border-inline-start", 
    "border-inline-start-color", 
    "border-inline-start-style", 
    "border-inline-start-width", 
    "border-inline-style", 
    "border-inline-width", 
    "border-left", 
    "border-left-color", 
    "border-left-style", 
    "border-left-width", 
    "border-limit", 
    "border-radius", 
    "border-right", 
    "border-right-color", 
    "border-right-style", 
    "border-right-width", 
    "border-spacing", 
    "border-start-end-radius", 
    "border-start-start-radius", 
    "border-style", 
    "border-top", 
    "border-top-color", 
    "border-top-left-radius", 
    "border-top-right-radius", 
    "border-top-style", 
    "border-top-width", 
    "border-width", 
    "bordercolor", 
    "bottom", 
    "bottommargin", 
    "bound credential", 
    "boundary box", 
    "boundary default action", 
    "boundary point", 
    "bounding box", 
    "box alignment properties", 
    "box fragment", 
    "box-corner", 
    "box-decoration-break", 
    "box-shadow", 
    "box-sizing", 
    "box-snap", 
    "br", 
    "br/edr bonding procedure", 
    "branches of a readable stream tee", 
    "break", 
    "break-after", 
    "break-before", 
    "break-inside", 
    "broadcast active observations", 
    "broadcastchannel settings object", 
    "broadcaster", 
    "broadcasting to other browsing contexts", 
    "broken", 
    "brown", 
    "browser fingerprinting", 
    "browsing context", 
    "browsing context container", 
    "browsing context group", 
    "browsing context group set", 
    "browsing context name", 
    "browsing context scope origin", 
    "browsing context set", 
    "browsing-context connected", 
    "bubble phase", 
    "bubbling phase", 
    "bucket", 
    "buffer source types", 
    "buffersource", 
    "bulk transfers", 
    "burlywood", 
    "button", 
    "button layout", 
    "button state (type=button)", 
    "buttonface", 
    "buttonhighlight", 
    "buttons", 
    "buttonshadow", 
    "buttontext", 
    "by", 
    "by computed value", 
    "byob readers", 
    "byte", 
    "byte less than", 
    "byte pattern", 
    "byte sequence", 
    "byte-case-insensitive", 
    "byte-lowercase", 
    "byte-uppercase", 
    "c", 
    "c edge", 
    "c0 control", 
    "c0 control or space", 
    "c0 control percent-encode set", 
    "c0 controls or spaces", 
    "cache attempt", 
    "cache batch operation", 
    "cache entry", 
    "cache entry match", 
    "cache failure steps", 
    "cache host", 
    "cache mode", 
    "cache mode flag", 
    "cache-control", 
    "cached", 
    "cached ecmascript object", 
    "cadetblue", 
    "calc()", 
    "calcmode", 
    "calculate box size", 
    "calculate depth for node", 
    "calculate the part element map", 
    "calibration", 
    "call", 
    "call a user object's operation", 
    "callback", 
    "callback context", 
    "callback function", 
    "callback function types", 
    "callback interface", 
    "callback interface member", 
    "callback interface types", 
    "callback reaction", 
    "callback this value", 
    "can autoplay flag", 
    "can be manually scrolled", 
    "can be scrolled manually", 
    "can expose sensor readings", 
    "can share memory with", 
    "cancel a readable stream", 
    "cancel an animation", 
    "cancel event", 
    "cancelanimationframe(handle)", 
    "canceled flag", 
    "candidate event handlers", 
    "candidate event listeners", 
    "candidate examination algorithm", 
    "candidate for constraint validation", 
    "cannot be manually scrolled", 
    "cannot be scrolled manually", 
    "cannot have a username/password/port", 
    "cannot navigate", 
    "cannot-be-a-base-url flag", 
    "cannot-be-a-base-url path state", 
    "canonical unit", 
    "canonicalizelanguagetag", 
    "canplay", 
    "canplaythrough", 
    "canvas", 
    "canvas blob serialization task source", 
    "canvas context mode", 
    "canvas pixel arraybuffer", 
    "cap shapes", 
    "caption", 
    "caption width minimum (capmin)", 
    "caption-side", 
    "captions", 
    "captiontext", 
    "capture phase", 
    "captures snap positions", 
    "card", 
    "caret", 
    "caret node", 
    "caret offset", 
    "caret position", 
    "caret range", 
    "caret-color", 
    "caret-shape", 
    "cascade", 
    "cascade origin", 
    "cascaded value", 
    "cascading style sheets (css)", 
    "case-sensitive", 
    "categories", 
    "cbor", 
    "cc-additional-name", 
    "cc-csc", 
    "cc-exp", 
    "cc-exp-month", 
    "cc-exp-year", 
    "cc-family-name", 
    "cc-given-name", 
    "cc-name", 
    "cc-number", 
    "cc-type", 
    "cdata section bracket state", 
    "cdata section end state", 
    "cdata section state", 
    "cdata sections", 
    "cdata-in-html-content", 
    "cell", 
    "cell intrinsic offsets", 
    "cellpadding", 
    "cellspacing", 
    "center", 
    "centered alignment", 
    "central", 
    "central baseline", 
    "ceremony", 
    "chain.", 
    "chains", 
    "change", 
    "change an attribute", 
    "change the encoding", 
    "change the preferred css style sheet set name", 
    "channel messaging", 
    "channel name", 
    "chapters", 
    "char", 
    "character", 
    "character encoding", 
    "character encoding declaration", 
    "character map", 
    "character reference code", 
    "character reference state", 
    "character references", 
    "character value", 
    "character-reference-outside-unicode-range", 
    "characteristic", 
    "characteristic descriptor discovery", 
    "characteristic descriptors", 
    "characteristic discovery", 
    "characteristic extended properties", 
    "characteristic properties", 
    "characteristic value indications", 
    "characteristic value notification", 
    "characteristic value read", 
    "characteristic value write", 
    "characters", 
    "charoff", 
    "charset", 
    "chartreuse", 
    "charwidth", 
    "check if three code points would start a number", 
    "check if three code points would start an identifier", 
    "check if two code points are a valid escape", 
    "check if we can run script", 
    "check permissions for device", 
    "check sensor policy-controlled features", 
    "check that a key could be injected into a value", 
    "check the completion record", 
    "check the usability of the image argument", 
    "check the validity of the control transfer parameters", 
    "check validity steps", 
    "check-for-apache-bug flag", 
    "checkbox", 
    "checkbox state (type=checkbox)", 
    "checkedness", 
    "checking", 
    "child", 
    "child browsing context", 
    "child combinator", 
    "child layout", 
    "child text content", 
    "child text content change steps", 
    "child-src", 
    "childnode", 
    "chocolate", 
    "chromatic adaptation transform", 
    "chunk", 
    "circ", 
    "circle", 
    "circle()", 
    "circled-lower-latin", 
    "circular reference", 
    "cite", 
    "clamp a grid area", 
    "clamp()", 
    "clamped to the range", 
    "class", 
    "class constructor", 
    "class selector", 
    "class string", 
    "classes", 
    "classic script", 
    "classic scrollbars", 
    "classid", 
    "clean up after running a callback", 
    "clean up after running script", 
    "clean up the disconnected device", 
    "cleanup indexed database transactions", 
    "clear", 
    "clear an object store", 
    "clear cache entries", 
    "clear registration", 
    "clear the list of active formatting elements up to the last marker", 
    "clear the stack back to a table body context", 
    "clear the stack back to a table context", 
    "clear the stack back to a table row context", 
    "clearance.", 
    "click", 
    "click in progress flag", 
    "client", 
    "client characteristic configuration", 
    "client data", 
    "client device", 
    "client extension", 
    "client extension input", 
    "client extension output", 
    "client extension processing", 
    "client message queue", 
    "client platform", 
    "client-side", 
    "client-side credential storage modality", 
    "client-side-resident public key credential source", 
    "clip", 
    "clip-path", 
    "clip-rule", 
    "clippath", 
    "clipping path", 
    "clipping region", 
    "clone", 
    "clone a node", 
    "cloneNode()", 
    "cloning steps", 
    "close a browsing context", 
    "close a database connection", 
    "close a p element", 
    "close a worker", 
    "close the cell", 
    "close the websocket connection", 
    "close-quote", 
    "closed", 
    "closed flag", 
    "closed subpath", 
    "closed-shadow-hidden", 
    "closest-corner", 
    "closest-side", 
    "clustered scripts", 
    "code", 
    "code point", 
    "code unit", 
    "code unit less than", 
    "code unit prefix", 
    "code units", 
    "codebase", 
    "codetype", 
    "col", 
    "colgroup", 
    "collapse", 
    "collapse through", 
    "collapsed annotation", 
    "collapsed flex item", 
    "collapsed gutter", 
    "collapsed margin", 
    "collapsed track", 
    "collapsible", 
    "collapsible white space", 
    "collapsing margins", 
    "colleague", 
    "collect Credentials from the credential store", 
    "collect a sequence of code points", 
    "collect an http quoted string", 
    "collect attribute values", 
    "collect attribute values of an inheritance stack", 
    "collect documents to unfullscreen", 
    "collecting a sequence of code points", 
    "collecting an http quoted string", 
    "collecting the first vcard subproperty", 
    "collecting vcard subproperties", 
    "collection", 
    "color", 
    "color interpolation hint", 
    "color state (type=color)", 
    "color stop", 
    "color stop list", 
    "color()", 
    "color-adjust", 
    "color-interpolation", 
    "color-interpolation-filters", 
    "color-profile", 
    "color-rendering", 
    "color-scheme", 
    "color:<color>", 
    "column", 
    "column axis", 
    "column box", 
    "column break", 
    "column combinator", 
    "column gap", 
    "column group", 
    "column group header", 
    "column header", 
    "column height", 
    "column row", 
    "column rule", 
    "column width", 
    "column-count", 
    "column-fill", 
    "column-gap", 
    "column-rule", 
    "column-rule-color", 
    "column-rule-style", 
    "column-rule-width", 
    "column-span", 
    "column-width", 
    "columns", 
    "combinators", 
    "combine", 
    "combining shadow lists", 
    "command", 
    "comment", 
    "comment end bang state", 
    "comment end dash state", 
    "comment end state", 
    "comment less-than sign bang dash dash state", 
    "comment less-than sign bang dash state", 
    "comment less-than sign bang state", 
    "comment less-than sign state", 
    "comment start dash state", 
    "comment start state", 
    "comment state", 
    "commentary", 
    "comments", 
    "commit a transaction", 
    "commit computed styles", 
    "commit()", 
    "common-ligatures", 
    "compact", 
    "compare media queries", 
    "compare two keys", 
    "compatible baseline alignment preferences", 
    "compatible units", 
    "compiled pattern regular expression", 
    "completed transition", 
    "completely available", 
    "completely loaded", 
    "completeness flag", 
    "completion record", 
    "complex selector", 
    "component value", 
    "composed flag", 
    "composite", 
    "composite face", 
    "composite operation", 
    "composite operation accumulate", 
    "composite operation add", 
    "composite operation replace", 
    "composited value", 
    "compositeoperation", 
    "composition", 
    "compositionend", 
    "compositionstart", 
    "compositionupdate", 
    "compound selector", 
    "computationally independent", 
    "compute an mp3 frame size", 
    "compute missing keyframe offsets", 
    "compute the effective overload set", 
    "computed keyframe offset", 
    "computed keyframes", 
    "computed mime type", 
    "computed stylepropertymap", 
    "computed track list", 
    "computed value", 
    "concatenate", 
    "concatenation", 
    "concrete object size", 
    "condensed", 
    "conditional group rule", 
    "conditional group rules", 
    "conditional processing attribute", 
    "conditionally hsts-safe origin", 
    "confidence", 
    "configuration descriptor", 
    "conformance::authoring tool", 
    "conformance::processor", 
    "conformance::style sheet", 
    "conformant style sheet", 
    "conformant user agent", 
    "conforming documents", 
    "conforming ecmascript implementation", 
    "conforming implementation", 
    "conforming scripted web animations user agent", 
    "conforming set of idl fragments", 
    "conforming user agent", 
    "conic-gradient()", 
    "connect", 
    "connect to sensor", 
    "connect-src", 
    "connected", 
    "connection", 
    "connection flag", 
    "connection-checking wrapper", 
    "consecutive", 
    "consequential interfaces", 
    "considered text", 
    "console", 
    "constant", 
    "constrainedness", 
    "constraint rectangle", 
    "constrainterror", 
    "construct", 
    "construct a fragment result", 
    "constructing", 
    "constructing entry list", 
    "constructing the entry list", 
    "construction stack", 
    "consume a component value", 
    "consume a data type name", 
    "consume a declaration", 
    "consume a function", 
    "consume a list of declarations", 
    "consume a list of rules", 
    "consume a name", 
    "consume a number", 
    "consume a numeric token", 
    "consume a qualified rule", 
    "consume a simple block", 
    "consume a string token", 
    "consume a syntax component", 
    "consume a syntax descriptor", 
    "consume a token", 
    "consume a unicode-range token", 
    "consume a url token", 
    "consume an at-rule", 
    "consume an escaped code point", 
    "consume an ident-like token", 
    "consume comments", 
    "consume the next input token", 
    "consume the remnants of a bad url", 
    "consumed as part of an attribute", 
    "consumer", 
    "contact", 
    "contain", 
    "contain constraint", 
    "container element", 
    "container frame element", 
    "container policy", 
    "containing block", 
    "containing block chain", 
    "containing block for all descendants", 
    "containing only", 
    "containment", 
    "contains", 
    "contains a header-delivered content security policy", 
    "content", 
    "content area", 
    "content attributes", 
    "content box", 
    "content document", 
    "content edge", 
    "content encoding", 
    "content height", 
    "content language", 
    "content model", 
    "content models", 
    "content rect", 
    "content security policy", 
    "content security policy directive", 
    "content security policy object", 
    "content security policy state", 
    "content security policy syntax", 
    "content size suggestion", 
    "content type", 
    "content width", 
    "content writing system", 
    "content()", 
    "content,", 
    "content-based minimum size", 
    "content-box", 
    "content-disposition", 
    "content-distribution", 
    "content-distribution properties", 
    "content-empty page", 
    "content-language", 
    "content-list", 
    "content-security-policy", 
    "content-security-policy-report-only", 
    "content-type", 
    "content-type metadata", 
    "contentEditable", 
    "contenteditable", 
    "contents", 
    "contents of an arraybuffer", 
    "contentscripttype", 
    "context", 
    "context element", 
    "context mode", 
    "context object", 
    "context-specific sniffing algorithm", 
    "contextmenu", 
    "contexts in which this element can be used", 
    "contextual", 
    "contiguous exclusive text nodes", 
    "contiguous text nodes", 
    "continue", 
    "contributes a script-blocking style sheet", 
    "control", 
    "control transfer", 
    "control's data", 
    "control-character-in-input-stream", 
    "control-character-reference", 
    "convert a cssunitvalue", 
    "convert a domstring to a sequence of unicode scalar values", 
    "convert a json-derived javascript value to an infra value", 
    "convert a key to a value", 
    "convert a list of dimensions to a list of pixel values", 
    "convert a non-negative integer i to an octet string of length n", 
    "convert a serialized value to an ecmascript value", 
    "convert a string to a number", 
    "convert a value to a key", 
    "convert a value to a key range", 
    "convert a value to a multientry key", 
    "convert code unit to scalar value", 
    "convert line endings to native", 
    "convert to a sequence of unicode scalar values", 
    "converted to an ecmascript value", 
    "converted to an idl value", 
    "converted to ecmascript values", 
    "converted to idl dictionary value", 
    "converted to idl values", 
    "converted to serialized values", 
    "converting", 
    "converting a character width to pixels", 
    "converting a json-derived javascript value to an infra value", 
    "converting line endings to native", 
    "converting nodes into a node", 
    "converting to a sequence of unicode scalar values", 
    "cookie", 
    "cookie-averse document object", 
    "cookie-string", 
    "coordinated self-alignment preference", 
    "coords", 
    "copy", 
    "copy-into", 
    "copydatablockbytes", 
    "coral", 
    "corb check", 
    "corb-protected mime type", 
    "core attributes", 
    "corner diagonal", 
    "corner-shape", 
    "corners", 
    "cornflowerblue", 
    "cornsilk", 
    "corresponding default operation", 
    "corresponding element", 
    "corresponding use element", 
    "cors check", 
    "cors filtered response", 
    "cors non-wildcard request-header name", 
    "cors protocol", 
    "cors request", 
    "cors settings attribute", 
    "cors-cross-origin", 
    "cors-preflight cache", 
    "cors-preflight fetch", 
    "cors-preflight request", 
    "cors-safelisted method", 
    "cors-safelisted request-header", 
    "cors-safelisted response-header name", 
    "cors-same-origin", 
    "cors-unsafe request-header byte", 
    "cors-unsafe request-header names", 
    "cos()", 
    "count map", 
    "count the records in a range", 
    "counter", 
    "counter style", 
    "counter symbol", 
    "counter()", 
    "counter-increment", 
    "counter-reset", 
    "counter-set", 
    "counters()", 
    "country", 
    "country-name", 
    "cover constraint", 
    "crash reports", 
    "create a 2d matrix", 
    "create a 3d matrix", 
    "create a bluetoothcharacteristicproperties instance from the characteristic", 
    "create a bluetoothremotegattcharacteristic representing", 
    "create a bluetoothremotegattdescriptor representing", 
    "create a bluetoothremotegattservice representing", 
    "create a classic script", 
    "create a css style sheet", 
    "create a cssunitvalue from a pair", 
    "create a cssunitvalue from a sum value item", 
    "create a date object", 
    "create a dommatrix from a 2d dictionary", 
    "create a dommatrix from a dictionary", 
    "create a dommatrix from the 2d dictionary", 
    "create a dommatrix from the dictionary", 
    "create a dommatrixreadonly from the 2d dictionary", 
    "create a dommatrixreadonly from the dictionary", 
    "create a dompoint from the dictionary", 
    "create a dompointreadonly from the dictionary", 
    "create a domquad from the domquadinit dictionary", 
    "create a domquad from the domrectinit dictionary", 
    "create a domrect from the dictionary", 
    "create a domrectreadonly from the dictionary", 
    "create a frozen array", 
    "create a javascript module script", 
    "create a json module script", 
    "create a layout api context", 
    "create a layout constraints object", 
    "create a layout fragment", 
    "create a legacy callback interface object", 
    "create a mediaerror", 
    "create a medialist object", 
    "create a named constructor", 
    "create a named properties object", 
    "create a namespace object", 
    "create a new animator instance", 
    "create a new auxiliary browsing context", 
    "create a new browsing context", 
    "create a new browsing context group", 
    "create a new cache entry", 
    "create a new counter", 
    "create a new javascript realm", 
    "create a new messageport object", 
    "create a new nested browsing context", 
    "create a new resolved promise", 
    "create a new top-level browsing context", 
    "create a paintrenderingcontext2d object", 
    "create a permissionstatus", 
    "create a potential-cors request", 
    "create a sum value", 
    "create a synthetic module record with a default export", 
    "create a type", 
    "create a type from a unit map", 
    "create a workletglobalscope", 
    "create an element", 
    "create an element for a token", 
    "create an entry", 
    "create an event", 
    "create an imagedata object", 
    "create an inheritance stack", 
    "create an interface object", 
    "create an interface prototype object", 
    "create an intrinsic sizes object", 
    "create an underlying value", 
    "create client", 
    "create job", 
    "create mock sensor", 
    "create window client", 
    "createDocument()", 
    "createElement()", 
    "createElementNS()", 
    "createHTMLDocument()", 
    "createbytedatablock", 
    "created", 
    "createdataproperty", 
    "createsyntheticmodule", 
    "creating a frozen array", 
    "creating a frozen array from an iterable", 
    "creating a sequence from an iterable", 
    "creating a sum value", 
    "creating a type", 
    "creating an element", 
    "creating an event", 
    "creating an operation function", 
    "creation", 
    "creator base url", 
    "creator origin", 
    "creator referrer policy", 
    "creator url", 
    "credential", 
    "credential chooser", 
    "credential id", 
    "credential key pair", 
    "credential private key", 
    "credential properties", 
    "credential public key", 
    "credential source", 
    "credential storage modality", 
    "credential store", 
    "credentialid", 
    "credentialidlength", 
    "credentialpublickey", 
    "credentials", 
    "credentials mode", 
    "credprops", 
    "crimson", 
    "critical subresources", 
    "crop bitmap data to the source rectangle with formatting", 
    "cross axis", 
    "cross dimension", 
    "cross size", 
    "cross size property", 
    "cross-axis", 
    "cross-axis baseline set", 
    "cross-document messaging", 
    "cross-end", 
    "cross-fade()", 
    "cross-origin", 
    "cross-origin request", 
    "cross-origin resource policy check", 
    "cross-origin-resource-policy", 
    "cross-platform attachment", 
    "cross-size", 
    "cross-start", 
    "crossorigin", 
    "crossoriginget ( o, p, receiver )", 
    "crossorigingetownpropertyhelper ( o, p )", 
    "crossoriginownpropertykeys ( o )", 
    "crossoriginproperties ( o )", 
    "crossoriginpropertyfallback ( p )", 
    "crossoriginset ( o, p, v, receiver )", 
    "crush", 
    "crypto", 
    "cryptographic nonce", 
    "cryptographic nonce metadata", 
    "cryptokey", 
    "cryptokeypair", 
    "csp list", 
    "csp violation report", 
    "css", 
    "css bracketed range notation", 
    "css color profile", 
    "css declaration", 
    "css declaration block", 
    "css ident", 
    "css identifier", 
    "css layout box", 
    "css level 1", 
    "css level 2", 
    "css level 3", 
    "css level 4", 
    "css property to idl attribute", 
    "css qualified name", 
    "css region", 
    "css rule", 
    "css rules", 
    "css style sheet", 
    "css style sheet set", 
    "css style sheet set name", 
    "css style sheets", 
    "css-connected", 
    "css-wide keywords", 
    "cssconditionrule", 
    "cssfontfacerule", 
    "cssfontfeaturevaluesrule", 
    "cssgroupingrule", 
    "cssmediarule", 
    "cssstyledeclaration", 
    "csssupportsrule", 
    "cubic bézier easing function", 
    "cue", 
    "cue-after", 
    "cue-before", 
    "cuechange", 
    "current", 
    "current composition operator", 
    "current default path", 
    "current document readiness", 
    "current drag operation", 
    "current element queue", 
    "current entry", 
    "current entry of the joint session history", 
    "current event target", 
    "current finished promise", 
    "current global environment", 
    "current global object", 
    "current high resolution time", 
    "current input character", 
    "current input code point", 
    "current input token", 
    "current iteration", 
    "current layout", 
    "current node", 
    "current pixel density", 
    "current playback position", 
    "current ready promise", 
    "current realm record", 
    "current request", 
    "current settings object", 
    "current svg document fragment", 
    "current target element", 
    "current template insertion mode", 
    "current text position", 
    "current time", 
    "current transformation matrix", 
    "current transition generation", 
    "current translate point object", 
    "current tuple", 
    "current url", 
    "current value", 
    "current-password", 
    "currentcolor", 
    "currently focused area of a top-level browsing context", 
    "currently running task", 
    "cursive", 
    "cursive script", 
    "cursor", 
    "custom", 
    "custom data attribute", 
    "custom element", 
    "custom element constructor", 
    "custom element definition", 
    "custom element reaction queue", 
    "custom element reactions", 
    "custom element reactions stack", 
    "custom element state", 
    "custom media query", 
    "custom property", 
    "custom property name string", 
    "custom selector", 
    "custom validity error message", 
    "customized built-in element", 
    "cx", 
    "cy", 
    "cyan", 
    "cyclic module record", 
    "cyclic percentage", 
    "d", 
    "darkblue", 
    "darkcyan", 
    "darkgoldenrod", 
    "darkgray", 
    "darkgreen", 
    "darkgrey", 
    "darkkhaki", 
    "darkmagenta", 
    "darkolivegreen", 
    "darkorange", 
    "darkorchid", 
    "darkred", 
    "darksalmon", 
    "darkseagreen", 
    "darkslateblue", 
    "darkslategray", 
    "darkslategrey", 
    "darkturquoise", 
    "darkviolet", 
    "dash list", 
    "dash positions", 
    "dashed", 
    "data", 
    "data block", 
    "data stage", 
    "data state", 
    "data type name", 
    "data url", 
    "data-", 
    "data:", 
    "data: url processor", 
    "data: url struct", 
    "data_clone_err", 
    "database", 
    "database access task source", 
    "datacloneerror", 
    "dataerror", 
    "datafld", 
    "dataformatas", 
    "datalist", 
    "datapagesize", 
    "datasrc", 
    "date", 
    "date state (type=date)", 
    "datetime value", 
    "datetime-local", 
    "dblclick", 
    "dd", 
    "deactivate a sensor object", 
    "deactivate an event handler", 
    "dead key", 
    "decimal", 
    "decimal character reference start state", 
    "decimal character reference state", 
    "decimal-leading-zero", 
    "declaration", 
    "declaration block", 
    "declarative custom selector", 
    "declare", 
    "declared", 
    "declared feature policy", 
    "declared origin", 
    "declared policy", 
    "declared stylepropertymap", 
    "declared value", 
    "decode", 
    "decode and enqueue a chunk", 
    "decoder", 
    "decoding", 
    "decorated bounding box", 
    "decorating box", 
    "decrypt", 
    "dedicated media source failure steps", 
    "dedicated worker agent", 
    "deep link", 
    "deeppink", 
    "deepskyblue", 
    "default", 
    "default `user-agent` value", 
    "default action", 
    "default allowlist", 
    "default allowlists", 
    "default behavior", 
    "default button", 
    "default classic script fetch options", 
    "default control pipe", 
    "default document timeline", 
    "default encode set", 
    "default endpoint", 
    "default face", 
    "default fetch and process the linked resource", 
    "default iterator object", 
    "default maximum", 
    "default minimum", 
    "default namespace", 
    "default object size", 
    "default orientation", 
    "default origin", 
    "default playback start position", 
    "default port", 
    "default process the linked resource", 
    "default readers", 
    "default sensor", 
    "default sizing algorithm", 
    "default slot.", 
    "default step", 
    "default step base", 
    "default style sheet", 
    "default tojson operation", 
    "default unforgeable valueof function", 
    "default value", 
    "default value override", 
    "default-src", 
    "default-style", 
    "default/on", 
    "defer", 
    "define an algorithm", 
    "define the attributes", 
    "define the constants", 
    "define the global property references", 
    "define the operations", 
    "define the regular attributes", 
    "define the regular operations", 
    "define the static attributes", 
    "define the static operations", 
    "define the unforgeable regular attributes", 
    "define the unforgeable regular operations", 
    "defined", 
    "defined property name", 
    "defining term", 
    "definite", 
    "definite column position", 
    "definite column span", 
    "definite grid position", 
    "definite grid span", 
    "definite position", 
    "definite row position", 
    "definite row span", 
    "definite size", 
    "definite span", 
    "definition of keys and values", 
    "definitions", 
    "defs", 
    "del", 
    "delay the load event", 
    "delaying load events mode", 
    "delaying-the-load-event flag", 
    "delays the load event", 
    "delete", 
    "delete a database", 
    "delete an existing named property", 
    "delete mock sensor", 
    "delete records from an object store", 
    "delete the selection", 
    "deleter", 
    "deleters", 
    "deliver a network report", 
    "deliver resize loop error notification", 
    "delta", 
    "density-corrected intrinsic width and height", 
    "deprecated", 
    "deprecates", 
    "deprecation reports", 
    "dequeue", 
    "derivebits", 
    "derivekey", 
    "desc", 
    "descendant browsing context", 
    "descendant combinator", 
    "descendant script fetch options", 
    "descendant text content", 
    "description", 
    "descriptions", 
    "descriptive element", 
    "descriptor", 
    "descriptor_declaration", 
    "descriptors", 
    "deserialization steps", 
    "designmode", 
    "desired size to fill a stream's internal queue", 
    "destination", 
    "desynchronized", 
    "detach", 
    "detacharraybuffer", 
    "detached", 
    "detaching from a media element", 
    "details", 
    "details notification task steps", 
    "determine nosniff", 
    "determine request's referrer", 
    "determine the device pixel ratio", 
    "determine the fallback encoding", 
    "determine the intrinsic sizes", 
    "determine the target of an event handler", 
    "determine the type of a calculation", 
    "determine the value of a named property", 
    "determine the value of an indexed property", 
    "determines the set of origins on which the public key credential may be exercised", 
    "determining the type of the resource", 
    "device descriptor", 
    "device discovery procedure", 
    "device sensor", 
    "device-cmyk()", 
    "device-pixel-ratio", 
    "dfn", 
    "diagonal-fractions", 
    "dialog", 
    "dialog focusing steps", 
    "dice", 
    "dictionary", 
    "dictionary constructor", 
    "dictionary members", 
    "dictionary types", 
    "did-perform-automatic-track-selection", 
    "digest", 
    "digit", 
    "dimension", 
    "dimension attributes", 
    "dimgray", 
    "dimgrey", 
    "dir", 
    "direct nesting", 
    "directed progress", 
    "direction", 
    "direction at the end of a path segment", 
    "direction at the start of a path segment", 
    "direction of a path", 
    "direction of playback", 
    "directional embedding", 
    "directional override", 
    "directionality of an attribute", 
    "directionality-capable attributes", 
    "directionally scroll an element", 
    "directionally scroll the element", 
    "directive prologue", 
    "directive-name", 
    "directive-value", 
    "directives", 
    "directly nested", 
    "dirname", 
    "dirtiness", 
    "dirty checkedness", 
    "dirty checkedness flag", 
    "dirty value flag", 
    "disable internals", 
    "disabled", 
    "disabled fieldset", 
    "disabled flag", 
    "disabled state", 
    "disassociate animator instance of worklet animation", 
    "disc", 
    "discard", 
    "discard a document", 
    "disconnect", 
    "discover all characteristic descriptors", 
    "discover characteristics by uuid", 
    "discover primary service by service uuid", 
    "discoverable mode", 
    "discrete", 
    "discretionary-ligatures", 
    "disowned", 
    "dispatch", 
    "dispatch the event", 
    "display", 
    "display a plugin", 
    "display no plugin", 
    "display size", 
    "display state", 
    "display type", 
    "displaymodetype", 
    "distinguishable", 
    "distinguishing argument index", 
    "distribute extra space", 
    "distributed alignment", 
    "distributed width", 
    "distributing excess width to columns", 
    "distribution list", 
    "div", 
    "dl", 
    "dns resolution", 
    "do not apply", 
    "doctype", 
    "doctype legacy string", 
    "doctype name state", 
    "doctype public identifier (double-quoted) state", 
    "doctype public identifier (single-quoted) state", 
    "doctype state", 
    "doctype system identifier (double-quoted) state", 
    "doctype system identifier (single-quoted) state", 
    "document", 
    "document base url", 
    "document css style sheets", 
    "document element", 
    "document family", 
    "document for timing", 
    "document language", 
    "document layout definition", 
    "document layout definitions", 
    "document open steps", 
    "document order", 
    "document paint definition", 
    "document paint definitions", 
    "document response", 
    "document timeline", 
    "document tree", 
    "document white space", 
    "document white space characters", 
    "document write steps", 
    "document's body element", 
    "document-domain", 
    "document-tree child browsing context", 
    "document-tree child browsing context name property set", 
    "document.write(...)", 
    "document.writeln(...)", 
    "documentfragment", 
    "documents", 
    "documenttype", 
    "dodgerblue", 
    "dom application", 
    "dom interface", 
    "dom level 0", 
    "dom manipulation task source", 
    "dom tree accessors", 
    "domactivate", 
    "domain", 
    "domain name", 
    "domain namespace tree", 
    "domain to ascii", 
    "domain to unicode", 
    "domattrmodified", 
    "domcharacterdatamodified", 
    "domexception", 
    "domexception constructor object", 
    "domexception prototype object", 
    "domfocusin", 
    "domfocusout", 
    "domhighrestimestamp", 
    "domimplementation", 
    "dominant baseline", 
    "dominant-baseline", 
    "dommatrix", 
    "dommatrix2dinit", 
    "dommatrixinit", 
    "domnodeinserted", 
    "domnodeinsertedintodocument", 
    "domnoderemoved", 
    "domnoderemovedfromdocument", 
    "domparser", 
    "domstring", 
    "domsubtreemodified", 
    "domtokenlist", 
    "done", 
    "dotted", 
    "double", 
    "double-dot path segment", 
    "double-rainbow()", 
    "download", 
    "downloading", 
    "downloads a hyperlink", 
    "dpcm", 
    "dpi", 
    "dppx", 
    "drag", 
    "drag and drop", 
    "drag data store", 
    "drag data store allowed effects state", 
    "drag data store bitmap", 
    "drag data store default feedback", 
    "drag data store hot spot coordinate", 
    "drag data store item list", 
    "drag data store mode", 
    "dragend", 
    "dragenter", 
    "dragexit", 
    "dragleave", 
    "dragover", 
    "dragstart", 
    "draw a paint image", 
    "drawing model", 
    "drawing states", 
    "drop", 
    "dropped initial", 
    "dropzone", 
    "dt", 
    "dtend", 
    "dtstart", 
    "duplex printing", 
    "duplicate-attribute", 
    "dur", 
    "duration", 
    "duration time component", 
    "duration time component scale", 
    "durationchange", 
    "dynamic markup insertion", 
    "e-mail", 
    "e-mail state (type=email)", 
    "earliest possible position", 
    "earliest possible position when the script started", 
    "early error", 
    "easing function", 
    "east asian width property", 
    "ecdaa", 
    "ecdaa-issuer public key", 
    "ecdh derivation steps", 
    "ecdh generation steps", 
    "ecdh key export steps", 
    "ecdh key import steps", 
    "ecdhkeyderiveparams", 
    "ecdsa generation steps", 
    "ecdsa key export steps", 
    "ecdsa key import steps", 
    "ecdsa signature steps", 
    "ecdsa verification steps", 
    "ecdsaparams", 
    "eckeyalgorithm", 
    "eckeygenparams", 
    "eckeyimportparams", 
    "editable", 
    "editable element", 
    "editing host", 
    "editing host of", 
    "editor's draft", 
    "effect stack", 
    "effect value", 
    "effective character map", 
    "effective domain", 
    "effective media volume", 
    "effective overload set", 
    "effective playback rate", 
    "effective resident key requirement for credential creation", 
    "effective user verification requirement for assertion", 
    "effective user verification requirement for credential creation", 
    "elapsed time", 
    "element", 
    "element definition", 
    "element definition is running", 
    "element has the focus", 
    "element instance", 
    "element interface", 
    "element queue", 
    "element type", 
    "element()", 
    "element-based template.", 
    "element-not-rendered", 
    "elements", 
    "elements with default margins", 
    "elevation", 
    "eligible for autoplay", 
    "eligible track", 
    "ellipse", 
    "ellipse method steps", 
    "ellipse()", 
    "elliptic curve based direct anonymous attestation", 
    "em", 
    "email", 
    "embed", 
    "embed task source", 
    "embedded content", 
    "embedding custom non-visible data with the data-* attributes", 
    "embedding document", 
    "emergency", 
    "emptied", 
    "empty", 
    "empty cell", 
    "empty feature policy", 
    "empty float area", 
    "empty host", 
    "empty string", 
    "empty table", 
    "empty-cells", 
    "enable a css style sheet set", 
    "enable-background", 
    "enabled css style sheet set", 
    "encode", 
    "encode and enqueue a chunk", 
    "encode and flush", 
    "encoder", 
    "encoding", 
    "encoding labels", 
    "encoding name", 
    "encoding sniffing algorithm", 
    "encodingerror", 
    "encrypt", 
    "enctype", 
    "end", 
    "end delay", 
    "end of the range", 
    "end page value", 
    "end tag open state", 
    "end tags", 
    "end time", 
    "end-of-stream", 
    "end-tag-with-attributes", 
    "end-tag-with-trailing-solidus", 
    "ended", 
    "ended playback", 
    "ending edges", 
    "ending point", 
    "ending shape", 
    "ending token", 
    "endpoint", 
    "endpoint descriptor", 
    "endpoint group", 
    "endpoint-on-the-path", 
    "enforce the policy", 
    "enforced", 
    "enqueue", 
    "enqueue a custom element callback reaction", 
    "enqueue a custom element upgrade reaction", 
    "enqueue an element on the appropriate element queue", 
    "enqueuejob", 
    "enqueuejob(queuename, job, arguments)", 
    "ensure there is a subpath", 
    "ensurecspdoesnotblockstringcompilation", 
    "ensurecspdoesnotblockstringcompilation(callerrealm, calleerealm, source)", 
    "entangle", 
    "enter", 
    "enterKeyHint", 
    "enterkeyhint", 
    "entry", 
    "entry construction algorithm", 
    "entry execution context", 
    "entry global object", 
    "entry realm", 
    "entry settings object", 
    "entry update", 
    "entry value", 
    "enumerableownproperties", 
    "enumerate all devices attached to the system", 
    "enumerated attributes", 
    "enumeration", 
    "enumeration types", 
    "enumeration value", 
    "enumeration values", 
    "env()", 
    "environment", 
    "environment discarding steps", 
    "environment encoding", 
    "environment settings object", 
    "eof code point", 
    "eof-before-tag-name", 
    "eof-in-cdata", 
    "eof-in-comment", 
    "eof-in-doctype", 
    "eof-in-script-html-comment-like-text", 
    "eof-in-tag", 
    "equal numeric value", 
    "equal to", 
    "equivalent", 
    "equivalent path", 
    "equivalent token sequence", 
    "erase all event listeners and handlers", 
    "error", 
    "error mode", 
    "error name", 
    "error names table", 
    "error response", 
    "escapable raw text elements", 
    "escape a character", 
    "escape a character as code point", 
    "escape the vcard text string", 
    "escaped as code point", 
    "escaping", 
    "escaping a string", 
    "establish a websocket connection", 
    "establish an independent formatting context", 
    "establish an orthogonal flow", 
    "established an independent formatting context", 
    "establishes an independent formatting context", 
    "establishing an independent formatting context", 
    "establishing the media timeline", 
    "euc-jp", 
    "euc-jp decoder", 
    "euc-jp encoder", 
    "euc-jp jis0212 flag", 
    "euc-jp lead", 
    "euc-kr", 
    "euc-kr decoder", 
    "euc-kr encoder", 
    "euc-kr lead", 
    "eval()", 
    "evaluate", 
    "evaluate a key path on a value", 
    "evaluate media queries and report changes", 
    "evaluating a selector", 
    "event", 
    "event attribute", 
    "event constructing steps", 
    "event focus", 
    "event handler", 
    "event handler attributes", 
    "event handler content attribute", 
    "event handler event type", 
    "event handler idl attribute", 
    "event handler map", 
    "event interface", 
    "event listener", 
    "event loop", 
    "event loop begin", 
    "event loop end", 
    "event loop processing model", 
    "event order", 
    "event phase", 
    "event target", 
    "event type", 
    "eventinit", 
    "eventtarget", 
    "ex", 
    "example term", 
    "exception", 
    "exception objects", 
    "exception types", 
    "exceptions enabled flag", 
    "excess width", 
    "exchange mtu", 
    "excluded subtree", 
    "exclusion area", 
    "exclusion box", 
    "exclusion element", 
    "exclusive text node", 
    "exdate", 
    "execcommand()", 
    "execute a javascript: url request", 
    "execute a script block", 
    "exists", 
    "exit", 
    "exit fullscreen", 
    "exit value", 
    "expanded", 
    "expanded name", 
    "expanded transition property name", 
    "expired", 
    "explicit \"eof\" character", 
    "explicit entries", 
    "explicit grid", 
    "explicit grid properties", 
    "explicit section", 
    "explicitly supported", 
    "explicitly supported json mime type", 
    "explicitly supported xml mime type", 
    "exportkey", 
    "expose a user interface to the user", 
    "exposed", 
    "exposes", 
    "exposure set", 
    "expressly inert", 
    "extended attribute", 
    "extended inquiry response", 
    "extended-address", 
    "extension", 
    "extension identifier", 
    "extension point", 
    "extension sensor interface", 
    "extension specification", 
    "extension-token", 
    "extensions in use", 
    "extensions to the predefined set of link types", 
    "extensions to the predefined set of metadata names", 
    "external file reference", 
    "external resource", 
    "external resource link", 
    "externalapplicationresource", 
    "extra permission data", 
    "extra permission data constraints", 
    "extra permission data type", 
    "extra-condensed", 
    "extra-expanded", 
    "extract a key from a value using a key path", 
    "extract a mime type", 
    "extract any vcard data represented by those nodes", 
    "extract any vevent data represented by those nodes", 
    "extract header list values", 
    "extract header values", 
    "extract the microdata from those nodes into a json form", 
    "extractable", 
    "extracting header list values", 
    "extracting header values", 
    "extrinsic sizing", 
    "facets", 
    "facing pages", 
    "fail", 
    "fail the connection", 
    "fail the websocket connection", 
    "failed", 
    "failed to load", 
    "failover class", 
    "failure reason", 
    "failure sampling rate", 
    "failure_fraction", 
    "failures", 
    "fallback", 
    "fallback alignment", 
    "fallback base url", 
    "fallback content", 
    "fallback entries", 
    "fallback namespaces", 
    "fallback section", 
    "fallback size", 
    "false in the negative range", 
    "false-by-default", 
    "familiar with", 
    "family-name", 
    "fantasy", 
    "farthest-corner", 
    "farthest-side", 
    "fast", 
    "fax", 
    "feature policy", 
    "feature policy violation reports", 
    "feature separator", 
    "feature-identifier", 
    "feature-policy", 
    "featureless", 
    "feblend", 
    "fecolormatrix", 
    "fecomponenttransfer", 
    "fecomposite", 
    "feconvolvematrix", 
    "fediffuselighting", 
    "fedisplacementmap", 
    "fedistantlight", 
    "fedropshadow", 
    "feflood", 
    "fefunca", 
    "fefuncb", 
    "fefuncg", 
    "fefuncr", 
    "fegaussianblur", 
    "feimage", 
    "femerge", 
    "femergenode", 
    "femorphology", 
    "feoffset", 
    "fepointlight", 
    "fespecularlighting", 
    "fespotlight", 
    "fetch", 
    "fetch a classic script", 
    "fetch a classic worker script", 
    "fetch a classic worker-imported script", 
    "fetch a css style sheet", 
    "fetch a module script graph", 
    "fetch a module worker script graph", 
    "fetch a single module script", 
    "fetch a worklet script", 
    "fetch and invoke a worklet script", 
    "fetch and process the linked resource", 
    "fetch directives", 
    "fetch scheme", 
    "fetch the descendants of a module script", 
    "fetch the descendants of and instantiate a module script", 
    "fetch()", 
    "fetile", 
    "feturbulence", 
    "fictional tag sequence", 
    "fieldset", 
    "figcaption", 
    "figure", 
    "file", 
    "file host state", 
    "file read error", 
    "file reading task source", 
    "file slash state", 
    "file state", 
    "file type guidelines", 
    "file upload state (type=file)", 
    "filelist", 
    "filelock", 
    "fill", 
    "fill mode", 
    "fill painting area", 
    "fill positioning area", 
    "fill rule", 
    "fill-break", 
    "fill-color", 
    "fill-image", 
    "fill-opacity", 
    "fill-origin", 
    "fill-position", 
    "fill-repeat", 
    "fill-rule", 
    "fill-size", 
    "filled", 
    "filter", 
    "filter primitive", 
    "filter primitive attributes", 
    "filter primitive subregion", 
    "filter primitive tree", 
    "filter region", 
    "filter()", 
    "filter-margin-top, filter-margin-right, filter-margin-bottom, filter-margin-left", 
    "filter-primitive", 
    "filtered response", 
    "final charset", 
    "final mime type", 
    "find a potential indicated element", 
    "find a slot", 
    "find flattened slotables", 
    "find focusable areas", 
    "find slotables", 
    "find the first parse error", 
    "find the intersecting or enclosed descendants", 
    "find the matching font faces", 
    "find the non-container graphics elements", 
    "find the reporting frequency of a sensor object", 
    "find the shortest distance", 
    "find the typographic character for a character", 
    "finding a slot", 
    "finding flattened slotables", 
    "finding focusable areas", 
    "finding slotables", 
    "fingerprint", 
    "fingerprinting surface", 
    "finish an animation", 
    "finish event", 
    "finish job", 
    "finish notification steps", 
    "finishdynamicimport", 
    "finished", 
    "finished play state", 
    "fire", 
    "fire a dnd event", 
    "fire a focus event", 
    "fire a font load event", 
    "fire a functional event", 
    "fire a progress event", 
    "fire a progress event named e", 
    "fire a progress event or event", 
    "fire a success event", 
    "fire a sync event", 
    "fire a version change event", 
    "fire an advertisementreceived event", 
    "fire an error event", 
    "fire an event", 
    "fire functional event", 
    "firebrick", 
    "fired", 
    "fired unload", 
    "firing", 
    "firing a click event", 
    "firing a synthetic mouse event named e", 
    "firing submission events", 
    "first available font", 
    "first baseline set", 
    "first baselines", 
    "first child", 
    "first cross-axis baseline set", 
    "first formatted line", 
    "first main-axis baseline set", 
    "first symbol value", 
    "first-baseline alignment", 
    "first-baseline content-alignment", 
    "first-baseline self-alignment", 
    "first-factor platform authenticator", 
    "first-factor roaming authenticator", 
    "fit-content block size", 
    "fit-content inline size", 
    "fit-content size", 
    "fixed sizing function", 
    "flagged as full", 
    "flags", 
    "flags data type", 
    "flat tree", 
    "flattened element tree", 
    "flattened member types", 
    "flattening elements", 
    "flex", 
    "flex base size", 
    "flex container", 
    "flex direction", 
    "flex factor", 
    "flex factor sum", 
    "flex formatting context", 
    "flex fraction", 
    "flex item", 
    "flex layout", 
    "flex line", 
    "flex space", 
    "flex-basis", 
    "flex-direction", 
    "flex-flow", 
    "flex-grow", 
    "flex-level", 
    "flex-shrink", 
    "flex-wrap", 
    "flexible", 
    "flexible length", 
    "flexible sizing function", 
    "flexible tracks", 
    "float", 
    "float anchor", 
    "float area", 
    "float block formatting context", 
    "float containing block formatting context", 
    "float reference", 
    "float-defer", 
    "float-offset", 
    "float-reference", 
    "floated box", 
    "floating box", 
    "flood-color", 
    "flood-opacity", 
    "floralwhite", 
    "flow", 
    "flow content", 
    "flow fragment height", 
    "flow layout", 
    "flow of an element", 
    "flow-from", 
    "flow-into", 
    "flow-relative", 
    "flow-relative direction", 
    "flush and enqueue", 
    "flush code points consumed as a character reference", 
    "fn", 
    "focus", 
    "focus chain", 
    "focus fixup rule", 
    "focus ring", 
    "focus state", 
    "focus update steps", 
    "focusable", 
    "focusable area", 
    "focused", 
    "focused area of the document", 
    "focusevent", 
    "focusin", 
    "focusing steps", 
    "focusout", 
    "follows a hyperlink", 
    "font", 
    "font block period", 
    "font download timer", 
    "font failure period", 
    "font feature value declaration", 
    "font mime type", 
    "font source", 
    "font specific", 
    "font style source object", 
    "font swap period", 
    "font type pattern matching algorithm", 
    "font-face", 
    "font-face-name", 
    "font-face-src", 
    "font-face-uri", 
    "font-family", 
    "font-feature-settings", 
    "font-kerning", 
    "font-language-override", 
    "font-max-size", 
    "font-min-size", 
    "font-optical-sizing", 
    "font-palette", 
    "font-relative lengths", 
    "font-size", 
    "font-size-adjust", 
    "font-src", 
    "font-stretch", 
    "font-style", 
    "font-synthesis", 
    "font-synthesis-small-caps", 
    "font-synthesis-style", 
    "font-synthesis-weight", 
    "font-variant", 
    "font-variant-alternates", 
    "font-variant-caps", 
    "font-variant-east-asian", 
    "font-variant-emoji", 
    "font-variant-ligatures", 
    "font-variant-numeric", 
    "font-variant-position", 
    "font-variation-settings", 
    "font-weight", 
    "font_face_rule", 
    "font_face_sym", 
    "fontface", 
    "footer", 
    "footnote", 
    "footnote counter", 
    "footnote-display", 
    "footnote-policy", 
    "for", 
    "for each", 
    "forbidden header name", 
    "forbidden host code point", 
    "forbidden method", 
    "forbidden response-header name", 
    "force-quirks flag", 
    "forced break", 
    "forced break values", 
    "forced colors mode", 
    "forced line break", 
    "forced paragraph break", 
    "forced sandboxing flag set", 
    "forced-color-adjust", 
    "forcibly close", 
    "foreign", 
    "foreign elements", 
    "foreignobject", 
    "forestgreen", 
    "forget the media element's media-resource-specific tracks", 
    "forgiving-base64 decode", 
    "forgiving-base64 encode", 
    "form", 
    "form control maxlength attribute", 
    "form control minlength attribute", 
    "form element pointer", 
    "form owner", 
    "form submission", 
    "form-action", 
    "form-associated", 
    "form-associated custom element", 
    "form-associated elements", 
    "formaction", 
    "formatting", 
    "formatting context", 
    "formatting structure", 
    "formdata", 
    "formdataentryvalue", 
    "formenctype", 
    "formmethod", 
    "formnovalidate", 
    "formtarget", 
    "forward-compatible parsing", 
    "forwards to the internal map object", 
    "forwards to the internal set object", 
    "foster parenting", 
    "fr", 
    "fragment", 
    "fragment box", 
    "fragment case", 
    "fragment percent-encode set", 
    "fragment pseudo-element", 
    "fragment state", 
    "fragmentainer", 
    "fragmentation", 
    "fragmentation break", 
    "fragmentation container", 
    "fragmentation context", 
    "fragmentation direction", 
    "fragmentation root", 
    "fragmented flow", 
    "fragmenter", 
    "frame", 
    "frame border color", 
    "frame-ancestors", 
    "frame-ancestors directive", 
    "frame-current", 
    "frame-requested", 
    "frame-src", 
    "frameElement", 
    "frameborder", 
    "frameset", 
    "frameset-ok flag", 
    "framespacing", 
    "free space", 
    "freely fragmentable", 
    "frequency", 
    "fresh response", 
    "friend", 
    "from", 
    "from an external file", 
    "frozen array", 
    "frozen array type", 
    "frozen base url", 
    "ftn", 
    "fuchsia", 
    "full glyph cell", 
    "full-width", 
    "fullscreen an element", 
    "fullscreen element", 
    "fullscreen element ready check", 
    "fullscreen flag", 
    "fullscreen is supported", 
    "fullscreen-feature", 
    "fullwidth closing punctuation", 
    "fullwidth colon punctuation", 
    "fullwidth dot punctuation", 
    "fullwidth middle dot punctuation", 
    "fullwidth opening punctuation", 
    "fully clipped", 
    "fully decodable", 
    "fully exit fullscreen", 
    "fully inflexible", 
    "fully visible", 
    "function", 
    "function object", 
    "functional notation", 
    "functional pseudo-class", 
    "functionbody", 
    "functioncreate", 
    "furthest ancestral svg viewport", 
    "fx", 
    "fy", 
    "g", 
    "gain focus", 
    "gainsboro", 
    "gap", 
    "gap interoperability requirements", 
    "garbage-collect the connection", 
    "gather active observations at depth", 
    "gatt", 
    "gatt blocklist", 
    "gatt client", 
    "gatt procedure", 
    "gatt procedures", 
    "gatt profile hierarchy", 
    "gatt server", 
    "gb18030", 
    "gb18030 decoder", 
    "gb18030 encoder", 
    "gb18030 first", 
    "gb18030 second", 
    "gb18030 third", 
    "gbk", 
    "gbk decoder", 
    "gbk encoder", 
    "gbk flag", 
    "gender-identity", 
    "general category", 
    "general discovery procedure", 
    "general_enclosed", 
    "generate a counter", 
    "generate a counter representation", 
    "generate a fragment", 
    "generate a key", 
    "generate a network error report", 
    "generate a new blob url", 
    "generate all implied end tags thoroughly", 
    "generate baselines", 
    "generate implied end tags", 
    "generate test report", 
    "generated", 
    "generatekey", 
    "generating a new blob url", 
    "generator", 
    "generator-unable-to-provide-required-alt", 
    "generic attribute profile", 
    "generic javascript object formatting", 
    "generic raw text element parsing algorithm", 
    "generic rcdata element parsing algorithm", 
    "generic sensor permission revocation algorithm", 
    "geo", 
    "geometry properties", 
    "georgian", 
    "get", 
    "get a copy of the buffer source", 
    "get a copy of the bytes held by the buffer source", 
    "get a document layout definition", 
    "get a domstringmap's name-value pairs", 
    "get a layout child", 
    "get a layout class instance", 
    "get a layout definition", 
    "get a promise to wait for all", 
    "get a reference to the buffer source", 
    "get a reference to the bytes held by the buffer source", 
    "get a style map", 
    "get action url", 
    "get an attribute", 
    "get an attribute by name", 
    "get an attribute by namespace and local name", 
    "get an attribute value", 
    "get an element's noopener", 
    "get an element's target", 
    "get an encoding", 
    "get an output encoding", 
    "get frame type", 
    "get mock sensor", 
    "get newest worker", 
    "get registration", 
    "get the \"all\"-indexed element", 
    "get the \"all\"-indexed or named element(s)", 
    "get the \"all\"-named element(s)", 
    "get the bluetoothdevice representing", 
    "get the current value of the event handler", 
    "get the object", 
    "get the parent", 
    "get the underlying value", 
    "get url", 
    "get value from latest reading", 
    "getBattery()", 
    "getElementById()", 
    "getElementsByClassName()", 
    "getactivescriptormodule", 
    "getfunctionrealm", 
    "getgattchildren", 
    "getprioritizedhashfunction", 
    "getprioritizedhashfunction(a, b)", 
    "getrandomvalues", 
    "getter", 
    "getters", 
    "getting a promise to wait for all", 
    "getting an encoding", 
    "getting the keys", 
    "getting the value of an entry", 
    "ghostwhite", 
    "given-name", 
    "global animation list", 
    "global attributes", 
    "global date and time", 
    "global identifier", 
    "global monotonic clock", 
    "global names", 
    "global object", 
    "globalcompositeoperation", 
    "globalcrypto", 
    "glyph", 
    "glyph-midline", 
    "glyph-orientation-horizontal", 
    "glyph-orientation-vertical", 
    "go", 
    "gold", 
    "goldenrod", 
    "gradient box", 
    "gradient element", 
    "gradient line", 
    "gradient ray", 
    "gradient-average-color", 
    "gradienttransform", 
    "gradientunits", 
    "grapheme cluster", 
    "graphics element", 
    "graphics referencing element", 
    "gray", 
    "gray()", 
    "graytext", 
    "greater than", 
    "green", 
    "greenyellow", 
    "grey", 
    "grid", 
    "grid ancestor", 
    "grid area", 
    "grid cell", 
    "grid column", 
    "grid column line", 
    "grid container", 
    "grid element.", 
    "grid formatting context", 
    "grid item", 
    "grid item placement algorithm", 
    "grid layout", 
    "grid line", 
    "grid order", 
    "grid placement", 
    "grid position", 
    "grid row", 
    "grid row line", 
    "grid sizing algorithm", 
    "grid span", 
    "grid track", 
    "grid-area", 
    "grid-auto-columns", 
    "grid-auto-flow", 
    "grid-auto-rows", 
    "grid-column", 
    "grid-column-end", 
    "grid-column-gap", 
    "grid-column-start", 
    "grid-gap", 
    "grid-level", 
    "grid-modified document order", 
    "grid-placement property", 
    "grid-row", 
    "grid-row-end", 
    "grid-row-gap", 
    "grid-row-start", 
    "grid-template", 
    "grid-template-areas", 
    "grid-template-columns", 
    "grid-template-rows", 
    "groove", 
    "group", 
    "group alignment", 
    "group rule body", 
    "group stack", 
    "group-align", 
    "group-aligned", 
    "group_rule_body", 
    "growth limit", 
    "guidelines for exposing cues in various formats as text track cues", 
    "gutter", 
    "h1", 
    "h2", 
    "h3", 
    "h4", 
    "h5", 
    "h6", 
    "handle", 
    "handle content codings", 
    "handle errors", 
    "handle fetch", 
    "handle fetch task source", 
    "handle functional event", 
    "handle functional event task source", 
    "handle response end-of-body", 
    "handle service worker client unload", 
    "handle user agent shutdown", 
    "handled", 
    "handler", 
    "hang", 
    "hanging-punctuation", 
    "hard", 
    "has a border", 
    "has a reversed range", 
    "has a style sheet that is blocking scripts", 
    "has active observations", 
    "has an attribute", 
    "has been shipped", 
    "has focus steps", 
    "has no style sheet that is blocking scripts", 
    "has range limitations", 
    "has skipped observations", 
    "hash", 
    "hash-algo", 
    "hash-algorithm", 
    "hash-expression", 
    "hash-source", 
    "hash-with-options", 
    "hashalgorithmidentifier", 
    "hasownproperty", 
    "have a particular element in button scope", 
    "have a particular element in list item scope", 
    "have a particular element in scope", 
    "have a particular element in select scope", 
    "have a particular element in table scope", 
    "have a periodic domain", 
    "have an element target node in a specific scope", 
    "head", 
    "head element pointer", 
    "header", 
    "header list", 
    "header policy", 
    "header-name cache entry match", 
    "heading content", 
    "headings and sections", 
    "height", 
    "hex color", 
    "hex digit", 
    "hexadecimal character reference start state", 
    "hexadecimal character reference state", 
    "hgroup", 
    "hidden", 
    "hidden annotation", 
    "hidden plugins", 
    "hidden ruby annotation", 
    "hidden state", 
    "hidden state (type=hidden)", 
    "hierarchically correct main element", 
    "hierarchy_request_err", 
    "hierarchyrequesterror", 
    "high boundary", 
    "high water mark", 
    "high-level", 
    "highlight", 
    "highlight overlay", 
    "highlight pseudo-element", 
    "highlighttext", 
    "historical-ligatures", 
    "history traversal task source", 
    "history-navigation flag", 
    "hit-testing", 
    "hkdfparams", 
    "hkern", 
    "hmacimportparams", 
    "hmackeyalgorithm", 
    "hmackeygenparams", 
    "hold time", 
    "home", 
    "home document", 
    "home sequential focus navigation order", 
    "honeydew", 
    "honor user preferences for automatic text track selection", 
    "honorific-prefix", 
    "honorific-suffix", 
    "horizontal", 
    "horizontal axis", 
    "horizontal block flow", 
    "horizontal dimension", 
    "horizontal element", 
    "horizontal offset", 
    "horizontal script", 
    "horizontal writing mode", 
    "horizontal-only", 
    "host", 
    "host element", 
    "host equals", 
    "host interfaces", 
    "host language", 
    "host parser", 
    "host parsing", 
    "host serializer", 
    "host state", 
    "host-char", 
    "host-including inclusive ancestor", 
    "host-part", 
    "host-part match", 
    "host-source", 
    "hostensurecancompilestrings", 
    "hostensurecancompilestrings(callerrealm, calleerealm)", 
    "hostgetimportmetaproperties", 
    "hostgetimportmetaproperties(modulerecord)", 
    "hostimportmoduledynamically", 
    "hostimportmoduledynamically(referencingscriptormodule, specifier, promisecapability)", 
    "hostname state", 
    "hostpromiserejectiontracker", 
    "hostpromiserejectiontracker(promise, operation)", 
    "hostresolveimportedmodule", 
    "hostresolveimportedmodule(referencingscriptormodule, specifier)", 
    "hotpink", 
    "hr", 
    "href", 
    "hreflang", 
    "hsl()", 
    "hsla()", 
    "hspace", 
    "hsts-safe origin", 
    "html", 
    "html document", 
    "html documents", 
    "html elements", 
    "html fragment parsing algorithm", 
    "html fragment serialization algorithm", 
    "html integration point", 
    "html mime type", 
    "html namespace", 
    "html parser", 
    "htmlcollection", 
    "htmldocument", 
    "http fetch", 
    "http header layer division", 
    "http newline byte", 
    "http quoted-string token code point", 
    "http tab or space", 
    "http tab or space byte", 
    "http token code point", 
    "http whitespace", 
    "http whitespace byte", 
    "http(s) scheme", 
    "http-default-style", 
    "http-network fetch", 
    "http-network-or-cache fetch", 
    "http-redirect fetch", 
    "http:", 
    "http://microformats.org/profile/hcalendar#vevent", 
    "http://microformats.org/profile/hcard", 
    "http://n.whatwg.org/work", 
    "https state", 
    "https state value", 
    "https:", 
    "human palatability", 
    "hwb()", 
    "hyperlink", 
    "hyperlink annotations", 
    "hyperlink auditing", 
    "hyphenate", 
    "hyphenate-character", 
    "hyphenate-limit-chars", 
    "hyphenate-limit-last", 
    "hyphenate-limit-lines", 
    "hyphenate-limit-zone", 
    "hyphenation", 
    "hyphenation opportunity", 
    "hyphens", 
    "hypot()", 
    "hypothetical cross size", 
    "hypothetical fr size", 
    "hypothetical main size", 
    "hysteresis", 
    "i", 
    "ibm866", 
    "icon link type", 
    "id", 
    "id selector", 
    "ident", 
    "identifier", 
    "identifier of the ecdaa-issuer public key", 
    "identifiers", 
    "identity resolving key", 
    "identity transform function", 
    "identity transform stream", 
    "ideographs", 
    "idl attribute name to animation property name", 
    "idl attribute to css property", 
    "idl fragment", 
    "idl fragments", 
    "idl-exposed autofill value", 
    "idle phase", 
    "idle play state", 
    "if aborted", 
    "iframe", 
    "iframe fullscreen flag", 
    "iframe load event steps", 
    "iframe load in progress", 
    "iframe sandboxing flag set", 
    "ignore", 
    "ignore higher-layer caching", 
    "ignore-destructive-writes counter", 
    "ignore-opens-during-unload counter", 
    "ignored", 
    "image", 
    "image button state (type=image)", 
    "image candidate string", 
    "image data", 
    "image decoding hint", 
    "image format-based selection", 
    "image map", 
    "image mime type", 
    "image request", 
    "image resolution", 
    "image source", 
    "image type pattern matching algorithm", 
    "image()", 
    "image-orientation", 
    "image-rendering", 
    "image-rendering rectangle", 
    "image-resolution", 
    "image-set()", 
    "image/gif", 
    "image/jpeg", 
    "image/png", 
    "image/svg+xml", 
    "imagebitmaprenderingcontext creation algorithm", 
    "imageresource", 
    "ime", 
    "img", 
    "img-src", 
    "immediate user selection", 
    "immediately", 
    "implement the sandboxing", 
    "implements", 
    "implements statement", 
    "implicit grid", 
    "implicit grid column", 
    "implicit grid lines", 
    "implicit grid properties", 
    "implicit grid row", 
    "implicit grid track", 
    "implicit named area", 
    "implicit named line", 
    "implicit signals", 
    "implicit template", 
    "implied document", 
    "implied event loop", 
    "import conditions", 
    "import scripts into worker global scope", 
    "import()", 
    "import.meta", 
    "importNode()", 
    "important", 
    "importkey", 
    "impp", 
    "in", 
    "in a document", 
    "in a document tree", 
    "in a formal activation state", 
    "in auto mode", 
    "in collapsed-borders mode", 
    "in effect", 
    "in error reporting mode", 
    "in fixed mode", 
    "in parallel", 
    "in play", 
    "in separated-borders mode", 
    "in the background", 
    "in the context of a shadow tree", 
    "in the context of the shadow tree", 
    "in transfers", 
    "in-flow", 
    "inactive timeline", 
    "inactiveborder", 
    "inactivecaption", 
    "inactivecaptiontext", 
    "inappropriate for a control", 
    "include credentials", 
    "include_subdomains", 
    "included service", 
    "includes a nullable type", 
    "includes credentials", 
    "includes statement", 
    "inclusion criteria", 
    "inclusive ancestor", 
    "incorrectly-closed-comment", 
    "incorrectly-opened-comment", 
    "increment the marquee current loop index", 
    "incumbent", 
    "incumbent global object", 
    "incumbent realm", 
    "incumbent settings object", 
    "indefinite", 
    "indefinite size", 
    "independent formatting context", 
    "index", 
    "index big5", 
    "index big5 pointer", 
    "index code point", 
    "index euc-kr", 
    "index gb18030", 
    "index gb18030 ranges", 
    "index gb18030 ranges code point", 
    "index gb18030 ranges pointer", 
    "index handle", 
    "index iso-2022-jp katakana", 
    "index jis0208", 
    "index jis0212", 
    "index pointer", 
    "index shift_jis pointer", 
    "index single-byte", 
    "index_size_err", 
    "indexed properties", 
    "indexed property getter", 
    "indexed property getters", 
    "indexed property setter", 
    "indexed property setters", 
    "indexsizeerror", 
    "indianred", 
    "indigo", 
    "individual", 
    "inert", 
    "infinitely growable", 
    "info", 
    "infobackground", 
    "infotext", 
    "inherit", 
    "inherit its getter", 
    "inherit,", 
    "inherit-by-default", 
    "inheritance", 
    "inherited dictionaries", 
    "inherited interfaces", 
    "inherited policies", 
    "inherited policy", 
    "inherited policy for a feature", 
    "inherited property", 
    "inherited value", 
    "inhibit", 
    "initEvent()", 
    "initial", 
    "initial containing block", 
    "initial float reference", 
    "initial free space", 
    "initial letter", 
    "initial letter box", 
    "initial objects", 
    "initial point", 
    "initial representation for the counter value", 
    "initial scroll position", 
    "initial value", 
    "initial viewport", 
    "initial-height", 
    "initial-letters", 
    "initial-letters-align", 
    "initial-letters-wrap", 
    "initial-width", 
    "initialize a document's csp list", 
    "initialize a document's feature policy", 
    "initialize a document's feature policy from a response", 
    "initialize a global object's csp list", 
    "initialize a sensor object", 
    "initialize the document object", 
    "initializehostdefinedrealm", 
    "initiate the drag-and-drop operation", 
    "initiator", 
    "inject a key into a value using a key path", 
    "ink overflow", 
    "ink overflow rectangle", 
    "ink overflow region", 
    "inline", 
    "inline axis", 
    "inline base direction", 
    "inline box", 
    "inline dimension", 
    "inline documentation for external scripts", 
    "inline end", 
    "inline float", 
    "inline formatting context", 
    "inline initial letter", 
    "inline initial letter box", 
    "inline size", 
    "inline start", 
    "inline-axis", 
    "inline-base direction", 
    "inline-block", 
    "inline-end", 
    "inline-level", 
    "inline-level box", 
    "inline-level boxes", 
    "inline-level content", 
    "inline-level elements", 
    "inline-size", 
    "inline-sizing", 
    "inline-start", 
    "inline-table", 
    "inlinification", 
    "inlinify", 
    "inner box-shadow", 
    "inner display type", 
    "inner edge", 
    "inner event creation steps", 
    "inner invoke", 
    "inner size", 
    "inner text collection steps", 
    "inner type", 
    "innerHTML", 
    "input", 
    "input activation behavior", 
    "input method editor", 
    "input progress value", 
    "input stream", 
    "inputMode", 
    "inputmode", 
    "ins", 
    "insecure requests policy", 
    "insert", 
    "insert a character", 
    "insert a comment", 
    "insert a css rule", 
    "insert a foreign element", 
    "insert adjacent", 
    "insert an html element", 
    "inserted into a document", 
    "insertion mode", 
    "insertion point", 
    "insertion steps", 
    "inset", 
    "inset properties", 
    "inset()", 
    "inset-after", 
    "inset-before", 
    "inset-block", 
    "inset-block-end", 
    "inset-block-start", 
    "inset-end", 
    "inset-inline", 
    "inset-inline-end", 
    "inset-inline-start", 
    "inset-start", 
    "inside", 
    "install", 
    "installability signal", 
    "installation", 
    "installation failed", 
    "installation process", 
    "installation succeeded", 
    "installation was canceled", 
    "installed", 
    "installed font fallback", 
    "installing", 
    "instance root", 
    "instant scroll", 
    "instantiate", 
    "integer", 
    "integer types", 
    "integrity metadata", 
    "integrity-metadata", 
    "intended direction", 
    "intended direction and end position", 
    "intended end position", 
    "inter-annotation white space", 
    "inter-base white space", 
    "inter-element whitespace", 
    "inter-level white space", 
    "inter-segment white space", 
    "interactive", 
    "interactive content", 
    "interactively validate the constraints", 
    "interface", 
    "interface descriptor", 
    "interface member", 
    "interface members", 
    "interface mixin", 
    "interface mixin member", 
    "interface object", 
    "interface prototype object", 
    "interface types", 
    "internal algorithm for scanning and assigning header cells", 
    "internal createelementns steps", 
    "internal key modifier state", 
    "internal module script graph fetching procedure", 
    "internal pause steps", 
    "internal play steps", 
    "internal queues", 
    "internal raw uncompiled handler", 
    "internal response", 
    "internal ruby box", 
    "internal ruby boxes", 
    "internal ruby display types", 
    "internal ruby element", 
    "internal table box", 
    "internal table element", 
    "internally create a new object implementing the interface", 
    "interpolate", 
    "interpolation", 
    "interpolation procedure", 
    "interpreter", 
    "interrupt transfers", 
    "intersect the viewport", 
    "interval end", 
    "interval start", 
    "intervention reports", 
    "intra-level white space", 
    "intra-ruby white space", 
    "intrinsic aspect ratio", 
    "intrinsic dimensions", 
    "intrinsic dimensions of a cross-fade()", 
    "intrinsic height", 
    "intrinsic minimum", 
    "intrinsic percentage width of a column", 
    "intrinsic percentage width of a column based on cells of span up to 1", 
    "intrinsic percentage width of a column based on cells of span up to n (n > 1)", 
    "intrinsic preferred", 
    "intrinsic resolution", 
    "intrinsic size", 
    "intrinsic size constraint", 
    "intrinsic size contribution", 
    "intrinsic sizes", 
    "intrinsic sizes valid flag", 
    "intrinsic sizing", 
    "intrinsic sizing function", 
    "intrinsic width", 
    "intrinsic-sizes-invalid", 
    "intrinsic-sizes-valid", 
    "inuse_attribute_err", 
    "inuseattributeerror", 
    "invalid at computed-value time", 
    "invalid color", 
    "invalid image", 
    "invalid reference", 
    "invalid selector", 
    "invalid value", 
    "invalid value default", 
    "invalid-character-sequence-after-doctype-name", 
    "invalid-first-character-of-tag-name", 
    "invalid_access_err", 
    "invalid_character_err", 
    "invalid_modification_err", 
    "invalid_node_type_err", 
    "invalid_state_err", 
    "invalidaccesserror", 
    "invalidate layout functions", 
    "invalidcharactererror", 
    "invalidmodificationerror", 
    "invalidnodetypeerror", 
    "invalidstateerror", 
    "invariants of the essential internal methods", 
    "invert", 
    "invoke", 
    "invoke a intrinsic sizes callback", 
    "invoke a layout callback", 
    "invoke a named property setter", 
    "invoke a paint callback", 
    "invoke an indexed property setter", 
    "invoke an intrinsic sizes callback", 
    "invoke custom element reactions", 
    "invoke the indexed property setter", 
    "invoke the named property setter", 
    "invoking", 
    "ipv4 address", 
    "ipv4 number parser", 
    "ipv4 parser", 
    "ipv4 serializer", 
    "ipv6 address", 
    "ipv6 parser", 
    "ipv6 piece", 
    "ipv6 serializer", 
    "irk", 
    "is", 
    "is a platform object", 
    "is a registrable domain suffix of or is equal to", 
    "is an array index", 
    "is base allowed for document?", 
    "is closing", 
    "is empty", 
    "is environment settings object a secure context?", 
    "is feature enabled by policy for origin", 
    "is local", 
    "is not a registrable domain suffix of and is not equal to", 
    "is not a valid filter", 
    "is not an array index", 
    "is not origin-clean", 
    "is not special", 
    "is origin potentially trustworthy", 
    "is special", 
    "is value", 
    "isaccessordescriptor", 
    "iscallable", 
    "isconstructor", 
    "isdatadescriptor", 
    "isdetachedbuffer", 
    "isindex", 
    "ismap", 
    "iso-2022-jp", 
    "iso-2022-jp decoder", 
    "iso-2022-jp decoder ascii", 
    "iso-2022-jp decoder escape", 
    "iso-2022-jp decoder escape start", 
    "iso-2022-jp decoder katakana", 
    "iso-2022-jp decoder lead byte", 
    "iso-2022-jp decoder output state", 
    "iso-2022-jp decoder roman", 
    "iso-2022-jp decoder state", 
    "iso-2022-jp decoder trail byte", 
    "iso-2022-jp encoder", 
    "iso-2022-jp encoder ascii", 
    "iso-2022-jp encoder jis0208", 
    "iso-2022-jp encoder roman", 
    "iso-2022-jp encoder state", 
    "iso-2022-jp lead", 
    "iso-2022-jp output flag", 
    "iso-8859-10", 
    "iso-8859-13", 
    "iso-8859-14", 
    "iso-8859-15", 
    "iso-8859-16", 
    "iso-8859-2", 
    "iso-8859-3", 
    "iso-8859-4", 
    "iso-8859-5", 
    "iso-8859-6", 
    "iso-8859-7", 
    "iso-8859-8", 
    "iso-8859-8-i", 
    "isochronous transfers", 
    "isolated sequence", 
    "isolation", 
    "isomorphic decode", 
    "isomorphic encode", 
    "isplatformobjectsameorigin ( o )", 
    "issharedarraybuffer", 
    "isstructurallyvalidlanguagetag", 
    "issue a developer warning", 
    "it is appropriate to resolve percentage heights on direct children of a table-cell", 
    "italic", 
    "item", 
    "item types", 
    "itemid", 
    "itemref", 
    "itemscope", 
    "itemtype", 
    "iterable", 
    "iterable declaration", 
    "iterate", 
    "iterate a cursor", 
    "iteration composite operation", 
    "iteration composite operation accumulate", 
    "iteration composite operation replace", 
    "iteration count", 
    "iteration duration", 
    "iteration interval", 
    "iteration progress", 
    "iteration start", 
    "iterationcompositeoperation", 
    "iterations", 
    "iterator prototype object", 
    "iv", 
    "ivory", 
    "javascript execution context", 
    "javascript execution context stack", 
    "javascript mime type", 
    "javascript mime type essence match", 
    "javascript module script", 
    "javascript realm", 
    "javascript string", 
    "javascript string length", 
    "jis04", 
    "jis78", 
    "jis83", 
    "jis90", 
    "job", 
    "job queue", 
    "joint session history", 
    "json mime type", 
    "json module script", 
    "json object", 
    "json response", 
    "json type", 
    "json-field-value", 
    "jsonwebkey", 
    "justification opportunity", 
    "justify-content", 
    "justify-items", 
    "justify-self", 
    "kbd", 
    "kerning", 
    "key", 
    "key export steps", 
    "key generator", 
    "key import steps", 
    "key mapping", 
    "key modifier name", 
    "key path", 
    "key range", 
    "key value", 
    "keyalgorithm", 
    "keydown", 
    "keyframe", 
    "keyframe effect", 
    "keyframe offset", 
    "keyframe-specific composite operation", 
    "keygen", 
    "keypress", 
    "keysplines", 
    "keytimes", 
    "keyup", 
    "keyword", 
    "keyword-source", 
    "keywords", 
    "khaki", 
    "kin", 
    "kind", 
    "kind strings", 
    "known tokens", 
    "koi8-r", 
    "koi8-u", 
    "lab()", 
    "label", 
    "labelable elements", 
    "labeled control", 
    "landing page", 
    "landscape", 
    "landscape orientation", 
    "landscape-primary", 
    "landscape-secondary", 
    "lang", 
    "language", 
    "language range", 
    "last baseline set", 
    "last baselines", 
    "last cross-axis baseline set", 
    "last css style sheet set name", 
    "last event id string", 
    "last main-axis baseline set", 
    "last selected source", 
    "last usable css region", 
    "last usable region", 
    "last-baseline alignment", 
    "last-baseline content-alignment", 
    "last-baseline self-alignment", 
    "last-modified", 
    "latest entry", 
    "latest reading", 
    "lavender", 
    "lavenderblush", 
    "lawngreen", 
    "layout api children", 
    "layout api container", 
    "layout api context", 
    "layout api formatting context", 
    "layout api work task", 
    "layout box", 
    "layout class instances", 
    "layout containment", 
    "layout definition", 
    "layout definitions", 
    "layout valid flag", 
    "layout-internal", 
    "layout-invalid", 
    "layout-valid", 
    "lch()", 
    "le bonding procedure", 
    "leader()", 
    "leading-spaces", 
    "leading-trim", 
    "leading-trim-over", 
    "leading-trim-under", 
    "left", 
    "left page", 
    "leftmargin", 
    "leftover space", 
    "legacy callback interface object", 
    "legacy callers", 
    "legacy name alias", 
    "legacy platform object", 
    "legacy platform objects", 
    "legacy shorthand", 
    "legacy-canceled-activation behavior", 
    "legacy-pre-activation behavior", 
    "legacywindowalias identifier", 
    "legend", 
    "lemonchiffon", 
    "length", 
    "less than", 
    "letter", 
    "letter-spacing", 
    "level", 
    "levels", 
    "li", 
    "license", 
    "lifecycle callbacks", 
    "light source", 
    "light tree", 
    "lightblue", 
    "lightcoral", 
    "lightcyan", 
    "lighter", 
    "lightgoldenrodyellow", 
    "lightgray", 
    "lightgreen", 
    "lightgrey", 
    "lighting-color", 
    "lightpink", 
    "lightsalmon", 
    "lightseagreen", 
    "lightskyblue", 
    "lightslategray", 
    "lightslategrey", 
    "lightsteelblue", 
    "lightyellow", 
    "lime", 
    "limegreen", 
    "limit maximum sampling frequency", 
    "limit number of delivered readings", 
    "limited max-content contribution", 
    "limited min-content contribution", 
    "limited to numbers greater than zero", 
    "limited to only known values", 
    "limited to only non-negative numbers", 
    "limited to only non-negative numbers greater than zero", 
    "limited to only non-negative numbers greater than zero with fallback", 
    "limited-quirks mode", 
    "line", 
    "line box", 
    "line break", 
    "line breaking", 
    "line breaking process", 
    "line grid", 
    "line join shape", 
    "line name set", 
    "line orientation", 
    "line segments", 
    "line-break", 
    "line-clamp", 
    "line-grid", 
    "line-height", 
    "line-height-step", 
    "line-left", 
    "line-over", 
    "line-padding", 
    "line-relative", 
    "line-relative direction", 
    "line-right", 
    "line-sizing", 
    "line-snap", 
    "line-under", 
    "linear easing function", 
    "linear timing function", 
    "linear-gradient()", 
    "linear-light srgb", 
    "lineargradient", 
    "linen", 
    "lining-nums", 
    "link", 
    "link element", 
    "link type", 
    "link type \"alternate\"", 
    "link type \"author\"", 
    "link type \"bookmark\"", 
    "link type \"canonical\"", 
    "link type \"dns-prefetch\"", 
    "link type \"external\"", 
    "link type \"help\"", 
    "link type \"icon\"", 
    "link type \"license\"", 
    "link type \"modulepreload\"", 
    "link type \"next\"", 
    "link type \"nofollow\"", 
    "link type \"noopener\"", 
    "link type \"noreferrer\"", 
    "link type \"opener\"", 
    "link type \"pingback\"", 
    "link type \"preconnect\"", 
    "link type \"prefetch\"", 
    "link type \"preload\"", 
    "link type \"prerender\"", 
    "link type \"prev\"", 
    "link type \"search\"", 
    "link type \"stylesheet\"", 
    "link type \"tag\"", 
    "linked resource fetch setup steps", 
    "linkstyle", 
    "list", 
    "list interfaces", 
    "list item", 
    "list of active formatting elements", 
    "list of active timers", 
    "list of available images", 
    "list of complex selectors", 
    "list of compound selectors", 
    "list of dragged nodes", 
    "list of elements with class names classnames", 
    "list of elements with namespace namespace and local name localname", 
    "list of elements with qualified name qualifiedname", 
    "list of newly introduced cues", 
    "list of options", 
    "list of pending fullscreen events", 
    "list of pending master entries", 
    "list of pending play promises", 
    "list of pending text tracks", 
    "list of scripts that will execute in order as soon as possible", 
    "list of scripts that will execute when the document has finished parsing", 
    "list of selectors", 
    "list of simple selectors", 
    "list of sync registrations", 
    "list of text tracks", 
    "list of the descendant browsing contexts", 
    "list owner", 
    "list properties", 
    "list-append", 
    "list-item", 
    "list-style", 
    "list-style-image", 
    "list-style-position", 
    "list-style-type", 
    "list-valued properties", 
    "listed elements", 
    "listener", 
    "listing", 
    "live", 
    "live profile", 
    "live ranges", 
    "load", 
    "loaded", 
    "loadeddata", 
    "loadedmetadata", 
    "loading", 
    "loadstart", 
    "local boundary default action", 
    "local cache", 
    "local coordinate system", 
    "local date and time", 
    "local date and time state (type=datetime-local)", 
    "local name", 
    "local name data type", 
    "local scheme", 
    "local stacking contexts", 
    "local time", 
    "local-urls-only flag", 
    "locality", 
    "locate a namespace", 
    "locate a namespace prefix", 
    "locating a namespace prefix", 
    "location", 
    "location url", 
    "location-object navigate", 
    "location-object-setter navigate", 
    "lock", 
    "lock the orientation", 
    "locked for focus", 
    "locked for reset", 
    "locked to a reader", 
    "locked to a writer", 
    "logical height", 
    "logical property group", 
    "logical width", 
    "logo", 
    "long", 
    "long attribute values", 
    "long long", 
    "longdesc", 
    "longhand", 
    "longhand property", 
    "look up a custom element definition", 
    "loosely sorted by offset", 
    "low boundary", 
    "low-level", 
    "lower bound", 
    "lower open flag", 
    "lower-alpha", 
    "lower-greek", 
    "lower-latin", 
    "lower-roman", 
    "lowercase letter", 
    "lowercased", 
    "lowsrc", 
    "ls", 
    "ltr", 
    "m11 element", 
    "m12 element", 
    "m21 element", 
    "m22 element", 
    "m41 element", 
    "m42 element", 
    "machine-readable equivalent of the element's contents", 
    "macintosh", 
    "magenta", 
    "mail as body", 
    "mail with headers", 
    "mailto:", 
    "main", 
    "main axis", 
    "main dimension", 
    "main size", 
    "main size property", 
    "main-axis", 
    "main-axis baseline set", 
    "main-desc", 
    "main-end", 
    "main-size", 
    "main-start", 
    "make disappear", 
    "mandatory conditions", 
    "manifest-src", 
    "manual installation", 
    "manually", 
    "manufacturer specific data", 
    "map", 
    "map entries", 
    "map of animation frame callbacks", 
    "map size getter", 
    "maplike", 
    "maplike declaration", 
    "mapping logic", 
    "maps to the dimension property", 
    "maps to the dimension property (ignoring zero)", 
    "maps to the pixel length property", 
    "margin", 
    "margin area", 
    "margin at-rule", 
    "margin box", 
    "margin context", 
    "margin edge", 
    "margin properties", 
    "margin-block", 
    "margin-block-end", 
    "margin-block-start", 
    "margin-bottom", 
    "margin-box", 
    "margin-break", 
    "margin-inline", 
    "margin-inline-end", 
    "margin-inline-start", 
    "margin-left", 
    "margin-right", 
    "margin-top", 
    "margin-trim", 
    "marginheight", 
    "marginwidth", 
    "mark", 
    "mark paint timing", 
    "marker", 
    "marker box", 
    "marker image", 
    "marker properties", 
    "marker string", 
    "marker-end", 
    "marker-mid", 
    "marker-side", 
    "marker-start", 
    "markers", 
    "markup declaration open state", 
    "maroon", 
    "marquee", 
    "marquee current loop index", 
    "marquee loop count", 
    "marquee scroll distance", 
    "marquee scroll interval", 
    "mask", 
    "mask border image", 
    "mask border image area", 
    "mask image", 
    "mask layer image", 
    "mask painting area", 
    "mask positioning area", 
    "mask-border", 
    "mask-border-mode", 
    "mask-border-outset", 
    "mask-border-repeat", 
    "mask-border-slice", 
    "mask-border-source", 
    "mask-border-width", 
    "mask-clip", 
    "mask-composite", 
    "mask-image", 
    "mask-mode", 
    "mask-origin", 
    "mask-position", 
    "mask-repeat", 
    "mask-size", 
    "mask-type", 
    "master entries", 
    "match", 
    "match a complex selector against an element", 
    "match a css production", 
    "match a device filter", 
    "match a selector against a pseudo-element", 
    "match a selector against a tree", 
    "match a selector against an element", 
    "match an mp3 header", 
    "match service worker registration", 
    "matches", 
    "matches a fallback namespace", 
    "matches a filter", 
    "matches the environment", 
    "matches the interface filter", 
    "matches the signature for mp3 without id3", 
    "matches the signature for mp4", 
    "matches the signature for webm", 
    "matching a padded sequence", 
    "matching transition delay", 
    "matching transition duration", 
    "matching transition timing function", 
    "matching transition-property value", 
    "math function", 
    "math functions", 
    "mathml annotation-xml", 
    "mathml math", 
    "mathml merror", 
    "mathml mi", 
    "mathml mn", 
    "mathml mo", 
    "mathml ms", 
    "mathml mtext", 
    "mathml namespace", 
    "mathml text integration point", 
    "matrix", 
    "matrix object", 
    "matrix3d()", 
    "matured", 
    "max", 
    "max cross size", 
    "max cross size property", 
    "max height", 
    "max inner height", 
    "max inner width", 
    "max main size", 
    "max main size property", 
    "max size", 
    "max size property", 
    "max track sizing function", 
    "max width", 
    "max()", 
    "max-block-size", 
    "max-content", 
    "max-content block size", 
    "max-content block-size contribution", 
    "max-content constraint", 
    "max-content contribution", 
    "max-content inline size", 
    "max-content inline-size contribution", 
    "max-content size", 
    "max-content sizing-guess", 
    "max-content width", 
    "max-content width of a column", 
    "max-content width of a column based on cells of span up to 1", 
    "max-content width of a column based on cells of span up to n (n > 1)", 
    "max-content width of a table", 
    "max-height", 
    "max-inline-size", 
    "max-lines", 
    "max-width", 
    "max_age", 
    "maximum", 
    "maximum allowed code point", 
    "maximum allowed value length", 
    "maximum height", 
    "maximum size", 
    "maximum value", 
    "maximum width", 
    "me", 
    "media", 
    "media condition", 
    "media data", 
    "media data processing steps list", 
    "media element attributes", 
    "media element event task source", 
    "media element load algorithm", 
    "media elements", 
    "media feature", 
    "media fragment syntax", 
    "media provider object", 
    "media query", 
    "media query list", 
    "media query modifier", 
    "media resource", 
    "media timeline", 
    "media type", 
    "media type for a manifest", 
    "media-resource-specific text track", 
    "media-src", 
    "media-type", 
    "media-type-list", 
    "mediasource", 
    "mediastream", 
    "mediumaquamarine", 
    "mediumblue", 
    "mediumorchid", 
    "mediumpurple", 
    "mediumseagreen", 
    "mediumslateblue", 
    "mediumspringgreen", 
    "mediumturquoise", 
    "mediumvioletred", 
    "member", 
    "member types", 
    "members", 
    "menu", 
    "menuitem", 
    "menutext", 
    "message", 
    "message port post message steps", 
    "met", 
    "meta", 
    "meta element", 
    "metadata", 
    "metadata content", 
    "meter", 
    "method", 
    "method cache entry match", 
    "methods", 
    "mftn", 
    "microdata", 
    "microdata errors", 
    "microtask", 
    "microtask queue", 
    "microtask task source", 
    "midnightblue", 
    "midpoint-on-the-path", 
    "migrate an animator instance", 
    "mime type", 
    "mime type record", 
    "mime type sniffing algorithm", 
    "min", 
    "min cross size", 
    "min cross size property", 
    "min height", 
    "min inner height", 
    "min inner width", 
    "min main size", 
    "min main size property", 
    "min size", 
    "min size property", 
    "min track sizing function", 
    "min width", 
    "min()", 
    "min-block-size", 
    "min-content", 
    "min-content block size", 
    "min-content block-size contribution", 
    "min-content constraint", 
    "min-content contribution", 
    "min-content inline size", 
    "min-content inline-size contribution", 
    "min-content size", 
    "min-content sizing-guess", 
    "min-content width", 
    "min-content width of a column", 
    "min-content width of a column based on cells of span up to 1", 
    "min-content width of a column based on cells of span up to n (n > 1)", 
    "min-content width of a table", 
    "min-content-percentage sizing-guess", 
    "min-content-specified sizing-guess", 
    "min-height", 
    "min-inline-size", 
    "min-size contribution", 
    "min-width", 
    "minh", 
    "minimum", 
    "minimum allowed value length", 
    "minimum block text size", 
    "minimum contribution", 
    "minimum height", 
    "minimum readable text size", 
    "minimum size", 
    "minimum value", 
    "minimum width", 
    "mintcream", 
    "minw", 
    "missing value default", 
    "missing-attribute-value", 
    "missing-doctype-name", 
    "missing-doctype-public-identifier", 
    "missing-doctype-system-identifier", 
    "missing-end-tag-name", 
    "missing-glyph", 
    "missing-quote-before-doctype-public-identifier", 
    "missing-quote-before-doctype-system-identifier", 
    "missing-semicolon-after-character-reference", 
    "missing-whitespace-after-doctype-public-keyword", 
    "missing-whitespace-after-doctype-system-keyword", 
    "missing-whitespace-before-doctype-name", 
    "missing-whitespace-between-attributes", 
    "missing-whitespace-between-doctype-public-and-system-identifiers", 
    "mistyrose", 
    "mix-blend-mode", 
    "mixed content", 
    "mobile", 
    "moccasin", 
    "mock sensor", 
    "mock sensor already created", 
    "mock sensor reading", 
    "mock sensor reading values", 
    "mock sensor type", 
    "mode", 
    "modifier key", 
    "module", 
    "module map", 
    "module responses map", 
    "module script", 
    "module script credentials mode", 
    "moduluslength", 
    "monitored", 
    "monolithic", 
    "monospace", 
    "monotonic clock", 
    "monotonically increasing timeline", 
    "month", 
    "month state (type=month)", 
    "mousedown", 
    "mouseenter", 
    "mouseevent", 
    "mouseeventinit", 
    "mouseleave", 
    "mousemove", 
    "mouseout", 
    "mouseover", 
    "mouseup", 
    "move", 
    "multi-column container", 
    "multi-column layout", 
    "multi-factor capable", 
    "multi-line flex container", 
    "multicol", 
    "multicol container", 
    "multiline", 
    "multipart/form-data", 
    "multipart/form-data boundary string", 
    "multipart/form-data encoding algorithm", 
    "multipart/mixed", 
    "multipart/x-mixed-replace", 
    "multiply", 
    "muse", 
    "mutable", 
    "mutate action url", 
    "mutation observer microtask queued", 
    "mutation observers", 
    "mutationobserver", 
    "mute iframe load", 
    "muted", 
    "muted errors", 
    "n", 
    "naively convert from cmyk to rgba", 
    "naively convert from rgba to cmyk", 
    "naively converted to cmyk", 
    "naively converted to rgba", 
    "name", 
    "name attribute", 
    "name code point", 
    "name discovery procedure", 
    "name to cache map", 
    "name-start code point", 
    "named attribute", 
    "named character reference state", 
    "named character references", 
    "named color", 
    "named constructor", 
    "named definition", 
    "named definitions", 
    "named flow", 
    "named grid area", 
    "named line", 
    "named page", 
    "named properties", 
    "named properties object", 
    "named property deleter", 
    "named property deleters", 
    "named property getter", 
    "named property getters", 
    "named property setter", 
    "named property setters", 
    "named property visibility algorithm", 
    "named string", 
    "namedconstructor identifier", 
    "namedcurve", 
    "namedflows", 
    "names: the itemprop attribute", 
    "namespace", 
    "namespace member", 
    "namespace object", 
    "namespace prefix", 
    "namespace uris", 
    "namespace_err", 
    "namespaceerror", 
    "narrow", 
    "natural", 
    "natural end-point", 
    "nav", 
    "nav-down", 
    "nav-left", 
    "nav-right", 
    "nav-up", 
    "navajowhite", 
    "navigate", 
    "navigate algorithm", 
    "navigate-to", 
    "navigated", 
    "navigating to a fragment", 
    "navigation", 
    "navigation request", 
    "navigation scope", 
    "navigation-override", 
    "navigator compatibility mode", 
    "navigator.hardwareconcurrency", 
    "navigator.javaEnabled()", 
    "navigator.mimetypes", 
    "navigator.online", 
    "navigator.plugins", 
    "navy", 
    "nearest ancestor autofocus scoping root element", 
    "need new subpath", 
    "neighbor", 
    "nel", 
    "nel policies", 
    "nel policy", 
    "nest-containing", 
    "nest-prefixed", 
    "nested browsing context", 
    "nested region context", 
    "nested ruby", 
    "nested style rule", 
    "nested through", 
    "nested-comment", 
    "nested_statement", 
    "nesting selector", 
    "nesting style rule", 
    "network error", 
    "network error report", 
    "network error reports", 
    "network errors", 
    "network protocol", 
    "network request", 
    "network requests", 
    "network scheme", 
    "network_err", 
    "networkerror", 
    "networking task source", 
    "neutral value for composition", 
    "never-rendered element", 
    "new", 
    "new information about the user's intent", 
    "new-password", 
    "newer", 
    "newline", 
    "newlines", 
    "newobjectenvironment", 
    "next", 
    "next input character", 
    "next input code point", 
    "next input token", 
    "next sibling", 
    "next token", 
    "next-sibling combinator", 
    "nextid", 
    "nickname", 
    "no cors", 
    "no pending font loads", 
    "no scheme state", 
    "no such mock sensor", 
    "no-close-quote", 
    "no-common-ligatures", 
    "no-contextual", 
    "no-cors-safelisted request-header", 
    "no-cors-safelisted request-header name", 
    "no-discretionary-ligatures", 
    "no-historical-ligatures", 
    "no-open-quote", 
    "no-quirks mode", 
    "no-referrer", 
    "no-referrer-when-downgrade", 
    "no-sniff flag", 
    "no-translate", 
    "no-validate state", 
    "no_modification_allowed_err", 
    "nobr", 
    "node", 
    "node a is inserted", 
    "node a is removed", 
    "node document", 
    "node is inserted into a document", 
    "node is removed from a document", 
    "node tree", 
    "nodeiterator pre-removing steps", 
    "nodelist", 
    "nodes", 
    "noembed", 
    "noframes", 
    "nohref", 
    "nomodificationallowederror", 
    "nomodule", 
    "non-ascii code point", 
    "non-blocking", 
    "non-blocking events flag", 
    "non-ideographic letters", 
    "non-ideographic numerals", 
    "non-interactive", 
    "non-local boundary default action", 
    "non-negative-number", 
    "non-persistent bucket", 
    "non-printable code point", 
    "non-rendered element", 
    "non-replaced", 
    "non-resident credential", 
    "non-secure contexts", 
    "non-subresource request", 
    "non-void-html-element-start-tag-with-trailing-solidus", 
    "nonce-source", 
    "noncharacter", 
    "noncharacter-character-reference", 
    "noncharacter-in-input-stream", 
    "none", 
    "none!!font-kerning", 
    "none!!font-size-adjust", 
    "none!!font-variant", 
    "none!!font-variant-ligatures", 
    "normal", 
    "normal alignment", 
    "normal elements", 
    "normal flow", 
    "normal!!font-feature-settings", 
    "normal!!font-kerning", 
    "normal!!font-stretch", 
    "normal!!font-style", 
    "normal!!font-variant", 
    "normal!!font-variant-caps", 
    "normal!!font-variant-east-asian", 
    "normal!!font-variant-ligatures", 
    "normal!!font-variant-numeric", 
    "normal!!font-variant-position", 
    "normal!!font-weight", 
    "normalcompletion", 
    "normalize a feature name", 
    "normalize an algorithm", 
    "normalize newlines", 
    "normalize non-finite values", 
    "normalize the source densities", 
    "normalized timeranges object", 
    "normalized value of a usages list", 
    "normalized windows drive letter", 
    "noscript", 
    "noshade", 
    "not additive", 
    "not animatable", 
    "not handled", 
    "not loaded", 
    "not origin-clean", 
    "not overlapping", 
    "not_found_err", 
    "not_supported_err", 
    "notallowederror", 
    "note", 
    "notfound", 
    "notfounderror", 
    "nothing", 
    "notify about playing", 
    "notify about rejected promises", 
    "notify activated state", 
    "notify controller change", 
    "notify error", 
    "notify mutation observers", 
    "notify new reading", 
    "notreadableerror", 
    "notsupportederror", 
    "noupdate", 
    "novalidate", 
    "now visible algorithm", 
    "nowrap", 
    "nth()", 
    "null body status", 
    "null-character-reference", 
    "nullable type", 
    "number", 
    "number of columns", 
    "number of days in month month of year year", 
    "number of document-tree child browsing contexts", 
    "number of nullable member types", 
    "number of rows", 
    "numeric", 
    "numeric character reference end state", 
    "numeric character reference state", 
    "numeric data types", 
    "numeric type value", 
    "numeric types", 
    "object", 
    "object bounding box", 
    "object size negotiation", 
    "object store", 
    "object store handle", 
    "object types", 
    "object url", 
    "object-fit", 
    "object-position", 
    "object-src", 
    "objects", 
    "oblique", 
    "observable policy", 
    "observation procedure", 
    "observed attributes", 
    "observer", 
    "obsolete", 
    "obtain a physical form", 
    "obtain a resource", 
    "obtain a websocket connection", 
    "obtain their numeric values", 
    "obtain unicode", 
    "obtaining a manifest", 
    "obtaining the manifest", 
    "occupied", 
    "octet", 
    "octet string", 
    "octet string containing a bit string", 
    "off", 
    "official moment of creation", 
    "official playback position", 
    "offscreen 2d context creation algorithm", 
    "offset", 
    "offset distance", 
    "offset path", 
    "offset-after", 
    "offset-anchor", 
    "offset-before", 
    "offset-distance", 
    "offset-end", 
    "offset-path", 
    "offset-position", 
    "offset-rotate", 
    "offset-start", 
    "offsetk", 
    "offsets-adjusted min-width, width, and max-width", 
    "ok status", 
    "ol", 
    "oldlace", 
    "oldstyle-nums", 
    "olive", 
    "olivedrab", 
    "omitted", 
    "on", 
    "onaddtrack", 
    "onafterprint", 
    "onbeforeprint", 
    "onbeforeunload", 
    "onblur", 
    "onbounce", 
    "oncached", 
    "onchange", 
    "onchecking", 
    "onclose", 
    "onconnect", 
    "oncopy", 
    "oncuechange", 
    "oncut", 
    "ondownloading", 
    "one permitted sandboxed navigator", 
    "one-time-code", 
    "onenter", 
    "onerror", 
    "onexit", 
    "onfinish", 
    "onfocus", 
    "onhashchange", 
    "onlanguagechange", 
    "online", 
    "online safelist namespaces", 
    "online safelist section", 
    "online safelist wildcard flag", 
    "onload", 
    "only if border is not equivalent to zero", 
    "onmessage", 
    "onmessageerror", 
    "onnoupdate", 
    "onobsolete", 
    "onoffline", 
    "ononline", 
    "onopen", 
    "onpagehide", 
    "onpageshow", 
    "onpaste", 
    "onpopstate", 
    "onprogress", 
    "onrejectionhandled", 
    "onremovetrack", 
    "onresize", 
    "onscroll", 
    "onshow", 
    "onstart", 
    "onstorage", 
    "onunhandledrejection", 
    "onunload", 
    "onupdateready", 
    "opacity", 
    "opaque black", 
    "opaque filtered response", 
    "opaque host", 
    "opaque origin", 
    "opaque-host parser", 
    "opaque-host-and-port string", 
    "opaque-redirect filtered response", 
    "open a database", 
    "open subpath", 
    "open-quote", 
    "opener", 
    "opener browsing context", 
    "operating coordinate space", 
    "operation", 
    "operationerror", 
    "optgroup", 
    "optimal sampling frequency", 
    "optimal viewing region", 
    "optimally useful formatting", 
    "optimum point", 
    "option", 
    "option-expression", 
    "optional argument", 
    "optional-ascii-whitespace", 
    "optionality list", 
    "optionality values", 
    "optionally truncate a simple dialog string", 
    "optionally-blockable", 
    "optionally-blockable mixed content", 
    "or", 
    "orange", 
    "orangered", 
    "orchid", 
    "order", 
    "order-modified document order", 
    "ordered map", 
    "ordered set", 
    "ordered set of unique space-separated tokens", 
    "ordered set parser", 
    "ordered set serializer", 
    "ordinal", 
    "ordinal value", 
    "ordinary", 
    "ordinarydefineownproperty", 
    "ordinarydelete", 
    "ordinaryget", 
    "ordinarygetownproperty", 
    "ordinarygetprototypeof", 
    "ordinaryisextensible", 
    "ordinaryownpropertykeys", 
    "ordinarypreventextensions", 
    "ordinaryset", 
    "ordinarysetprototypeof", 
    "org", 
    "organization", 
    "organization-name", 
    "organization-title", 
    "organization-unit", 
    "orientationlocktype", 
    "orientationtype", 
    "origin", 
    "origin time", 
    "origin-clean", 
    "origin-clean flag", 
    "origin-only flag", 
    "original insertion mode", 
    "original source", 
    "originate", 
    "originating element", 
    "origins", 
    "orphans", 
    "orthogonal", 
    "orthogonal flow", 
    "other applicable specifications", 
    "otherwise steps for iframe or frame elements", 
    "out of flow", 
    "out transfers", 
    "out-of-flow", 
    "outer box-shadow", 
    "outer display type", 
    "outer edge", 
    "outer max width", 
    "outer max-content", 
    "outer min width", 
    "outer min-content", 
    "outer size", 
    "outer width", 
    "outerHTML", 
    "outermost svg element", 
    "outline", 
    "outline depth", 
    "outline-color", 
    "outline-offset", 
    "outline-style", 
    "outline-width", 
    "output", 
    "output bitmap", 
    "output of the cascade", 
    "output progress value", 
    "outset", 
    "outside", 
    "outside-inside", 
    "outstanding rejected promises weak set", 
    "over", 
    "overall progress", 
    "overflow", 
    "overflow alignment", 
    "overflow columns", 
    "overflow directions", 
    "overflow-anchor", 
    "overflow-block", 
    "overflow-inline", 
    "overflow-wrap", 
    "overflow-x", 
    "overflow-y", 
    "overlay scrollbars", 
    "overload resolution algorithm", 
    "overloaded", 
    "override mime type", 
    "overscroll behavior", 
    "overscroll-behavior", 
    "overscroll-behavior-block", 
    "overscroll-behavior-inline", 
    "overscroll-behavior-x", 
    "overscroll-behavior-y", 
    "own autocapitalization hint", 
    "own exposure set", 
    "owner", 
    "owner css rule", 
    "owner document", 
    "owner node", 
    "owning element", 
    "p", 
    "padding", 
    "padding area", 
    "padding box", 
    "padding edge", 
    "padding properties", 
    "padding-block", 
    "padding-block-end", 
    "padding-block-start", 
    "padding-bottom", 
    "padding-box", 
    "padding-inline", 
    "padding-inline-end", 
    "padding-inline-start", 
    "padding-left", 
    "padding-right", 
    "padding-top", 
    "page", 
    "page area", 
    "page border", 
    "page box", 
    "page break", 
    "page context", 
    "page float", 
    "page footer", 
    "page group", 
    "page header", 
    "page load processing model for content that uses plugins", 
    "page load processing model for html files", 
    "page load processing model for inline content that doesn't have a dom", 
    "page load processing model for media", 
    "page load processing model for multipart/x-mixed-replace resources", 
    "page load processing model for text files", 
    "page load processing model for xml files", 
    "page margin", 
    "page orientation", 
    "page padding", 
    "page progression", 
    "page property", 
    "page pseudo-class", 
    "page selector", 
    "page selectors", 
    "page sheet", 
    "page showing", 
    "page type selector", 
    "page zoom", 
    "page-based template", 
    "page-break-after", 
    "page-break-before", 
    "page-break-inside", 
    "page-margin boxes", 
    "page-margin property", 
    "pager", 
    "pagination", 
    "paint", 
    "paint class instances", 
    "paint containment", 
    "paint definition", 
    "paint definitions", 
    "paint server element", 
    "paint source", 
    "paint()", 
    "paint-order", 
    "pair", 
    "pair iterator", 
    "pairing", 
    "palegoldenrod", 
    "palegreen", 
    "paleturquoise", 
    "palevioletred", 
    "palpable content", 
    "papayawhip", 
    "paragraph", 
    "parallel queue", 
    "param", 
    "parameter", 
    "parameters", 
    "parent", 
    "parent browsing context", 
    "parent css style sheet", 
    "parent element", 
    "parent layout", 
    "parse", 
    "parse a boolean feature", 
    "parse a comma-separated list of component values", 
    "parse a component value", 
    "parse a css <color> value", 
    "parse a css declaration block", 
    "parse a css rule", 
    "parse a css stylesheet", 
    "parse a css value", 
    "parse a cssstylevalue", 
    "parse a date component", 
    "parse a date or time string", 
    "parse a date string", 
    "parse a declaration", 
    "parse a duration string", 
    "parse a global date and time string", 
    "parse a group of selectors", 
    "parse a jwk", 
    "parse a list of component values", 
    "parse a list of css page selectors", 
    "parse a list of declarations", 
    "parse a list of rules", 
    "parse a local date and time string", 
    "parse a manifest", 
    "parse a media query", 
    "parse a media query list", 
    "parse a mime type", 
    "parse a mime type from bytes", 
    "parse a month component", 
    "parse a month string", 
    "parse a privatekeyinfo", 
    "parse a referrer policy from a `referrer-policy` header", 
    "parse a relative selector", 
    "parse a rule", 
    "parse a sandboxing directive", 
    "parse a selector", 
    "parse a serialized CSP", 
    "parse a serialized CSP list", 
    "parse a serialized content security policy", 
    "parse a sizes attribute", 
    "parse a srcset attribute", 
    "parse a string into an abstract matrix", 
    "parse a stylesheet", 
    "parse a subjectpublickeyinfo", 
    "parse a time component", 
    "parse a time string", 
    "parse a time-zone offset component", 
    "parse a time-zone offset string", 
    "parse a url", 
    "parse a vint", 
    "parse a week string", 
    "parse a yearless date component", 
    "parse a yearless date string", 
    "parse an asn.1 structure", 
    "parse an mp3 frame", 
    "parse error", 
    "parse errors", 
    "parse json from bytes", 
    "parse json into infra values", 
    "parsed according to a particular css grammar", 
    "parsemodule", 
    "parser inserted flag", 
    "parser metadata", 
    "parser pause flag", 
    "parsescript", 
    "parsing", 
    "parsing the blocklist", 
    "partial dictionary", 
    "partial interface", 
    "partial interface mixin", 
    "partial namespace", 
    "partially available", 
    "partially visible", 
    "pass through filter", 
    "passing its url or data to an external software package", 
    "passive scanning", 
    "passthrough request", 
    "password", 
    "password state (type=password)", 
    "past names map", 
    "path", 
    "path components", 
    "path or authority state", 
    "path percent-encode set", 
    "path segment", 
    "path start state", 
    "path state", 
    "path()", 
    "path-absolute-non-windows-file-url string", 
    "path-absolute-url string", 
    "path-part", 
    "path-part match", 
    "path-relative-scheme-less-url string", 
    "path-relative-url string", 
    "pattern", 
    "pattern mask", 
    "pattern matching algorithm", 
    "patterncontentunits", 
    "patterntransform", 
    "patternunits", 
    "pause", 
    "pause an animation", 
    "pause-after", 
    "pause-before", 
    "paused for in-band content", 
    "paused for user interaction", 
    "paused play state", 
    "paymentrequest", 
    "pbkdf2params", 
    "pc", 
    "pcenchar", 
    "peachpuff", 
    "pending", 
    "pending animation event queue", 
    "pending application cache download process tasks", 
    "pending parsing-blocking script", 
    "pending pause task", 
    "pending play task", 
    "pending playback rate", 
    "pending request", 
    "pending scroll event targets", 
    "pending table character tokens", 
    "pending tasks struct", 
    "pending text track change notification flag", 
    "pending-substitution value", 
    "percent decode", 
    "percent encode", 
    "percent-column", 
    "percent-encoded byte", 
    "percentage", 
    "percentage contribution", 
    "perform a microtask checkpoint", 
    "perform a scroll", 
    "perform a security check", 
    "perform automatic text track selection", 
    "perform some steps once a promise is settled", 
    "performing a microtask checkpoint", 
    "peripheral", 
    "permissible worker", 
    "permission descriptor type", 
    "permission query algorithm", 
    "permission request algorithm", 
    "permission result type", 
    "permission revocation algorithm", 
    "permission state", 
    "permission state constraints", 
    "permission task source", 
    "persisted replace state", 
    "persistent bucket", 
    "persistent connections", 
    "persistent css style sheet", 
    "perspective", 
    "perspective matrix", 
    "perspective()", 
    "perspective-origin", 
    "peru", 
    "petite-caps", 
    "phase", 
    "phases", 
    "photo", 
    "phrasing content", 
    "physical", 
    "physical bottom", 
    "physical dimensions", 
    "physical direction", 
    "physical left", 
    "physical right", 
    "physical top", 
    "physical unit", 
    "physical units", 
    "pick an encoding for a form", 
    "picked", 
    "picture", 
    "pinch zoom", 
    "ping", 
    "pink", 
    "pipe chain", 
    "piping", 
    "pitch", 
    "pitch-range", 
    "pixel density descriptor", 
    "pixel density descriptor value", 
    "pixel manipulation", 
    "pixel unit", 
    "pixel-column", 
    "place-content", 
    "place-items", 
    "place-self", 
    "placeholder", 
    "placeholder canvas element", 
    "placeholder label option", 
    "plaintext", 
    "plaintext state", 
    "plan to navigate", 
    "planned navigation", 
    "platform attachment", 
    "platform authenticators", 
    "platform credential", 
    "platform descriptor", 
    "platform object", 
    "platform sensor", 
    "play", 
    "play an animation", 
    "play state", 
    "play-during", 
    "playback direction", 
    "playback rate", 
    "playback volume", 
    "playing", 
    "playsinline", 
    "pls", 
    "plugin", 
    "plugin document", 
    "plugin-types", 
    "plugin-types post-request check", 
    "plum", 
    "point", 
    "pointer-events", 
    "pointerup", 
    "policy cache", 
    "policy directive", 
    "policy directives", 
    "policy origin", 
    "policy-controlled feature", 
    "policy-token", 
    "poly", 
    "polygon", 
    "polygon()", 
    "polyline", 
    "pop", 
    "pop a ruby level", 
    "populate the bluetooth cache", 
    "populate the list of pending text tracks", 
    "popup sandboxing flag set", 
    "port", 
    "port message queue", 
    "port state", 
    "port-part", 
    "port-part matches", 
    "portrait", 
    "portrait orientation", 
    "portrait-primary", 
    "portrait-secondary", 
    "position", 
    "position variable", 
    "positional alignment", 
    "positioned", 
    "positioning rectangle", 
    "positioning schemes", 
    "positioning schemes:", 
    "possibly appropriate alternatives", 
    "possibly pending font loads", 
    "possibly update the key generator", 
    "post", 
    "post-multiplied", 
    "post-multiply", 
    "post-office-box", 
    "postal-code", 
    "posted message task source", 
    "poster", 
    "poster frame", 
    "potential destination", 
    "potential event target", 
    "potential-navigation-or-subresource request", 
    "potentialcustomelementname", 
    "potentially active", 
    "potentially delays the load event", 
    "potentially playing", 
    "potentially scrollable", 
    "potentially trustworthy origin", 
    "potentially trustworthy origins", 
    "potentially trustworthy url", 
    "pow()", 
    "powderblue", 
    "powerful feature", 
    "pragma-set default language", 
    "pre", 
    "pre-insert", 
    "pre-multiplied", 
    "pre-multiplied data type name", 
    "pre-multiply", 
    "pre-remove", 
    "prefer-online", 
    "preferred aspect ratio", 
    "preferred css style sheet set name", 
    "preferred height", 
    "preferred order", 
    "preferred size", 
    "preferred size property", 
    "preferred width", 
    "prefetch-src", 
    "prefh", 
    "prefix match", 
    "prefixed", 
    "prefw", 
    "preloadable hsts host", 
    "prepare a script", 
    "prepare an event", 
    "prepare to run a callback", 
    "prepare to run script", 
    "prescan a byte stream to determine its encoding", 
    "present", 
    "present an install prompt", 
    "presentation", 
    "presentation attributes", 
    "presentation participating code points", 
    "presentation-level", 
    "presentational hints", 
    "presenting an install prompt", 
    "presents an install prompt", 
    "preserveaspectratio", 
    "preserved", 
    "preserved tokens", 
    "preserved white space", 
    "preventDefault()", 
    "previous", 
    "previous current time", 
    "primary filter primitive tree", 
    "primary global interface", 
    "primary interface", 
    "primary service discovery", 
    "primitive types", 
    "principal block-level box", 
    "principal box", 
    "principal writing mode", 
    "print when loaded", 
    "printable area", 
    "printing steps", 
    "priority", 
    "privacy feature", 
    "private address", 
    "privatekey", 
    "privileged no-cors request-header name", 
    "procedure timeouts", 
    "process a keyframe-like object", 
    "process a keyframes argument", 
    "process a navigate fetch", 
    "process a navigate response", 
    "process a navigate url scheme", 
    "process blob parts", 
    "process dt or dd", 
    "process feature policy attributes", 
    "process request body", 
    "process request end-of-body", 
    "process response", 
    "process response done", 
    "process response end-of-body", 
    "process the frame attributes", 
    "process the iframe attributes", 
    "process the linked resource", 
    "processed manifest", 
    "processing a manifest", 
    "processing blob parts", 
    "processing equivalence", 
    "processing imageresource members", 
    "processing modes", 
    "processing the backup element queue", 
    "processinginstruction", 
    "produce a generator result", 
    "producer", 
    "product id", 
    "product of two unit maps", 
    "profile", 
    "profile fundamentals", 
    "progress", 
    "progressevent", 
    "proleptic gregorian calendar", 
    "proleptic-gregorian date", 
    "prolog", 
    "promise type", 
    "promise-calling", 
    "prompt the user to choose", 
    "prompt to unload", 
    "prompting the user to choose", 
    "promptresponseobject", 
    "propagate", 
    "propagation", 
    "propagation path", 
    "proper table child", 
    "proper table-row parent", 
    "properties", 
    "property descriptor", 
    "property names", 
    "property value", 
    "propertydescriptor", 
    "proportional-nums", 
    "proportional-width", 
    "proprietary extension", 
    "protected mode", 
    "protected worker", 
    "proto-url", 
    "proxy-authentication entry", 
    "pseudo-class", 
    "pseudo-classes", 
    "pseudo-element", 
    "pseudo-elements", 
    "public", 
    "public bluetooth address", 
    "public device address", 
    "public key credential", 
    "public key credential source", 
    "public suffix", 
    "publicexponent", 
    "publickey", 
    "pull source", 
    "punctuation", 
    "purple", 
    "push", 
    "push a ruby annotation", 
    "push a ruby level", 
    "push onto the list of active formatting elements", 
    "push source", 
    "px", 
    "q", 
    "quadrilateral", 
    "qualified name", 
    "qualified rule", 
    "quality", 
    "query", 
    "query a permission", 
    "query cache", 
    "query state", 
    "query the \"bluetooth\" permission", 
    "query the bluetooth cache", 
    "queue", 
    "queue a fetch task", 
    "queue a fetch-request-done task", 
    "queue a microtask", 
    "queue a mutation observer microtask", 
    "queue a mutation record", 
    "queue a post-load task", 
    "queue a progress post-load task", 
    "queue a task", 
    "queue a tree mutation record", 
    "queue an attribute mutation record", 
    "queuing strategy", 
    "quirks mode", 
    "quirky color", 
    "quirky length", 
    "quota_exceeded_err", 
    "quotaexceedederror", 
    "quotes", 
    "qwerty", 
    "r", 
    "radial-gradient()", 
    "radialgradient", 
    "radio", 
    "radio button group", 
    "radio button state (type=radio)", 
    "raised initial", 
    "range", 
    "range context", 
    "range state (type=range)", 
    "rangeerror", 
    "rank", 
    "rate limiting", 
    "ratechange", 
    "ratio-dependent axis", 
    "raw text elements", 
    "raw value", 
    "rawtext end tag name state", 
    "rawtext end tag open state", 
    "rawtext less-than sign state", 
    "rawtext state", 
    "rb", 
    "rcdata end tag name state", 
    "rcdata end tag open state", 
    "rcdata less-than sign state", 
    "rcdata state", 
    "rdate", 
    "re-used graphics", 
    "read bd_addr command", 
    "read characteristic descriptors", 
    "read errors", 
    "read long characteristic descriptors", 
    "read method", 
    "read only", 
    "read only arraybuffer", 
    "read operation", 
    "read the resource header", 
    "read-only mode", 
    "read/write mode", 
    "readable byte stream", 
    "readable side", 
    "readable stream", 
    "readable stream reader", 
    "reader", 
    "reading change threshold", 
    "reading timestamp", 
    "reading value", 
    "readonly", 
    "readonlyerror", 
    "ready", 
    "ready for post-load tasks", 
    "ready to be parser-executed", 
    "received bytes", 
    "received ip address", 
    "received signal strength", 
    "receives a set-cookie-string", 
    "recognized algorithm name", 
    "recognized key format values", 
    "recognized key type values", 
    "recognized key usage values", 
    "reconnection time", 
    "reconstruct the active formatting elements", 
    "reconsume", 
    "reconsume the current input code point", 
    "reconsume the current input token", 
    "record", 
    "record type", 
    "rect", 
    "rect()", 
    "rectangle", 
    "rectify a numberish value", 
    "rectifying a numberish value", 
    "red", 
    "redirect mode", 
    "redirect status", 
    "redirects", 
    "reduce accuracy", 
    "reestablish the connection", 
    "reference box", 
    "reference pixel", 
    "referenced", 
    "referenced document subtree", 
    "referenced element", 
    "referer", 
    "referrer", 
    "referrer policy", 
    "referrer policy attribute", 
    "referrer-policy", 
    "referrerpolicy", 
    "reflect", 
    "refresh", 
    "refused to allow the document to be unloaded", 
    "region", 
    "region break", 
    "region chain", 
    "region flow content box", 
    "region-based styling", 
    "region-fragment", 
    "region.", 
    "register", 
    "register a custom property", 
    "registered", 
    "registered class constructors map", 
    "registered observer", 
    "registered observer list", 
    "registered reporting observer list", 
    "registration", 
    "registration ceremony", 
    "registration extension", 
    "registration state", 
    "regular attribute", 
    "regular operation", 
    "reified as a cssstylevalue", 
    "reify a <transform-function>", 
    "reify a <transform-list>", 
    "reify a list of component values", 
    "reify a math expression", 
    "reify a numeric value", 
    "reify a registered custom property value", 
    "reify a var() reference", 
    "reify an identifier", 
    "reify as a cssstylevalue", 
    "reinitialize url", 
    "reject", 
    "reject a promise", 
    "reject job promise", 
    "reject pending play promises", 
    "rel", 
    "rel attribute", 
    "related", 
    "relationship discovery", 
    "relationship strings", 
    "relative", 
    "relative length", 
    "relative position", 
    "relative positioning", 
    "relative selector", 
    "relative slash state", 
    "relative state", 
    "relative url", 
    "relative-url string", 
    "relative-url-with-fragment string", 
    "relatively position", 
    "release a lock", 
    "release a read lock", 
    "release a write lock", 
    "relevant", 
    "relevant agent", 
    "relevant animation", 
    "relevant application cache", 
    "relevant child nodes", 
    "relevant document", 
    "relevant global object", 
    "relevant mutations", 
    "relevant name to cache map", 
    "relevant owner to add", 
    "relevant realm", 
    "relevant request response list", 
    "relevant settings object", 
    "relevant types", 
    "relevant value", 
    "reload-navigation flag", 
    "reload-triggered navigation", 
    "relpos", 
    "relying party", 
    "relying party identifier", 
    "remaining", 
    "remaining fragmentainer extent", 
    "remaining free space", 
    "remote event task source", 
    "remove", 
    "remove a css rule", 
    "remove a css style sheet", 
    "remove all event listeners", 
    "remove an animator instance", 
    "remove an attribute", 
    "remove an attribute by name", 
    "remove an attribute by namespace and local name", 
    "remove an event listener", 
    "remove event", 
    "remove replaced animations", 
    "removed from a document", 
    "removed replace state", 
    "removetrack", 
    "removing an entry", 
    "removing steps", 
    "render with a fallback font face", 
    "render with an invisible fallback font face", 
    "renderable element", 
    "rendered element", 
    "rendered legend", 
    "renderer", 
    "rendering opportunity", 
    "rendering tree", 
    "repeat()", 
    "repeatable list", 
    "repeatcount", 
    "repeatdur", 
    "repeating-conic-gradient()", 
    "repeating-linear-gradient()", 
    "repeating-radial-gradient()", 
    "replace", 
    "replace all", 
    "replace an attribute", 
    "replace data", 
    "replace state", 
    "replaceable animation", 
    "replaced", 
    "replaced element", 
    "replacement", 
    "replacement decoder", 
    "replacement enabled", 
    "replacement error returned flag", 
    "replaces client id", 
    "report", 
    "report a warning to the console", 
    "report an error", 
    "report an exception", 
    "report body", 
    "report buffer", 
    "report latest reading updated", 
    "report long tasks", 
    "report the exception", 
    "report type", 
    "report validity steps", 
    "report-to", 
    "report-uri", 
    "report-uri directive", 
    "report_to", 
    "reported mime types", 
    "reporting cache", 
    "reporting frequency", 
    "reporting group", 
    "reporting observer", 
    "reports", 
    "represent", 
    "representation", 
    "representation data", 
    "represented", 
    "represented by the collection", 
    "request", 
    "request bluetooth devices", 
    "request body", 
    "request error steps", 
    "request matches cached item", 
    "request method", 
    "request permission to use", 
    "request response list", 
    "request sensor access", 
    "request the \"bluetooth\" permission", 
    "request the \"usb\" permission", 
    "request url", 
    "requestFullscreen()", 
    "requestcredentials", 
    "requestdestination", 
    "requested sampling frequency", 
    "requestidlecallback()", 
    "requesting permission to use", 
    "requests", 
    "require-sri-for", 
    "required", 
    "required dictionary member", 
    "required-ascii-whitespace", 
    "requiredExtensions", 
    "reregisteredwhilefiring", 
    "reserialized", 
    "reserved client", 
    "reserved identifiers", 
    "reset", 
    "reset algorithm", 
    "reset an animation's pending tasks", 
    "reset button", 
    "reset button state (type=reset)", 
    "reset the form owner", 
    "reset the insertion mode appropriately", 
    "reset the rendering context to its default state", 
    "reset-only sub-property", 
    "resettable elements", 
    "resident", 
    "resident credential", 
    "resident credential capable", 
    "resident key credential property", 
    "resize", 
    "resolvable private address resolution procedure", 
    "resolve", 
    "resolve a module specifier", 
    "resolve a promise", 
    "resolve color values", 
    "resolve get client promise", 
    "resolve job promise", 
    "resolve pending play promises", 
    "resolve percentage heights in table-cell content:", 
    "resolved as a promise", 
    "resolved descendant node", 
    "resolved type", 
    "resolved value", 
    "resolved value special case property", 
    "resolved value special case property like color", 
    "resolved value special case property like height", 
    "resolved value special case property like top", 
    "resolved-table-width", 
    "resolver", 
    "resolveuuidname", 
    "resolving color values", 
    "resource", 
    "resource fetch algorithm", 
    "resource header", 
    "resource metadata management", 
    "resource representation", 
    "resource selection algorithm", 
    "resources", 
    "response", 
    "response header", 
    "response headers", 
    "response mime type", 
    "response object", 
    "response url", 
    "responses", 
    "rest", 
    "rest-after", 
    "rest-before", 
    "restart", 
    "restart the animation", 
    "restore persisted user state", 
    "restrictions for contents of script elements", 
    "result", 
    "resulting url record", 
    "resulting url string", 
    "retarget", 
    "retargeting", 
    "retrieve a key from an object store", 
    "retrieve a referenced value from an index", 
    "retrieve a value from an index", 
    "retrieve a value from an object store", 
    "retrieve multiple keys from an object store", 
    "retrieve multiple referenced values from an index", 
    "retrieve multiple values from an index", 
    "retrieve multiple values from an object store", 
    "return state", 
    "return type", 
    "rev", 
    "reverse an animation", 
    "revoke bluetooth access", 
    "revoke sensor permission", 
    "rfcb", 
    "rgb()", 
    "rgba()", 
    "richness", 
    "ridge", 
    "right", 
    "right page", 
    "rightmargin", 
    "roaming authenticators", 
    "roaming credential", 
    "role", 
    "root", 
    "root element", 
    "root inline box", 
    "root stacking context", 
    "rosybrown", 
    "rotate", 
    "rotate3d()", 
    "rotatex()", 
    "rotatey()", 
    "rotatez()", 
    "rotation", 
    "rough interoperability", 
    "row", 
    "row axis", 
    "row group", 
    "row group header", 
    "row header", 
    "row-gap", 
    "row/column-grid width maximum (gridmax)", 
    "row/column-grid width minimum (gridmin)", 
    "rowmin", 
    "rows", 
    "royalblue", 
    "rp", 
    "rp id", 
    "rpidhash", 
    "rrule", 
    "rsahashedimportparams", 
    "rsahashedkeyalgorithm", 
    "rsahashedkeygenparams", 
    "rsakeyalgorithm", 
    "rsakeygenparams", 
    "rsaoaepparams", 
    "rsaotherprimesinfo", 
    "rsapssparams", 
    "rssi", 
    "rt", 
    "rtc", 
    "rtl", 
    "ruby", 
    "ruby annotation", 
    "ruby annotation box", 
    "ruby annotation container", 
    "ruby annotation container box", 
    "ruby base", 
    "ruby base box", 
    "ruby base container", 
    "ruby base container box", 
    "ruby container", 
    "ruby container box", 
    "ruby formatting context", 
    "ruby segments", 
    "ruby-align", 
    "ruby-base", 
    "ruby-merge", 
    "ruby-position", 
    "rules", 
    "rules for distinguishing if a resource is a feed or html", 
    "rules for distinguishing if a resource is text or binary", 
    "rules for identifying an unknown mime type", 
    "rules for parsing a hash-name reference", 
    "rules for parsing a legacy color value", 
    "rules for parsing a legacy font size", 
    "rules for parsing a list of dimensions", 
    "rules for parsing a list of floating-point numbers", 
    "rules for parsing dimension values", 
    "rules for parsing floating-point number values", 
    "rules for parsing integers", 
    "rules for parsing non-negative integers", 
    "rules for parsing nonzero dimension values", 
    "rules for parsing simple color values", 
    "rules for serializing simple color values", 
    "rules for sniffing audio and video specifically", 
    "rules for sniffing fonts specifically", 
    "rules for sniffing images specifically", 
    "rules for sniffing in a plugin context", 
    "rules for sniffing in a script context", 
    "rules for sniffing in a style context", 
    "rules for updating the display of webvtt text tracks", 
    "rules for updating the text track rendering", 
    "run a classic script", 
    "run a generator", 
    "run a module script", 
    "run a work queue", 
    "run a worker", 
    "run an upgrade transaction", 
    "run animators", 
    "run job", 
    "run service worker", 
    "run the animation frame callbacks", 
    "run the fullscreen steps", 
    "run the resize steps", 
    "run the scroll steps", 
    "run the update intersection observations steps", 
    "run-in", 
    "run-in box", 
    "run-in sequence", 
    "runjobs", 
    "runnable", 
    "running", 
    "running elements", 
    "running javascript execution context", 
    "running play state", 
    "running script", 
    "running transition", 
    "running()", 
    "rx", 
    "ry", 
    "s", 
    "saddlebrown", 
    "safe zone", 
    "safelisted schemes", 
    "safely upgradable requests", 
    "salmon", 
    "salt", 
    "saltlength", 
    "salvageable", 
    "same attribute", 
    "same bluetooth device", 
    "same origin", 
    "same origin-domain", 
    "same site", 
    "same-agent window objects", 
    "same-document url reference", 
    "same-origin", 
    "same-origin request", 
    "same-origin with its ancestors", 
    "samevalue", 
    "samp", 
    "sampling frequency", 
    "sampling rate", 
    "sampling rates", 
    "sandbox", 
    "sandbox directive", 
    "sandbox propagates to auxiliary browsing contexts flag", 
    "sandboxed automatic features browsing context flag", 
    "sandboxed auxiliary navigation browsing context flag", 
    "sandboxed document.domain browsing context flag", 
    "sandboxed forms browsing context flag", 
    "sandboxed modals flag", 
    "sandboxed navigation browsing context flag", 
    "sandboxed orientation lock browsing context flag", 
    "sandboxed origin browsing context flag", 
    "sandboxed plugins browsing context flag", 
    "sandboxed pointer lock browsing context flag", 
    "sandboxed presentation browsing context flag", 
    "sandboxed scripts browsing context flag", 
    "sandboxed secure browsing context flag", 
    "sandboxed top-level navigation with user activation browsing context flag", 
    "sandboxed top-level navigation without user activation browsing context flag", 
    "sandboxing flag set", 
    "sandybrown", 
    "sans-serif", 
    "satisfies its constraints", 
    "scalar value", 
    "scalar value string", 
    "scale", 
    "scale3d()", 
    "scaled flex shrink factor", 
    "scaled viewport size", 
    "scalez()", 
    "scan for devices", 
    "schedule job", 
    "scheduled event time", 
    "scheme", 
    "scheme fetch", 
    "scheme start state", 
    "scheme state", 
    "scheme-part", 
    "scheme-part match", 
    "scheme-relative-file-url string", 
    "scheme-relative-special-url string", 
    "scheme-relative-url string", 
    "scheme-source", 
    "schemeless origin group", 
    "scope", 
    "scope to job queue map", 
    "scope to registration map", 
    "scope url", 
    "scope-match a selectors string", 
    "scope-relative", 
    "scoped", 
    "scoped selector", 
    "scoping element", 
    "scoping root", 
    "screen", 
    "screen concept", 
    "screen reader", 
    "screenorientation", 
    "script", 
    "script data double escape end state", 
    "script data double escape start state", 
    "script data double escaped dash dash state", 
    "script data double escaped dash state", 
    "script data double escaped less-than sign state", 
    "script data double escaped state", 
    "script data end tag name state", 
    "script data end tag open state", 
    "script data escape start dash state", 
    "script data escape start state", 
    "script data escaped dash dash state", 
    "script data escaped dash state", 
    "script data escaped end tag name state", 
    "script data escaped end tag open state", 
    "script data escaped less-than sign state", 
    "script data escaped state", 
    "script data less-than sign state", 
    "script data state", 
    "script evaluation environment settings object set", 
    "script fetch options", 
    "script nesting level", 
    "script property", 
    "script record", 
    "script-blocking style sheet counter", 
    "script-closable", 
    "script-created parser", 
    "script-like", 
    "script-src", 
    "script-src-attr", 
    "script-src-elem", 
    "script-supporting elements", 
    "scriptable mime type", 
    "scriptevaluation", 
    "scripting flag", 
    "scripting is disabled", 
    "scripting is enabled", 
    "scroll", 
    "scroll an element", 
    "scroll an element into view", 
    "scroll anchoring bounding rect", 
    "scroll boundary", 
    "scroll chain", 
    "scroll chaining", 
    "scroll container", 
    "scroll restoration mode", 
    "scroll snap area", 
    "scroll snap container", 
    "scroll snap position", 
    "scroll snapport", 
    "scroll to the beginning of the document", 
    "scroll to the fragment", 
    "scroll-behavior", 
    "scroll-margin", 
    "scroll-margin-block", 
    "scroll-margin-block-end", 
    "scroll-margin-block-start", 
    "scroll-margin-bottom", 
    "scroll-margin-inline", 
    "scroll-margin-inline-end", 
    "scroll-margin-inline-start", 
    "scroll-margin-left", 
    "scroll-margin-right", 
    "scroll-margin-top", 
    "scroll-padding", 
    "scroll-padding-block", 
    "scroll-padding-block-end", 
    "scroll-padding-block-start", 
    "scroll-padding-bottom", 
    "scroll-padding-inline", 
    "scroll-padding-inline-end", 
    "scroll-padding-inline-start", 
    "scroll-padding-left", 
    "scroll-padding-right", 
    "scroll-padding-top", 
    "scroll-snap-align", 
    "scroll-snap-stop", 
    "scroll-snap-type", 
    "scrollable overflow", 
    "scrollable overflow rectangle", 
    "scrollable overflow region", 
    "scrollbar", 
    "scrollbar gutter", 
    "scrollbar-color", 
    "scrollbar-gutter", 
    "scrollbar-width", 
    "scrolling", 
    "scrolling area", 
    "scrolling area origin", 
    "scrolling box", 
    "scrollport", 
    "seagreen", 
    "seamlessly update the playback rate", 
    "search", 
    "searching for services", 
    "seashell", 
    "sec-websocket-protocol", 
    "second-factor platform authenticator", 
    "second-factor roaming authenticator", 
    "section", 
    "section-", 
    "sectioning content", 
    "sectioning roots", 
    "secure connection establishment", 
    "secure contexts", 
    "secured", 
    "security_err", 
    "securityerror", 
    "seeked", 
    "seeking", 
    "segment break", 
    "segment-completing close path", 
    "select", 
    "select a css style sheet set", 
    "select an application cache", 
    "select an image source", 
    "select the best candidate", 
    "selected coordinate", 
    "selected files", 
    "selectedness", 
    "selecting the best candidate", 
    "selection", 
    "selection direction", 
    "selector", 
    "selector list", 
    "self", 
    "self attestation", 
    "self-alignment", 
    "self-alignment properties", 
    "self-closing flag", 
    "self-closing start tag state", 
    "semi-condensed", 
    "semi-expanded", 
    "send", 
    "send a signal", 
    "send a storage notification", 
    "send a websocket message", 
    "send select update notifications", 
    "send() flag", 
    "sensor feature names", 
    "sensor fusion", 
    "sensor hubs", 
    "sensor permission names", 
    "sensor reading", 
    "sensor task source", 
    "sensor type", 
    "sentences", 
    "sequence", 
    "sequence of simple selectors", 
    "sequence type", 
    "sequential focus navigation", 
    "sequential focus navigation order", 
    "sequential focus navigation starting point", 
    "sequential navigation search algorithm", 
    "serial number", 
    "serializable objects", 
    "serializable types", 
    "serialization behavior", 
    "serialization of a color", 
    "serialization of an origin", 
    "serialization pattern", 
    "serialization steps", 
    "serialize a calc() value", 
    "serialize a comma-separated list", 
    "serialize a css component value", 
    "serialize a css declaration", 
    "serialize a css declaration block", 
    "serialize a css rule", 
    "serialize a css value", 
    "serialize a csskeywordvalue", 
    "serialize a cssmathvalue", 
    "serialize a cssmatrixcomponent", 
    "serialize a cssperspective", 
    "serialize a cssrotate", 
    "serialize a cssscale", 
    "serialize a cssskew", 
    "serialize a cssskewx", 
    "serialize a cssskewy", 
    "serialize a csstransformvalue", 
    "serialize a csstranslate", 
    "serialize a cssunitvalue", 
    "serialize a cssunparsedvalue", 
    "serialize a cssvariablereferencevalue", 
    "serialize a group of selectors", 
    "serialize a list of css page selectors", 
    "serialize a local", 
    "serialize a max() value", 
    "serialize a media feature value", 
    "serialize a media query", 
    "serialize a media query list", 
    "serialize a mime type", 
    "serialize a mime type to bytes", 
    "serialize a min() value", 
    "serialize a non-calc() math function", 
    "serialize a selector", 
    "serialize a simple selector", 
    "serialize a string", 
    "serialize a url", 
    "serialize a whitespace-separated list", 
    "serialize an <an+b> value", 
    "serialize an identifier", 
    "serialize an integer", 
    "serialize json to bytes", 
    "serialized csp", 
    "serialized csp list", 
    "serialized directive", 
    "serialized feature policy", 
    "serialized mock sensor", 
    "serialized options", 
    "serialized source list", 
    "serialized state", 
    "serialized value", 
    "serialized-directive", 
    "serialized-feature-policy", 
    "serialized-origin", 
    "serialized-policy", 
    "serialized-policy-directive", 
    "serialized-policy-list", 
    "serialized-source-list", 
    "serializers", 
    "serializes as void", 
    "serializing a css value", 
    "serializing a request origin", 
    "serif", 
    "server", 
    "server-sent events", 
    "server-side credential storage modality", 
    "server-side-resident public key credential source", 
    "servers", 
    "service", 
    "service changed", 
    "service data", 
    "service definition", 
    "service interoperability requirements", 
    "service uuid data type", 
    "service worker", 
    "service worker agent", 
    "service worker client", 
    "service worker has no pending events", 
    "service worker registration", 
    "service-worker", 
    "service-worker-allowed", 
    "serviceworker", 
    "serviceworkercontainer", 
    "serviceworkerglobalscope", 
    "serviceworkerregistrationobject", 
    "serviceworkerupdateviacache", 
    "session history", 
    "session history document visibility change steps", 
    "session history entry", 
    "session history event loop", 
    "session history traversal queue", 
    "set", 
    "set a css declaration", 
    "set a css declaration priority", 
    "set a css declaration value", 
    "set an attribute", 
    "set an attribute value", 
    "set an existing attribute value", 
    "set an imagebitmaprenderingcontext's output bitmap", 
    "set animator instance of worklet animation", 
    "set bitmap dimensions", 
    "set entries", 
    "set of comma-separated tokens", 
    "set of scripts that will execute as soon as possible", 
    "set of space-separated tokens", 
    "set permission", 
    "set registration", 
    "set request's referrer policy on redirect", 
    "set sensor settings", 
    "set size getter", 
    "set the active document", 
    "set the canceled flag", 
    "set the current base text", 
    "set the current time", 
    "set the frozen base url", 
    "set the password", 
    "set the playback rate", 
    "set the selection direction", 
    "set the selection range", 
    "set the start time", 
    "set the target effect of an animation", 
    "set the timeline of an animation", 
    "set the url", 
    "set the username", 
    "set the value of a new indexed property", 
    "set the value of a new named property", 
    "set the value of an existing indexed property", 
    "set the value of an existing named property", 
    "set up a window environment settings object", 
    "set up a worker environment settings object", 
    "set up a worklet environment settings object", 
    "set up browsing context features", 
    "set up the classic script request", 
    "set up the module script request", 
    "set value", 
    "set-append", 
    "set-cookie", 
    "setimmutableprototype", 
    "setlike", 
    "setlike declaration", 
    "setsyntheticmoduleexport", 
    "setter", 
    "setters", 
    "setting", 
    "setting the value of an entry", 
    "settings section", 
    "setup packet", 
    "setup stage", 
    "sex", 
    "sha-2", 
    "sha-256", 
    "sha-384", 
    "sha-512", 
    "shadow host", 
    "shadow root", 
    "shadow tree", 
    "shadow-including ancestor", 
    "shadow-including descendant", 
    "shadow-including inclusive ancestor", 
    "shadow-including inclusive descendant", 
    "shadow-including preorder, depth-first traversal", 
    "shadow-including root", 
    "shadow-including tree order", 
    "shadowroot", 
    "shadows", 
    "shadows are only drawn if", 
    "shape", 
    "shape elements", 
    "shape-image-threshold", 
    "shape-inside", 
    "shape-margin", 
    "shape-outside", 
    "shape-padding", 
    "shape-rendering", 
    "shape-subtract", 
    "shared alignment context", 
    "shared declarative refresh steps", 
    "shared utf-16 decoder", 
    "shared worker", 
    "shared worker agent", 
    "shared worker manager", 
    "sharedarraybuffer", 
    "sheets", 
    "shift_jis", 
    "shift_jis decoder", 
    "shift_jis encoder", 
    "shift_jis lead", 
    "shipping", 
    "short", 
    "shorten a url's path", 
    "shorthand", 
    "shorthand properties", 
    "shorthand property", 
    "should element be blocked a priori by content security policy?", 
    "should element's inline behavior be blocked by content security policy?", 
    "should navigation request of type from source in target be blocked by content security policy?", 
    "should navigation response to navigation request of type from source in target be blocked by content security policy?", 
    "should plugin element be blocked a priori by content security policy?:", 
    "should response to request be blocked due to mime type", 
    "should response to request be blocked due to nosniff", 
    "show poster flag", 
    "showing", 
    "shows caching progress", 
    "sibling", 
    "sienna", 
    "sign", 
    "signal a slot change", 
    "signal a type change", 
    "signal slots", 
    "signature", 
    "signature counter", 
    "signcount", 
    "signing procedure", 
    "silently set the current time", 
    "silver", 
    "similar-origin window agent", 
    "simple block", 
    "simple color", 
    "simple exception", 
    "simple fullscreen document", 
    "simple iteration progress", 
    "simple selector", 
    "simplified", 
    "sin()", 
    "single operation callback interface", 
    "single-byte decoder", 
    "single-byte encoder", 
    "single-byte encoding", 
    "single-dot path segment", 
    "single-factor capable", 
    "single-line flex container", 
    "single-valued properties", 
    "site storage", 
    "site storage quota", 
    "site storage units", 
    "site storage usage", 
    "site-triggered install prompt", 
    "size", 
    "size containment", 
    "sizes", 
    "sizes attribute", 
    "sizing property", 
    "sizing type", 
    "skip ascii whitespace", 
    "skip-when-determining-incumbent counter", 
    "skyblue", 
    "slashed-zero", 
    "slateblue", 
    "slategray", 
    "slategrey", 
    "slot", 
    "slot!!pseudo-element", 
    "slotable", 
    "slots", 
    "small", 
    "small-caps", 
    "smart sensors", 
    "smooth scroll", 
    "smooth scroll aborted", 
    "smooth scroll completed", 
    "sms:", 
    "snap", 
    "snapped", 
    "snapping", 
    "snapshot profile", 
    "snapshot state", 
    "snapshotstate", 
    "sniff-scriptable flag", 
    "snow", 
    "soft", 
    "soft update", 
    "soft wrap break", 
    "soft wrap opportunity", 
    "solid", 
    "sorted name list", 
    "sound", 
    "source", 
    "source browsing context", 
    "source expression", 
    "source lists", 
    "source node", 
    "source set", 
    "source size", 
    "source text module record", 
    "source-expression", 
    "source-over", 
    "space to fill", 
    "spacer", 
    "spaces", 
    "span", 
    "span count", 
    "spanner", 
    "spanning annotation", 
    "spanning element", 
    "spatial navigation", 
    "spatial navigation containers", 
    "spatial navigation starting point", 
    "spatial navigation steps", 
    "spatial sensor", 
    "spatial-navigation-action", 
    "spatial-navigation-contain", 
    "spatialnavigation", 
    "speak", 
    "speak-as", 
    "speak-header", 
    "speak-numeral", 
    "speak-punctuation", 
    "special", 
    "special authority ignore slashes state", 
    "special authority slashes state", 
    "special keyword", 
    "special keywords", 
    "special operation", 
    "special relative or authority state", 
    "special scheme", 
    "specific conditions", 
    "specific type", 
    "specifications whose evaluations are both affected by the same changes to the user environment, and so always must be evaluated together in order to ensure proper rendering.", 
    "specificity", 
    "specified flow", 
    "specified order", 
    "specified size", 
    "specified size suggestion", 
    "specified value", 
    "speech-rate", 
    "spellcheck", 
    "spin the event loop", 
    "split a string on ascii whitespace", 
    "split a string on commas", 
    "split a text node", 
    "split on ascii whitespace", 
    "split on commas", 
    "spoon-feed the parser", 
    "spouse", 
    "spread break", 
    "spread distance", 
    "spreadmethod", 
    "springgreen", 
    "sqrt()", 
    "square", 
    "src", 
    "srcset attribute", 
    "stack", 
    "stack level", 
    "stack of open elements", 
    "stack of template insertion modes", 
    "stacked-fractions", 
    "stacking context", 
    "stacking context.", 
    "stacking contexts", 
    "stale response", 
    "stale-while-revalidate response", 
    "stall timeout", 
    "stalled", 
    "standby", 
    "start", 
    "start a new parallel queue", 
    "start an idle period algorithm", 
    "start delay", 
    "start of the range", 
    "start page value", 
    "start register", 
    "start tags", 
    "start the track processing model", 
    "start the websocket closing handshake", 
    "start time", 
    "start with a number", 
    "start with a windows drive letter", 
    "start with an identifier", 
    "starting a new parallel queue", 
    "starting point", 
    "starting value", 
    "startpoint-on-the-path", 
    "starts with", 
    "starts with a number", 
    "starts with a valid escape", 
    "starts with a windows drive letter", 
    "starts with an identifier", 
    "state", 
    "stateful animator instance", 
    "stateful flag", 
    "static", 
    "static address", 
    "static attributes", 
    "static device address", 
    "static operations", 
    "static position rectangle", 
    "static-position rectangle", 
    "statically validate the constraints", 
    "status", 
    "status code", 
    "status stage", 
    "steelblue", 
    "step base", 
    "step easing function", 
    "step position", 
    "step scale factor", 
    "step unit", 
    "steps", 
    "steps for obtaining a manifest", 
    "steps to expose a media-resource-specific text track", 
    "steps to fetch an image resource", 
    "steps to install the web application", 
    "steps to notify that an install prompt is available", 
    "stickily position", 
    "sticky position", 
    "stickypos", 
    "stop", 
    "stop document loading", 
    "stop or comma", 
    "stop the sensor altogether", 
    "stop-color", 
    "stop-opacity", 
    "stopped due to errors", 
    "stops parsing", 
    "storage object initialization steps", 
    "store a record into an object store", 
    "stream", 
    "street-address", 
    "stress", 
    "stretch fit", 
    "stretch-fit block size", 
    "stretch-fit inline size", 
    "stretch-fit size", 
    "stretched", 
    "strict equality comparison", 
    "strict mixed content checking flag", 
    "strict mode", 
    "strictly split", 
    "strictly split a string", 
    "strictness value", 
    "strike", 
    "string", 
    "string descriptor", 
    "string length", 
    "string percent decode", 
    "string replace all", 
    "string types", 
    "string()", 
    "string-set", 
    "stringification behavior", 
    "stringifier", 
    "stringifiers", 
    "strings", 
    "strip and collapse ascii whitespace", 
    "strip leading and trailing ascii whitespace", 
    "strip newlines", 
    "stroke", 
    "stroke bounding box", 
    "stroke painting area", 
    "stroke positioning area", 
    "stroke shape", 
    "stroke-align", 
    "stroke-break", 
    "stroke-color", 
    "stroke-dash-corner", 
    "stroke-dash-justify", 
    "stroke-dasharray", 
    "stroke-dashoffset", 
    "stroke-image", 
    "stroke-linecap", 
    "stroke-linejoin", 
    "stroke-miterlimit", 
    "stroke-opacity", 
    "stroke-origin", 
    "stroke-position", 
    "stroke-repeat", 
    "stroke-size", 
    "stroke-width", 
    "stroked", 
    "strong", 
    "struct", 
    "structural element", 
    "structural pseudo-classes", 
    "structurally external element", 
    "structured clone", 
    "strut size", 
    "style", 
    "style attribute", 
    "style change event", 
    "style containment", 
    "style rule", 
    "style sheet", 
    "style sheet!!as conformance class", 
    "style-src", 
    "style-src-attr", 
    "style-src-elem", 
    "stylemap", 
    "stylesheet", 
    "sub", 
    "sub-deserialization", 
    "sub-property", 
    "sub-serialization", 
    "subdivide into iterations", 
    "subdomains", 
    "subgrid", 
    "subjects", 
    "subjects of the selector", 
    "subkeys", 
    "submission value", 
    "submit", 
    "submit as entity body", 
    "submit button", 
    "submit button state (type=submit)", 
    "submit buttons", 
    "submit dialog", 
    "submittable elements", 
    "submitted", 
    "subprotocol in use", 
    "subresource request", 
    "subsequent-sibling combinator", 
    "substantial", 
    "substitute a var()", 
    "substitute an env()", 
    "subtitles", 
    "subtle", 
    "subtlecrypto", 
    "succeed", 
    "succeeded", 
    "success_fraction", 
    "successful", 
    "successful sampling rate", 
    "suffering from a custom error", 
    "suffering from a pattern mismatch", 
    "suffering from a step mismatch", 
    "suffering from a type mismatch", 
    "suffering from an overflow", 
    "suffering from an underflow", 
    "suffering from bad input", 
    "suffering from being missing", 
    "suffering from being too long", 
    "suffering from being too short", 
    "suggestions source element", 
    "suitable sequentially focusable area", 
    "sum value", 
    "summary", 
    "sunken initial", 
    "sup", 
    "super", 
    "superdomain match", 
    "supplemental interfaces", 
    "supplied mime type", 
    "supplied mime type detection algorithm", 
    "support", 
    "support global identifiers for items", 
    "support indexed properties", 
    "support named properties", 
    "supported", 
    "supported by the user agent", 
    "supported css property", 
    "supported features", 
    "supported open() feature name", 
    "supported operations", 
    "supported physical transports", 
    "supported property indices", 
    "supported property names", 
    "supported sensor options", 
    "supported styling language", 
    "supported tokens", 
    "supportedalgorithms", 
    "supports_condition", 
    "supports_condition_in_parens", 
    "supports_conjunction", 
    "supports_declaration_condition", 
    "supports_disjunction", 
    "supports_negation", 
    "supports_rule", 
    "supports_sym", 
    "suppression trigger", 
    "suppression window", 
    "surrogate", 
    "surrogate code point", 
    "surrogate-character-reference", 
    "surrogate-in-input-stream", 
    "surrounding agent", 
    "suspend", 
    "suspendable worker", 
    "svg", 
    "svg authoring tools", 
    "svg context", 
    "svg desc", 
    "svg document fragment", 
    "svg elements", 
    "svg foreignobject", 
    "svg fragment identifier", 
    "svg generators", 
    "svg image", 
    "svg interpreters", 
    "svg layout box", 
    "svg namespace", 
    "svg script", 
    "svg servers", 
    "svg svg", 
    "svg title", 
    "svg use", 
    "svg user agent", 
    "svg view specification", 
    "svg viewers", 
    "svg viewports", 
    "svg:transform", 
    "svgelement", 
    "svgimageelement", 
    "svgscriptelement", 
    "svgsvgelement", 
    "sweetheart", 
    "switch", 
    "switch the fontfaceset to loaded", 
    "switch the fontfaceset to loading", 
    "symbol", 
    "symbols", 
    "symbols()", 
    "sync", 
    "sync registration", 
    "sync-xhr", 
    "synchronized", 
    "synchronous flag", 
    "synchronous read method", 
    "synchronous section", 
    "syntax component", 
    "syntax component name", 
    "syntax descriptor", 
    "syntax string", 
    "syntax_err", 
    "syntaxerror", 
    "synthesize baseline", 
    "synthesized baseline", 
    "synthetic module record", 
    "system font fallback", 
    "systemLanguage", 
    "t1", 
    "t2", 
    "tab", 
    "tab stop", 
    "tab-size", 
    "tabIndex", 
    "tabindex", 
    "tabindex focus flag", 
    "table", 
    "table caption box", 
    "table element", 
    "table grid", 
    "table grid box", 
    "table intrinsic offsets", 
    "table model", 
    "table model error", 
    "table wrapper box", 
    "table-caption", 
    "table-cell", 
    "table-column", 
    "table-column-group", 
    "table-created", 
    "table-footer-group", 
    "table-grid box", 
    "table-header-group", 
    "table-internal", 
    "table-layout", 
    "table-non-root", 
    "table-root", 
    "table-row", 
    "table-row-group", 
    "table-track", 
    "table-track-group", 
    "table-wrapper box", 
    "tabular container", 
    "tabular-nums", 
    "tag", 
    "tag name", 
    "tag name state", 
    "tag omission in text/html", 
    "tag open state", 
    "tag-terminating byte", 
    "taglength", 
    "tags", 
    "take pending play promises", 
    "takes a named argument list", 
    "takes an argument list", 
    "takes an identifier", 
    "takes an identifier list", 
    "takes no arguments", 
    "tan", 
    "tan()", 
    "target", 
    "target effect", 
    "target effect end", 
    "target element", 
    "target main size", 
    "target object", 
    "target phase", 
    "target property", 
    "target-counter()", 
    "target-counters()", 
    "target-text()", 
    "task", 
    "task queues", 
    "task source", 
    "tbody", 
    "td", 
    "teal", 
    "tee a readable stream", 
    "tel", 
    "tel-area-code", 
    "tel-country-code", 
    "tel-extension", 
    "tel-local", 
    "tel-local-prefix", 
    "tel-local-suffix", 
    "tel-national", 
    "telephone state (type=tel)", 
    "telephone type strings", 
    "template", 
    "template contents", 
    "temporary buffer", 
    "terminate", 
    "terminate a worker", 
    "terminate an algorithm", 
    "terminate service worker", 
    "terminate the algorithm", 
    "terminate this algorithm", 
    "termination nesting level", 
    "test of user presence", 
    "text", 
    "text (type=text) state and search state (type=search)", 
    "text chunk", 
    "text composition system", 
    "text content block element", 
    "text content child element", 
    "text content element", 
    "text entry cursor position", 
    "text preparation algorithm", 
    "text response", 
    "text track cue", 
    "text track cue order", 
    "text track cue writing direction", 
    "text tracks", 
    "text-align", 
    "text-align-all", 
    "text-align-last", 
    "text-anchor", 
    "text-combine-upright", 
    "text-decoration", 
    "text-decoration-color", 
    "text-decoration-fill", 
    "text-decoration-line", 
    "text-decoration-skip", 
    "text-decoration-skip-ink", 
    "text-decoration-stroke", 
    "text-decoration-style", 
    "text-decoration-width", 
    "text-emphasis", 
    "text-emphasis-color", 
    "text-emphasis-position", 
    "text-emphasis-skip", 
    "text-emphasis-style", 
    "text-group-align", 
    "text-indent", 
    "text-justify", 
    "text-orientation", 
    "text-overflow", 
    "text-rendering", 
    "text-shadow", 
    "text-size-adjust", 
    "text-space-collapse", 
    "text-space-trim", 
    "text-spacing", 
    "text-transform", 
    "text-underline-offset", 
    "text-underline-position", 
    "text-wrap", 
    "text/cache-manifest", 
    "text/css", 
    "text/ecmascript", 
    "text/event-stream", 
    "text/html", 
    "text/javascript", 
    "text/javascript1.0", 
    "text/javascript1.1", 
    "text/javascript1.2", 
    "text/javascript1.3", 
    "text/javascript1.4", 
    "text/javascript1.5", 
    "text/jscript", 
    "text/json", 
    "text/livescript", 
    "text/ping", 
    "text/plain", 
    "text/plain encoding algorithm", 
    "text/uri-list", 
    "text/vcard", 
    "text/vtt", 
    "text/x-ecmascript", 
    "text/x-javascript", 
    "text/xml", 
    "textarea", 
    "textarea effective height", 
    "textarea effective width", 
    "textarea wrapping transformation", 
    "textcontent", 
    "textdirectiontype", 
    "textpath", 
    "textphone", 
    "textual data types", 
    "tfoot", 
    "th", 
    "the \"after after body\" insertion mode", 
    "the \"after after frameset\" insertion mode", 
    "the \"after body\" insertion mode", 
    "the \"after frameset\" insertion mode", 
    "the \"after head\" insertion mode", 
    "the \"before head\" insertion mode", 
    "the \"before html\" insertion mode", 
    "the \"in body\" insertion mode", 
    "the \"in caption\" insertion mode", 
    "the \"in cell\" insertion mode", 
    "the \"in column group\" insertion mode", 
    "the \"in frameset\" insertion mode", 
    "the \"in head noscript\" insertion mode", 
    "the \"in head\" insertion mode", 
    "the \"in row\" insertion mode", 
    "the \"in select in table\" insertion mode", 
    "the \"in select\" insertion mode", 
    "the \"in table body\" insertion mode", 
    "the \"in table text\" insertion mode", 
    "the \"in table\" insertion mode", 
    "the \"in template\" insertion mode", 
    "the \"initial\" insertion mode", 
    "the \"text\" insertion mode", 
    "the 128-bit uuid represented", 
    "the accesskey attribute", 
    "the body element", 
    "the constraint validation api", 
    "the curve name", 
    "the dir attribute", 
    "the directionality", 
    "the document's referrer", 
    "the drag data item kind", 
    "the drag data item type string", 
    "the draggable attribute", 
    "the element's base url", 
    "the embed element setup steps", 
    "the empty string", 
    "the event handler processing algorithm", 
    "the given value", 
    "the head element", 
    "the hidden attribute", 
    "the html body element", 
    "the html element", 
    "the html syntax", 
    "the indicated part of the document", 
    "the input byte stream", 
    "the kind of text track", 
    "the legend element's accesskey delegatee", 
    "the link is an alternative style sheet", 
    "the location bar barprop object", 
    "the manifest", 
    "the menu bar barprop object", 
    "the outline's owner", 
    "the personal bar barprop object", 
    "the properties of an item", 
    "the range", 
    "the rules for choosing a browsing context", 
    "the rules for parsing tokens in foreign content", 
    "the script is ready", 
    "the script's script", 
    "the script's type", 
    "the scrollbar barprop object", 
    "the special value *", 
    "the status bar barprop object", 
    "the style attribute", 
    "the template element", 
    "the title element", 
    "the toolbar barprop object", 
    "the typedarray constructors", 
    "the websocket closing handshake is started", 
    "the websocket connection close code", 
    "the websocket connection close reason", 
    "the websocket connection is closed", 
    "the websocket connection is established", 
    "the worker's ports", 
    "the xml syntax", 
    "thead", 
    "theme-color", 
    "this", 
    "thistle", 
    "threeddarkshadow", 
    "threedface", 
    "threedhighlight", 
    "threedlightshadow", 
    "threedshadow", 
    "throw", 
    "throw-on-dynamic-markup-insertion counter", 
    "thrown", 
    "time", 
    "time marches on", 
    "time origin", 
    "time origin timestamp", 
    "time state (type=time)", 
    "time value", 
    "time-zone offset", 
    "timed out flag", 
    "timeline", 
    "timeline associated with a document", 
    "timeline current time", 
    "timeline offset", 
    "timeline time to origin-relative time", 
    "timeout_err", 
    "timeouterror", 
    "timer initialization steps", 
    "timer nesting level", 
    "timer table", 
    "timer task source", 
    "timeupdate", 
    "timing function", 
    "title", 
    "title element", 
    "titling-caps", 
    "tmbl", 
    "to", 
    "to idl dictionary value", 
    "toboolean", 
    "toggle", 
    "toggle()", 
    "token", 
    "tokenization", 
    "tokenize the features argument", 
    "tomato", 
    "toomanyreads", 
    "top", 
    "top layer", 
    "top-level browsing context", 
    "top-level calculation", 
    "top-level element", 
    "top-level flag", 
    "top-level microdata item", 
    "topmargin", 
    "topmost event target", 
    "topmost script-having execution context", 
    "tostring", 
    "total horizontal border spacing", 
    "total length", 
    "touch", 
    "touch point", 
    "touchend", 
    "touint32", 
    "tr", 
    "trace a path", 
    "track", 
    "track label", 
    "track language", 
    "track list", 
    "track section", 
    "track sizing algorithm", 
    "track url", 
    "tracking", 
    "traditional", 
    "trailing-spaces", 
    "transaction", 
    "transaction-amount", 
    "transaction-currency", 
    "transactioninactiveerror", 
    "transfer function element", 
    "transfer function element attributes", 
    "transfer steps", 
    "transfer-receiving steps", 
    "transferable objects", 
    "transferred size suggestion", 
    "transform", 
    "transform a point with a matrix", 
    "transform stream", 
    "transform-box", 
    "transform-origin", 
    "transform-style", 
    "transformToDocument()", 
    "transformToFragment()", 
    "transformable element", 
    "transformation matrix", 
    "transformations", 
    "transformed element", 
    "transformed progress", 
    "transformer", 
    "transforming", 
    "transforms", 
    "transient registered observer", 
    "transition", 
    "transition generation", 
    "transition origin", 
    "transition phase", 
    "transition-delay", 
    "transition-duration", 
    "transition-property", 
    "transition-timing-function", 
    "transitionable", 
    "translatable attributes", 
    "translate", 
    "translate a layoutconstraintsoptions to internal constraints", 
    "translate-enabled", 
    "translate3d()", 
    "translatez()", 
    "translating", 
    "translation", 
    "translation mode", 
    "transmission of request and response", 
    "transp", 
    "transparent", 
    "transparent black", 
    "traverse siblings", 
    "traverse the history", 
    "traverse the history by a delta", 
    "tree", 
    "tree construction", 
    "tree construction dispatcher", 
    "tree context", 
    "tree order", 
    "tree-abiding", 
    "tree-abiding pseudo-element", 
    "tref", 
    "triangle", 
    "triaxial", 
    "triggered by a user generated orientation change", 
    "triggered by user activation", 
    "trinary", 
    "true-by-default", 
    "try activate", 
    "try clear registration", 
    "try to upgrade an element", 
    "tspan", 
    "tt", 
    "ttl", 
    "tuple", 
    "tuple origin", 
    "turned off", 
    "turned on", 
    "turquoise", 
    "tx power level", 
    "txAuthGenericArg", 
    "type", 
    "type being given a new name", 
    "type list", 
    "type name", 
    "type of a cssmathvalue", 
    "type of a cssunitvalue", 
    "type of the content", 
    "type selector", 
    "type-phase", 
    "typed array types", 
    "typed item", 
    "typedarraycreate", 
    "typedef", 
    "typeerror", 
    "typemustmatch", 
    "typeof", 
    "types", 
    "types array", 
    "typographic character", 
    "typographic character unit", 
    "typographic letter unit", 
    "typographic mode", 
    "tz", 
    "u", 
    "ua", 
    "ua origin", 
    "ua style sheet", 
    "uid", 
    "uievent", 
    "uint8clampedarray", 
    "ul", 
    "ultimate sink", 
    "ultra-condensed", 
    "ultra-expanded", 
    "un-initialized value", 
    "unauthenticated response", 
    "unavailable", 
    "unbounded key range", 
    "under", 
    "underlying byte source", 
    "underlying sink", 
    "underlying source", 
    "underlying value", 
    "underlying values", 
    "undistributable space", 
    "unenumerable", 
    "unexpected-character-after-doctype-system-identifier", 
    "unexpected-character-in-attribute-name", 
    "unexpected-character-in-unquoted-attribute-value", 
    "unexpected-equals-sign-before-attribute-name", 
    "unexpected-null-character", 
    "unexpected-question-mark-instead-of-tag-name", 
    "unexpected-solidus-in-tag", 
    "unfocusing steps", 
    "unforced break", 
    "unforgeable", 
    "unforgeable property name", 
    "unfullscreen a document", 
    "unfullscreen an element", 
    "uniaxial", 
    "unicase", 
    "unicode category", 
    "unicode character categories", 
    "unicode east asian width", 
    "unicode general category", 
    "unicode script", 
    "unicode-bidi", 
    "unicode-range", 
    "union type", 
    "unique identifier (id)", 
    "universal selector", 
    "universal syntax descriptor", 
    "unix epoch", 
    "unknown", 
    "unknown -webkit- pseudo-elements", 
    "unknown-named-character-reference", 
    "unknownerror", 
    "unload", 
    "unload a document", 
    "unloading document cleanup steps", 
    "unloading document visibility change steps", 
    "unoccupied", 
    "unordered set of unique space-separated tokens", 
    "unprefixed", 
    "unregister", 
    "unregister a custom property", 
    "unresolved", 
    "unresolved reference", 
    "unrestricted double", 
    "unrestricted float", 
    "unsafe response", 
    "unsafe-request flag", 
    "unsafe-url", 
    "unsafefile", 
    "unset", 
    "unset.", 
    "unshipped port message queue", 
    "unsigned long", 
    "unsigned long long", 
    "unsigned short", 
    "unstable", 
    "unstyled document", 
    "untagged image", 
    "unwrapkey", 
    "up", 
    "update", 
    "update a layout child style", 
    "update a style block", 
    "update an animation's finished state", 
    "update animations and send events", 
    "update href", 
    "update latest reading", 
    "update mock sensor reading", 
    "update registration state", 
    "update service worker extended events set", 
    "update status", 
    "update style attribute for", 
    "update the image data", 
    "update the orientation information", 
    "update the rendering", 
    "update the session history with the new page", 
    "update the source set", 
    "update the timing properties of an animation effect", 
    "update worker state", 
    "updateready", 
    "upgrade a request", 
    "upgrade an element", 
    "upgrade attempt", 
    "upgrade insecure navigations set", 
    "upgrade reaction", 
    "upgrade the pending request to the current request", 
    "upgrade transaction", 
    "upgrade-insecure-requests", 
    "upgrade-insecure-requests http request header field", 
    "upgrades", 
    "upload complete flag", 
    "upload listener flag", 
    "upon fulfillment", 
    "upon rejection", 
    "upon settling", 
    "upper bound", 
    "upper open flag", 
    "upper-alpha", 
    "upper-alpha-legal", 
    "upper-latin", 
    "upper-roman", 
    "uppercase letter", 
    "url", 
    "url and history update steps", 
    "url code point", 
    "url descriptor", 
    "url equals", 
    "url list", 
    "url parser", 
    "url parsing", 
    "url property elements", 
    "url record", 
    "url reference", 
    "url reference with fragment identifier", 
    "url serializer", 
    "url state (type=url)", 
    "url units", 
    "url()", 
    "url-fragment string", 
    "url-path-segment string", 
    "url-port string", 
    "url-query string", 
    "url-scheme string", 
    "url_mismatch_err", 
    "urlencoded byte serializer", 
    "urlencoded parser", 
    "urlencoded serializer", 
    "urlencoded string parser", 
    "urlmismatcherror", 
    "urn", 
    "urn:", 
    "usage intersection", 
    "usages", 
    "usages_cached", 
    "usb device", 
    "use", 
    "use a negative sign", 
    "use credentials", 
    "use srcset or picture", 
    "use strict directive", 
    "use-credentials", 
    "use-element shadow tree", 
    "use-url-credentials flag", 
    "used", 
    "used autocapitalization hint", 
    "used color scheme", 
    "used min-width of a table", 
    "used offset distance", 
    "used to fingerprint the user", 
    "used value", 
    "used width of a table", 
    "usemap", 
    "user action pseudo-class", 
    "user agent", 
    "user agent origin", 
    "user agent style sheet", 
    "user consent", 
    "user coordinate system", 
    "user handle", 
    "user interaction", 
    "user interaction task source", 
    "user mediated", 
    "user mediation", 
    "user object", 
    "user origin", 
    "user present", 
    "user public key", 
    "user style sheet", 
    "user units", 
    "user verification", 
    "user verified", 
    "user-select", 
    "user-verifying platform authenticator", 
    "user-verifying roaming authenticator", 
    "userinfo percent-encode set", 
    "username", 
    "uses", 
    "uses a negative sign", 
    "using", 
    "using the a element to define a command", 
    "using the accesskey attribute on a legend element to define a command", 
    "using the accesskey attribute to define a command on other elements", 
    "using the button element to define a command", 
    "using the input element to define a command", 
    "using the option element to define a command", 
    "using the rules for", 
    "usvstring", 
    "utf-16 encoding", 
    "utf-16 lead byte", 
    "utf-16 lead surrogate", 
    "utf-16be", 
    "utf-16be decoder", 
    "utf-16be decoder flag", 
    "utf-16le", 
    "utf-16le decoder", 
    "utf-8", 
    "utf-8 bytes needed", 
    "utf-8 bytes seen", 
    "utf-8 code point", 
    "utf-8 decode", 
    "utf-8 decode without bom", 
    "utf-8 decode without bom or fail", 
    "utf-8 decoder", 
    "utf-8 decoding", 
    "utf-8 encode", 
    "utf-8 encoder", 
    "utf-8 lower boundary", 
    "utf-8 percent encode", 
    "utf-8 upper boundary", 
    "uuid", 
    "uuid alias", 
    "uv", 
    "valid", 
    "valid browsing context name", 
    "valid browsing context name or keyword", 
    "valid color", 
    "valid css property", 
    "valid custom element name", 
    "valid date string", 
    "valid date string with optional time", 
    "valid domain", 
    "valid domain string", 
    "valid duration string", 
    "valid e-mail address", 
    "valid e-mail address list", 
    "valid floating-point number", 
    "valid global date and time string", 
    "valid hash-name reference", 
    "valid host string", 
    "valid image", 
    "valid integer", 
    "valid ipv4-address string", 
    "valid ipv6-address string", 
    "valid key path", 
    "valid list of floating-point numbers", 
    "valid list of part mappings", 
    "valid local date and time string", 
    "valid lowercase simple color", 
    "valid media query list", 
    "valid mime type", 
    "valid mime type string", 
    "valid mime type string with no parameters", 
    "valid month string", 
    "valid non-empty url", 
    "valid non-empty url potentially surrounded by spaces", 
    "valid non-negative integer", 
    "valid normalized local date and time string", 
    "valid opaque-host string", 
    "valid part mapping", 
    "valid simple color", 
    "valid source size list", 
    "valid time string", 
    "valid time-zone offset string", 
    "valid url potentially surrounded by spaces", 
    "valid url string", 
    "valid uuid", 
    "valid vevent duration string", 
    "valid week string", 
    "valid yearless date string", 
    "validate", 
    "validate and extract", 
    "validation anchor", 
    "validation error", 
    "validation message", 
    "validity states", 
    "valign", 
    "value", 
    "value accumulation", 
    "value addition", 
    "value interpolation", 
    "value iterator", 
    "value of string literal tokens", 
    "value pairs to iterate over", 
    "value sanitization algorithm", 
    "values", 
    "valuetype", 
    "var", 
    "var()", 
    "var() substitution", 
    "variadic", 
    "vchar", 
    "vector-effect", 
    "vendor id", 
    "vendor prefix", 
    "vendor-prefixed", 
    "verification procedure", 
    "verification procedure inputs", 
    "verify", 
    "version", 
    "versionerror", 
    "vertex markers", 
    "vertical", 
    "vertical axis", 
    "vertical block flow", 
    "vertical dimension", 
    "vertical element", 
    "vertical offset", 
    "vertical script", 
    "vertical writing mode", 
    "vertical-align", 
    "vertical-only", 
    "video", 
    "video/mp4", 
    "video/mpeg", 
    "view", 
    "viewport", 
    "viewport coordinate system", 
    "viewport-based selection", 
    "viewport-percentage lengths", 
    "violate", 
    "violated", 
    "violation", 
    "violation report", 
    "violet", 
    "virtual scoping root", 
    "visibility", 
    "visibility state", 
    "visible character", 
    "visible to reportingobservers", 
    "visible track", 
    "visual angle unit", 
    "visual box model", 
    "vlink", 
    "voice", 
    "voice-balance", 
    "voice-duration", 
    "voice-family", 
    "voice-pitch", 
    "voice-range", 
    "voice-rate", 
    "voice-stress", 
    "voice-volume", 
    "void", 
    "void elements", 
    "voidfunction", 
    "volume", 
    "volumechange", 
    "vspace", 
    "vttcue", 
    "vw", 
    "wait for all", 
    "waiting", 
    "waiting for all", 
    "wbr", 
    "web application", 
    "web authentication api", 
    "web idl arguments list", 
    "web sockets", 
    "web worker", 
    "web+ scheme prefix", 
    "web-exposed available screen area", 
    "web-exposed screen area", 
    "webappmanifest", 
    "webauthn authenticator", 
    "webauthn client", 
    "webauthn client device", 
    "webauthn extensions", 
    "webauthn relying party", 
    "webauthn-feature", 
    "webgl", 
    "webgl2", 
    "webgl2renderingcontext", 
    "webglcontextattributes", 
    "webglrenderingcontext", 
    "webkitURL", 
    "websocket task source", 
    "webusb platform capability descriptor", 
    "webvtt file", 
    "webvtt file using cue text", 
    "webvtt file using only nested cues", 
    "webvtt parser", 
    "week", 
    "week number of the last day", 
    "week state (type=week)", 
    "weight", 
    "well-known intrinsic objects", 
    "well-known symbols", 
    "wheat", 
    "wheel", 
    "when-defined promise map", 
    "while", 
    "white", 
    "white space", 
    "white space characters", 
    "white-space", 
    "white_space characters", 
    "whitesmoke", 
    "whitespace", 
    "whitespace byte", 
    "widows", 
    "width", 
    "width descriptor", 
    "width descriptor value", 
    "width of the select's labels", 
    "will retry", 
    "will-change", 
    "willful violation", 
    "window", 
    "window event loop", 
    "window open steps", 
    "window post message steps", 
    "window-reflecting body element event handler set", 
    "windowframe", 
    "windoworworkerglobalscope", 
    "windows drive letter", 
    "windows-1250", 
    "windows-1251", 
    "windows-1252", 
    "windows-1253", 
    "windows-1254", 
    "windows-1255", 
    "windows-1256", 
    "windows-1257", 
    "windows-1258", 
    "windows-874", 
    "windowtext", 
    "within scope", 
    "within scope of a manifest", 
    "within-scope-manifest", 
    "word separator", 
    "word-break", 
    "word-separator character", 
    "word-spacing", 
    "word-wrap", 
    "words", 
    "work", 
    "worker", 
    "worker event loop", 
    "worker-src", 
    "workerglobalscope object", 
    "workertype", 
    "worklet agent", 
    "worklet animation", 
    "worklet event loop", 
    "worklet global scope", 
    "worklet global scope execution environment", 
    "worklet global scope type", 
    "worklet's resolved module urls", 
    "worklet's workletglobalscopes", 
    "workletglobalscope", 
    "would start a number", 
    "would start an identifier", 
    "wrap", 
    "wrap-after", 
    "wrap-before", 
    "wrap-flow", 
    "wrap-inside", 
    "wrap-through", 
    "wrapkey", 
    "wrapping", 
    "wrapping area", 
    "wrapping context", 
    "writable side", 
    "writable stream", 
    "writable stream writer", 
    "write characteristic descriptors", 
    "write characteristic value", 
    "write long characteristic descriptors", 
    "write without response", 
    "writecharacteristicvalue", 
    "writer", 
    "writing mode", 
    "writing-mode", 
    "wrong_document_err", 
    "wrongdocumenterror", 
    "wsp", 
    "x", 
    "x-axis", 
    "x-content-type-options", 
    "x-mac-cyrillic", 
    "x-ua-compatible", 
    "x-user-defined", 
    "x-user-defined decoder", 
    "x-user-defined encoder", 
    "x1", 
    "x2", 
    "xlink namespace", 
    "xlink:href", 
    "xml document", 
    "xml documents", 
    "xml fragment parsing algorithm", 
    "xml fragment serialization algorithm", 
    "xml mime type", 
    "xml namespace", 
    "xml parser", 
    "xml scripting support disabled", 
    "xml scripting support enabled", 
    "xml-compatible", 
    "xml:space", 
    "xmlhttprequest", 
    "xmlns namespace", 
    "xmp", 
    "xsltprocessor", 
    "y", 
    "y-axis", 
    "y1", 
    "y2", 
    "yearless date", 
    "yellow", 
    "yellowgreen", 
    "z-index", 
    "zip-based mime type", 
    "{a,b}", 
    "{a}", 
    "|", 
    "||", 
    "~"
  ], 
  "<angle>": [
    "deg", 
    "grad", 
    "rad", 
    "turn"
  ], 
  "<baseline-position>": [
    "baseline", 
    "first", 
    "first baseline", 
    "last", 
    "last baseline"
  ], 
  "<bg-clip>": [
    "<box>", 
    "border", 
    "text"
  ], 
  "<blend-mode>": [
    "color", 
    "color-burn", 
    "color-dodge", 
    "darken", 
    "difference", 
    "exclusion", 
    "hard-light", 
    "hue", 
    "lighten", 
    "luminosity", 
    "multiply", 
    "normal", 
    "overlay", 
    "saturation", 
    "screen", 
    "soft-light"
  ], 
  "<color>": [
    "aliceblue", 
    "antiquewhite", 
    "aqua", 
    "aquamarine", 
    "azure", 
    "beige", 
    "bisque", 
    "black", 
    "blanchedalmond", 
    "blue", 
    "blueviolet", 
    "brown", 
    "burlywood", 
    "cadetblue", 
    "chartreuse", 
    "chocolate", 
    "coral", 
    "cornflowerblue", 
    "cornsilk", 
    "crimson", 
    "currentcolor", 
    "cyan", 
    "darkblue", 
    "darkcyan", 
    "darkgoldenrod", 
    "darkgray", 
    "darkgreen", 
    "darkgrey", 
    "darkkhaki", 
    "darkmagenta", 
    "darkolivegreen", 
    "darkorange", 
    "darkorchid", 
    "darkred", 
    "darksalmon", 
    "darkseagreen", 
    "darkslateblue", 
    "darkslategray", 
    "darkslategrey", 
    "darkturquoise", 
    "darkviolet", 
    "deeppink", 
    "deepskyblue", 
    "dimgray", 
    "dimgrey", 
    "dodgerblue", 
    "firebrick", 
    "floralwhite", 
    "forestgreen", 
    "fuchsia", 
    "gainsboro", 
    "ghostwhite", 
    "gold", 
    "goldenrod", 
    "gray", 
    "green", 
    "greenyellow", 
    "grey", 
    "honeydew", 
    "hotpink", 
    "indianred", 
    "indigo", 
    "ivory", 
    "khaki", 
    "lavender", 
    "lavenderblush", 
    "lawngreen", 
    "lemonchiffon", 
    "lightblue", 
    "lightcoral", 
    "lightcyan", 
    "lightgoldenrodyellow", 
    "lightgray", 
    "lightgreen", 
    "lightgrey", 
    "lightpink", 
    "lightsalmon", 
    "lightseagreen", 
    "lightskyblue", 
    "lightslategray", 
    "lightslategrey", 
    "lightsteelblue", 
    "lightyellow", 
    "lime", 
    "limegreen", 
    "linen", 
    "magenta", 
    "maroon", 
    "mediumaquamarine", 
    "mediumblue", 
    "mediumorchid", 
    "mediumpurple", 
    "mediumseagreen", 
    "mediumslateblue", 
    "mediumspringgreen", 
    "mediumturquoise", 
    "mediumvioletred", 
    "midnightblue", 
    "mintcream", 
    "mistyrose", 
    "moccasin", 
    "navajowhite", 
    "navy", 
    "oldlace", 
    "olive", 
    "olivedrab", 
    "orange", 
    "orangered", 
    "orchid", 
    "palegoldenrod", 
    "palegreen", 
    "paleturquoise", 
    "palevioletred", 
    "papayawhip", 
    "peachpuff", 
    "peru", 
    "pink", 
    "plum", 
    "powderblue", 
    "purple", 
    "rebeccapurple", 
    "red", 
    "rosybrown", 
    "royalblue", 
    "saddlebrown", 
    "salmon", 
    "sandybrown", 
    "seagreen", 
    "seashell", 
    "sienna", 
    "silver", 
    "skyblue", 
    "slateblue", 
    "slategray", 
    "slategrey", 
    "snow", 
    "springgreen", 
    "steelblue", 
    "tan", 
    "teal", 
    "thistle", 
    "tomato", 
    "transparent", 
    "turquoise", 
    "violet", 
    "wheat", 
    "white", 
    "whitesmoke", 
    "yellow", 
    "yellowgreen"
  ], 
  "<content-distribution>": [
    "space-around", 
    "space-between", 
    "space-evenly", 
    "stretch"
  ], 
  "<content-list>": [
    "<image>", 
    "<string>", 
    "close-quote", 
    "contents", 
    "leader()", 
    "no-close-quote", 
    "no-open-quote", 
    "open-quote"
  ], 
  "<content-position>": [
    "center", 
    "end", 
    "flex-end", 
    "flex-start", 
    "start"
  ], 
  "<counter-style-name>": [
    "arabic-indic", 
    "armenian", 
    "bengali", 
    "cambodian", 
    "circle", 
    "cjk-decimal", 
    "cjk-earthly-branch", 
    "cjk-heavenly-stem", 
    "decimal", 
    "decimal-leading-zero", 
    "devanagari", 
    "disc", 
    "disclosure-closed", 
    "disclosure-open", 
    "ethiopic-numeric", 
    "georgian", 
    "gujarati", 
    "gurmukhi", 
    "hebrew", 
    "hiragana", 
    "hiragana-iroha", 
    "kannada", 
    "katakana", 
    "katakana-iroha", 
    "khmer", 
    "korean-hangul-formal", 
    "korean-hanja-formal", 
    "korean-hanja-informal", 
    "lao", 
    "lower-alpha", 
    "lower-armenian", 
    "lower-greek", 
    "lower-latin", 
    "lower-roman", 
    "malayalam", 
    "mongolian", 
    "myanmar", 
    "oriya", 
    "persian", 
    "square", 
    "tamil", 
    "telugu", 
    "thai", 
    "tibetan", 
    "upper-alpha", 
    "upper-armenian", 
    "upper-latin", 
    "upper-roman"
  ], 
  "<counter-style>": [
    "cjk-ideographic", 
    "japanese-formal", 
    "japanese-informal", 
    "simp-chinese-formal", 
    "simp-chinese-informal", 
    "trad-chinese-formal", 
    "trad-chinese-informal"
  ], 
  "<cubic-bezier-easing-function>": [
    "cubic-bezier()", 
    "ease", 
    "ease-in", 
    "ease-in-out", 
    "ease-out"
  ], 
  "<display-box>": [
    "contents", 
    "none"
  ], 
  "<display-inside>": [
    "flex", 
    "flow", 
    "flow-root", 
    "grid", 
    "ruby", 
    "table"
  ], 
  "<display-internal>": [
    "ruby-base", 
    "ruby-base-container", 
    "ruby-text", 
    "ruby-text-container", 
    "table-caption", 
    "table-cell", 
    "table-column", 
    "table-column-group", 
    "table-footer-group", 
    "table-header-group", 
    "table-row", 
    "table-row-group"
  ], 
  "<display-legacy>": [
    "inline-block", 
    "inline-flex", 
    "inline-grid", 
    "inline-table"
  ], 
  "<display-list-item>": [
    "list-item"
  ], 
  "<display-outside>": [
    "block", 
    "inline", 
    "run-in"
  ], 
  "<ending-shape>": [
    "circle", 
    "ellipse"
  ], 
  "<flex>": [
    "fr", 
    "fr unit"
  ], 
  "<frequency>": [
    "hz", 
    "khz"
  ], 
  "<generic-family>": [
    "cursive", 
    "emoji", 
    "fangsong", 
    "fantasy", 
    "math", 
    "monospace", 
    "sans-serif", 
    "serif", 
    "system-ui"
  ], 
  "<grid-line>": [
    "<custom-ident>", 
    "<integer> && <custom-ident>?", 
    "auto", 
    "span && [ <integer> || <custom-ident> ]"
  ], 
  "<length>": [
    "advance measure", 
    "cap", 
    "ch", 
    "cm", 
    "em", 
    "ex", 
    "ic", 
    "in", 
    "lh", 
    "mm", 
    "pc", 
    "pixel unit", 
    "pt", 
    "px", 
    "q", 
    "rem", 
    "rlh", 
    "vb", 
    "vh", 
    "vi", 
    "vmax", 
    "vmin", 
    "vw"
  ], 
  "<line-style>": [
    "dashed", 
    "dotted", 
    "double", 
    "groove", 
    "hidden", 
    "inset", 
    "none", 
    "outset", 
    "ridge", 
    "solid"
  ], 
  "<line-width>": [
    "medium", 
    "thick", 
    "thin"
  ], 
  "<overflow-position>": [
    "safe", 
    "unsafe"
  ], 
  "<page-size>": [
    "a3", 
    "a4", 
    "a5", 
    "b4", 
    "b5", 
    "jis-b4", 
    "jis-b5", 
    "ledger", 
    "legal", 
    "letter"
  ], 
  "<paint>": [
    "none"
  ], 
  "<quote>": [
    "close-quote", 
    "no-close-quote", 
    "no-open-quote", 
    "open-quote"
  ], 
  "<resolution>": [
    "dpcm", 
    "dpi", 
    "dppx", 
    "x"
  ], 
  "<self-position>": [
    "center", 
    "end", 
    "flex-end", 
    "flex-start", 
    "self-end", 
    "self-start", 
    "start"
  ], 
  "<shape-box>": [
    "border-box", 
    "content-box", 
    "margin-box", 
    "padding-box"
  ], 
  "<size>": [
    "<length-percentage>{2}", 
    "<length>", 
    "closest-corner", 
    "closest-side", 
    "farthest-corner", 
    "farthest-side", 
    "sides"
  ], 
  "<step-easing-function>": [
    "step-end", 
    "step-start", 
    "steps()"
  ], 
  "<svg-paint>": [
    "child", 
    "child(<integer>)"
  ], 
  "<time>": [
    "ms", 
    "s"
  ], 
  "<type-or-value>": [
    "%", 
    "angle", 
    "color", 
    "frequency", 
    "integer", 
    "length", 
    "number", 
    "string", 
    "time", 
    "url"
  ], 
  "@color-profile": [
    "rendering-intent", 
    "src"
  ], 
  "@color-profile/rendering-intent": [
    "absolute-colorimetric", 
    "perceptual", 
    "relative-colorimetric", 
    "saturation"
  ], 
  "@counter-style": [
    "additive-symbols", 
    "fallback", 
    "negative", 
    "pad", 
    "prefix", 
    "range", 
    "speak-as", 
    "suffix", 
    "symbols", 
    "system"
  ], 
  "@counter-style/range": [
    "auto"
  ], 
  "@counter-style/speak-as": [
    "<counter-style-name>", 
    "auto", 
    "bullets", 
    "numbers", 
    "spell-out", 
    "words"
  ], 
  "@counter-style/system": [
    "additive", 
    "alphabetic", 
    "cyclic", 
    "extends", 
    "fixed", 
    "numeric"
  ], 
  "@custom-media": [
    "false", 
    "true"
  ], 
  "@font-face": [
    "font-display", 
    "font-family", 
    "font-feature-settings", 
    "font-language-override", 
    "font-named-instance", 
    "font-stretch", 
    "font-style", 
    "font-variant", 
    "font-variation-settings", 
    "font-weight", 
    "src", 
    "unicode-range"
  ], 
  "@font-face/font-display": [
    "auto", 
    "block", 
    "fallback", 
    "optional", 
    "swap"
  ], 
  "@font-feature-values": [
    "font-display"
  ], 
  "@font-palette-values": [
    "base-palette", 
    "font-family", 
    "override-color"
  ], 
  "@media": [
    "all", 
    "any-hover", 
    "any-pointer", 
    "aspect-ratio", 
    "aural", 
    "braille", 
    "color", 
    "color-gamut", 
    "color-index", 
    "device-aspect-ratio", 
    "device-height", 
    "device-width", 
    "embossed", 
    "environment-blending", 
    "forced-colors", 
    "grid", 
    "handheld", 
    "height", 
    "hover", 
    "inverted-colors", 
    "light-level", 
    "monochrome", 
    "not", 
    "only", 
    "orientation", 
    "overflow-block", 
    "overflow-inline", 
    "pointer", 
    "prefers-color-scheme", 
    "prefers-contrast", 
    "prefers-reduced-motion", 
    "prefers-reduced-transparency", 
    "print", 
    "projection", 
    "resolution", 
    "scan", 
    "screen", 
    "scripting", 
    "shape", 
    "speech", 
    "tty", 
    "tv", 
    "update", 
    "width"
  ], 
  "@media/color-gamut": [
    "p3", 
    "rec2020", 
    "srgb"
  ], 
  "@media/environment-blending": [
    "additive", 
    "opaque", 
    "subtractive"
  ], 
  "@media/hover": [
    "hover", 
    "none"
  ], 
  "@media/inverted-colors": [
    "inverted", 
    "none"
  ], 
  "@media/light-level": [
    "dim", 
    "normal", 
    "washed"
  ], 
  "@media/orientation": [
    "landscape", 
    "portrait"
  ], 
  "@media/overflow-block": [
    "none", 
    "optional-paged", 
    "paged", 
    "scroll"
  ], 
  "@media/overflow-inline": [
    "none", 
    "scroll"
  ], 
  "@media/pointer": [
    "coarse", 
    "fine", 
    "none"
  ], 
  "@media/prefers-color-scheme": [
    "active", 
    "dark", 
    "light", 
    "no-preference", 
    "none"
  ], 
  "@media/prefers-contrast": [
    "high", 
    "low", 
    "no-preference"
  ], 
  "@media/prefers-reduced-motion": [
    "no-preference", 
    "reduce"
  ], 
  "@media/prefers-reduced-transparency": [
    "no-preference", 
    "reduce"
  ], 
  "@media/resolution": [
    "infinite"
  ], 
  "@media/scan": [
    "interlace", 
    "progressive"
  ], 
  "@media/scripting": [
    "enabled", 
    "initial-only", 
    "none"
  ], 
  "@media/shape": [
    "rect", 
    "round"
  ], 
  "@media/update": [
    "fast", 
    "none", 
    "slow"
  ], 
  "@page": [
    ":blank", 
    ":first", 
    ":left", 
    ":right", 
    "bleed", 
    "marks", 
    "size"
  ], 
  "@page/bleed": [
    "<length>", 
    "auto"
  ], 
  "@page/marks": [
    "crop", 
    "cross", 
    "none"
  ], 
  "@page/size": [
    "<length>", 
    "<page-size>", 
    "auto", 
    "landscape", 
    "portrait"
  ], 
  "@viewport": [
    "height", 
    "max-height", 
    "max-width", 
    "max-zoom", 
    "min-height", 
    "min-width", 
    "min-zoom", 
    "orientation", 
    "user-zoom", 
    "viewport-fit", 
    "width", 
    "zoom"
  ], 
  "AbortController": [
    "AbortController()", 
    "abort()", 
    "signal"
  ], 
  "AbortSignal": [
    "abort algorithms", 
    "aborted", 
    "aborted flag", 
    "add", 
    "follow", 
    "onabort", 
    "remove", 
    "signal abort"
  ], 
  "AbstractRange": [
    "collapsed", 
    "endContainer", 
    "endOffset", 
    "startContainer", 
    "startOffset"
  ], 
  "AbstractWorker": [
    "error"
  ], 
  "AddEventListenerOptions": [
    "once", 
    "passive"
  ], 
  "AllowedBluetoothDevice": [
    "[[device]]", 
    "allowedServices", 
    "deviceId", 
    "mayUseGATT"
  ], 
  "AllowedUSBDevice": [
    "[[devices]]", 
    "productId", 
    "serialNumber", 
    "vendorId"
  ], 
  "Animatable": [
    "animate(keyframes, options)", 
    "getAnimations()", 
    "getAnimations(options)"
  ], 
  "Animatable/animate(keyframes, options)": [
    "keyframes", 
    "options"
  ], 
  "Animatable/getAnimations(options)": [
    "options"
  ], 
  "Animation": [
    "Animation(effect, timeline)", 
    "cancel()", 
    "commitStyles()", 
    "currentTime", 
    "effect", 
    "finish()", 
    "finished", 
    "id", 
    "oncancel", 
    "onfinish", 
    "onremove", 
    "pause()", 
    "pending", 
    "persist()", 
    "play()", 
    "playState", 
    "playbackRate", 
    "ready", 
    "replaceState", 
    "reverse()", 
    "startTime", 
    "timeline", 
    "updatePlaybackRate(playbackRate)"
  ], 
  "Animation/Animation(effect, timeline)": [
    "effect", 
    "timeline"
  ], 
  "Animation/updatePlaybackRate(playbackRate)": [
    "playbackRate"
  ], 
  "AnimationEffect": [
    "getComputedTiming()", 
    "getTiming()", 
    "localTime", 
    "updateTiming()", 
    "updateTiming(timing)"
  ], 
  "AnimationEffect/updateTiming(timing)": [
    "timing"
  ], 
  "AnimationEvent": [
    "AnimationEvent(type)", 
    "AnimationEvent(type, animationEventInitDict)", 
    "Constructor", 
    "animationName", 
    "elapsedTime", 
    "pseudoElement"
  ], 
  "AnimationEvent/AnimationEvent(type, animationEventInitDict)": [
    "animationEventInitDict", 
    "type"
  ], 
  "AnimationEventInit": [
    "animationName", 
    "elapsedTime", 
    "pseudoElement"
  ], 
  "AnimationFrameProvider": [
    "requestAnimationFrame(callback)"
  ], 
  "AnimationPlayState": [
    "\"finished\"", 
    "\"idle\"", 
    "\"paused\"", 
    "\"running\""
  ], 
  "AnimationPlaybackEvent": [
    "AnimationPlaybackEvent(type, eventInitDict)", 
    "currentTime", 
    "timelineTime"
  ], 
  "AnimationPlaybackEvent/AnimationPlaybackEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "AnimationPlaybackEventInit": [
    "currentTime", 
    "timelineTime"
  ], 
  "AnimationReplaceState": [
    "\"active\"", 
    "\"persisted\"", 
    "\"removed\""
  ], 
  "AnimationTimeline": [
    "currentTime"
  ], 
  "AnimationWorkletGlobalScope": [
    "registerAnimator(name, animatorCtor)"
  ], 
  "AnimationWorkletGlobalScope/registerAnimator(name, animatorCtor)": [
    "animatorCtor", 
    "name"
  ], 
  "AnimatorInstanceConstructor": [
    "options", 
    "state"
  ], 
  "ApplicationCache": [
    "CHECKING", 
    "DOWNLOADING", 
    "IDLE", 
    "OBSOLETE", 
    "UNCACHED", 
    "UPDATEREADY", 
    "abort()", 
    "error", 
    "status", 
    "swapCache()", 
    "update()"
  ], 
  "ArrayBuffer": [
    "detach"
  ], 
  "AttestationConveyancePreference": [
    "direct", 
    "indirect", 
    "none"
  ], 
  "Attr": [
    "element", 
    "isId", 
    "local name", 
    "localName", 
    "name", 
    "namespace", 
    "namespace prefix", 
    "namespaceURI", 
    "ownerElement", 
    "prefix", 
    "qualified name", 
    "reflect", 
    "schemaTypeInfo", 
    "specified", 
    "value"
  ], 
  "AudioTrack": [
    "AudioTrack.enabled", 
    "AudioTrack.id", 
    "AudioTrack.kind", 
    "AudioTrack.label", 
    "AudioTrack.language"
  ], 
  "AudioTrackList": [
    "AudioTrackList.getTrackById(id)", 
    "AudioTrackList.length"
  ], 
  "AuthenticationExtensionsClientInputs": [
    "appid", 
    "authnSel", 
    "credProps", 
    "exts", 
    "loc", 
    "txAuthGeneric", 
    "txAuthSimple", 
    "uvi", 
    "uvm"
  ], 
  "AuthenticationExtensionsClientOutputs": [
    "appid", 
    "authnSel", 
    "credProps", 
    "exts", 
    "loc", 
    "txAuthGeneric", 
    "txAuthSimple", 
    "uvi", 
    "uvm"
  ], 
  "AuthenticatorAssertionResponse": [
    "authenticatorData", 
    "signature", 
    "userHandle"
  ], 
  "AuthenticatorAttachment": [
    "cross-platform", 
    "platform"
  ], 
  "AuthenticatorAttestationResponse": [
    "[[transports]]", 
    "attestationObject", 
    "getTransports", 
    "getTransports()"
  ], 
  "AuthenticatorResponse": [
    "clientDataJSON"
  ], 
  "AuthenticatorSelectionCriteria": [
    "authenticatorAttachment", 
    "requireResidentKey", 
    "residentKey", 
    "userVerification"
  ], 
  "AuthenticatorTransport": [
    "ble", 
    "internal", 
    "nfc", 
    "usb"
  ], 
  "BarProp": [
    "visible"
  ], 
  "BaseComputedKeyframe": [
    "composite", 
    "computedOffset", 
    "easing", 
    "offset"
  ], 
  "BaseKeyframe": [
    "composite", 
    "easing", 
    "offset"
  ], 
  "BasePropertyIndexedKeyframe": [
    "composite", 
    "easing", 
    "offset"
  ], 
  "Baseline": [
    "name", 
    "value"
  ], 
  "BeforeInstallPromptEvent": [
    "[[didprompt]]", 
    "[[userresponsepromise]]", 
    "request to present an install prompt"
  ], 
  "BeforeUnloadEvent": [
    "returnValue"
  ], 
  "Blob": [
    "Blob()", 
    "Blob(blobParts)", 
    "Blob(blobParts, options)", 
    "Constructor", 
    "arrayBuffer()", 
    "get stream", 
    "package data", 
    "size", 
    "slice()", 
    "slice(start, end, contentType), slice(start, end), slice(start), slice()", 
    "snapshot state", 
    "stream()", 
    "text()", 
    "type"
  ], 
  "Blob/Blob(blobParts, options)": [
    "blobParts", 
    "options"
  ], 
  "Blob/slice(start, end, contentType)": [
    "contentType", 
    "end", 
    "start"
  ], 
  "BlobCallback": [
    "blob"
  ], 
  "BlobPropertyBag": [
    "endings", 
    "type"
  ], 
  "BlockFragmentationType": [
    "\"column\"", 
    "\"none\"", 
    "\"page\"", 
    "\"region\"", 
    "column", 
    "none", 
    "page", 
    "region"
  ], 
  "Bluetooth": [
    "[[attributeInstanceMap]]", 
    "[[deviceInstanceMap]]", 
    "[[referringDevice]]", 
    "availabilitychanged", 
    "getAvailability()", 
    "onavailabilitychanged", 
    "referringDevice", 
    "requestDevice(options)"
  ], 
  "Bluetooth/requestDevice()": [
    "options"
  ], 
  "Bluetooth/requestDevice(options)": [
    "options"
  ], 
  "BluetoothAdvertisingEvent": [
    "BluetoothAdvertisingEvent(type, init)", 
    "appearance", 
    "device", 
    "manufacturerData", 
    "name", 
    "rssi", 
    "serviceData", 
    "txPower", 
    "uuids"
  ], 
  "BluetoothAdvertisingEvent/BluetoothAdvertisingEvent(type, init)": [
    "init", 
    "type"
  ], 
  "BluetoothAdvertisingEventInit": [
    "appearance", 
    "device", 
    "manufacturerData", 
    "name", 
    "rssi", 
    "serviceData", 
    "txPower", 
    "uuids"
  ], 
  "BluetoothCharacteristicProperties": [
    "authenticatedSignedWrites", 
    "broadcast", 
    "indicate", 
    "notify", 
    "read", 
    "reliableWrite", 
    "writableAuxiliaries", 
    "write", 
    "writeWithoutResponse"
  ], 
  "BluetoothDataFilterInit": [
    "canonicalizing", 
    "dataPrefix", 
    "mask", 
    "matches"
  ], 
  "BluetoothDevice": [
    "[[allowedServices]]", 
    "[[context]]", 
    "[[gatt]]", 
    "[[representedDevice]]", 
    "advertisementreceived", 
    "gatt", 
    "gattserverdisconnected", 
    "id", 
    "name", 
    "unwatchAdvertisements()", 
    "watchAdvertisements()", 
    "watchingAdvertisements"
  ], 
  "BluetoothDeviceEventHandlers": [
    "onadvertisementreceived", 
    "ongattserverdisconnected"
  ], 
  "BluetoothLEScanFilterInit": [
    "canonicalizing", 
    "manufacturerData", 
    "name", 
    "namePrefix", 
    "serviceData", 
    "services"
  ], 
  "BluetoothManufacturerDataMap": [
    "[[BackingMap]]"
  ], 
  "BluetoothPermissionData": [
    "allowedDevices"
  ], 
  "BluetoothPermissionDescriptor": [
    "acceptAllDevices", 
    "deviceId", 
    "filters", 
    "optionalServices"
  ], 
  "BluetoothPermissionResult": [
    "devices"
  ], 
  "BluetoothRemoteGATTCharacteristic": [
    "[[representedCharacteristic]]", 
    "characteristicvaluechanged", 
    "getDescriptor(descriptor)", 
    "getDescriptors(descriptor)", 
    "properties", 
    "readValue()", 
    "service", 
    "startNotifications()", 
    "stopNotifications()", 
    "uuid", 
    "value", 
    "writeValue(value)", 
    "writeValueWithResponse(value)", 
    "writeValueWithoutResponse(value)"
  ], 
  "BluetoothRemoteGATTCharacteristic/getDescriptor(descriptor)": [
    "descriptor"
  ], 
  "BluetoothRemoteGATTCharacteristic/getDescriptors()": [
    "descriptor"
  ], 
  "BluetoothRemoteGATTCharacteristic/getDescriptors(descriptor)": [
    "descriptor"
  ], 
  "BluetoothRemoteGATTCharacteristic/writeValue(value)": [
    "value"
  ], 
  "BluetoothRemoteGATTCharacteristic/writeValueWithResponse(value)": [
    "value"
  ], 
  "BluetoothRemoteGATTCharacteristic/writeValueWithoutResponse(value)": [
    "value"
  ], 
  "BluetoothRemoteGATTDescriptor": [
    "[[representedDescriptor]]", 
    "characteristic", 
    "readValue()", 
    "uuid", 
    "value", 
    "writeValue(value)"
  ], 
  "BluetoothRemoteGATTDescriptor/writeValue(value)": [
    "value"
  ], 
  "BluetoothRemoteGATTServer": [
    "[[activeAlgorithms]]", 
    "connect()", 
    "connected", 
    "device", 
    "disconnect()", 
    "getPrimaryService(service)", 
    "getPrimaryServices()", 
    "getPrimaryServices(service)"
  ], 
  "BluetoothRemoteGATTServer/getPrimaryService(service)": [
    "service"
  ], 
  "BluetoothRemoteGATTServer/getPrimaryServices()": [
    "service"
  ], 
  "BluetoothRemoteGATTServer/getPrimaryServices(service)": [
    "service"
  ], 
  "BluetoothRemoteGATTService": [
    "[[representedService]]", 
    "device", 
    "getCharacteristic(characteristic)", 
    "getCharacteristics(characteristic)", 
    "getIncludedService(service)", 
    "getIncludedServices(service)", 
    "isPrimary", 
    "serviceadded", 
    "servicechanged", 
    "serviceremoved", 
    "uuid"
  ], 
  "BluetoothRemoteGATTService/getCharacteristic(characteristic)": [
    "characteristic"
  ], 
  "BluetoothRemoteGATTService/getCharacteristics()": [
    "characteristic"
  ], 
  "BluetoothRemoteGATTService/getCharacteristics(characteristic)": [
    "characteristic"
  ], 
  "BluetoothRemoteGATTService/getIncludedService(service)": [
    "service"
  ], 
  "BluetoothRemoteGATTService/getIncludedServices()": [
    "service"
  ], 
  "BluetoothRemoteGATTService/getIncludedServices(service)": [
    "service"
  ], 
  "BluetoothServiceDataMap": [
    "[[BackingMap]]"
  ], 
  "BluetoothUUID": [
    "canonicalUUID(alias)", 
    "getCharacteristic(name)", 
    "getDescriptor(name)", 
    "getService(name)"
  ], 
  "BluetoothUUID/canonicalUUID(alias)": [
    "alias"
  ], 
  "BluetoothUUID/getCharacteristic(name)": [
    "name"
  ], 
  "BluetoothUUID/getDescriptor(name)": [
    "name"
  ], 
  "BluetoothUUID/getService(name)": [
    "name"
  ], 
  "Body": [
    "arrayBuffer()", 
    "blob()", 
    "body", 
    "bodyUsed", 
    "consume body", 
    "disturbed", 
    "formData()", 
    "json()", 
    "locked", 
    "mime type", 
    "package data", 
    "text()"
  ], 
  "BodyInit": [
    "extract", 
    "safely extract"
  ], 
  "BoxQuadOptions": [
    "box", 
    "relativeTo"
  ], 
  "BreakToken": [
    "childBreakTokens", 
    "data"
  ], 
  "BreakTokenOptions": [
    "childBreakTokens", 
    "data"
  ], 
  "BreakType": [
    "\"column\"", 
    "\"line\"", 
    "\"none\"", 
    "\"page\"", 
    "\"region\"", 
    "column", 
    "line", 
    "none", 
    "page", 
    "region"
  ], 
  "BroadcastChannel": [
    "close()", 
    "message", 
    "messageerror", 
    "name", 
    "postMessage(message)"
  ], 
  "ByteLengthQueuingStrategy": [
    "ByteLengthQueuingStrategy(options)", 
    "size(chunk)"
  ], 
  "CSPViolationReportBody": [
    "blockedURL", 
    "columnNumber", 
    "disposition", 
    "documentURL", 
    "effectiveDirective", 
    "lineNumber", 
    "originalPolicy", 
    "referrer", 
    "sample", 
    "sourceFile", 
    "statusCode"
  ], 
  "CSS": [
    "Hz", 
    "Hz(value)", 
    "Q", 
    "Q(value)", 
    "animationWorklet", 
    "anonymous", 
    "anonymous box", 
    "at-rule", 
    "box", 
    "box tree", 
    "ch", 
    "ch(value)", 
    "cm", 
    "cm(value)", 
    "component value", 
    "declaration", 
    "deg", 
    "deg(value)", 
    "dpcm", 
    "dpcm(value)", 
    "dpi", 
    "dpi(value)", 
    "dppx", 
    "dppx(value)", 
    "element", 
    "element tree", 
    "elementSources", 
    "em", 
    "em(value)", 
    "environment variable", 
    "escape(ident)", 
    "ex", 
    "ex(value)", 
    "fr", 
    "fr(value)", 
    "function", 
    "grad", 
    "grad(value)", 
    "ic", 
    "ic(value)", 
    "in", 
    "in(value)", 
    "kHz", 
    "kHz(value)", 
    "layoutWorklet", 
    "lh", 
    "lh(value)", 
    "mm", 
    "mm(value)", 
    "ms", 
    "ms(value)", 
    "number", 
    "number(value)", 
    "paintWorklet", 
    "parent box", 
    "parse", 
    "parse something according to a css grammar", 
    "pc", 
    "pc(value)", 
    "percent", 
    "percent(value)", 
    "preserved tokens", 
    "pt", 
    "pt(value)", 
    "px", 
    "px(value)", 
    "qualified rule", 
    "rad", 
    "rad(value)", 
    "registerProperty(PropertyDescriptor descriptor)", 
    "registerProperty(descriptor)", 
    "reification", 
    "reify", 
    "rem", 
    "rem(value)", 
    "rlh", 
    "rlh(value)", 
    "s", 
    "s(value)", 
    "simple block", 
    "support", 
    "support a css selector", 
    "supported syntax component name", 
    "supports", 
    "supports(conditionText)", 
    "supports(property, value)", 
    "text node", 
    "text run", 
    "turn", 
    "turn(value)", 
    "underlying values", 
    "unregisterProperty(DOMString name)", 
    "unregisterProperty(name)", 
    "value definition syntax", 
    "vb", 
    "vb(value)", 
    "vh", 
    "vh(value)", 
    "vi", 
    "vi(value)", 
    "vmax", 
    "vmax(value)", 
    "vmin", 
    "vmin(value)", 
    "vw", 
    "vw(value)"
  ], 
  "CSS declaration": [
    "case-sensitive flag", 
    "important flag", 
    "property name", 
    "value"
  ], 
  "CSS/Hz(value)": [
    "value"
  ], 
  "CSS/Q(value)": [
    "value"
  ], 
  "CSS/ch(value)": [
    "value"
  ], 
  "CSS/cm(value)": [
    "value"
  ], 
  "CSS/deg(value)": [
    "value"
  ], 
  "CSS/dpcm(value)": [
    "value"
  ], 
  "CSS/dpi(value)": [
    "value"
  ], 
  "CSS/dppx(value)": [
    "value"
  ], 
  "CSS/em(value)": [
    "value"
  ], 
  "CSS/escape(ident)": [
    "ident"
  ], 
  "CSS/ex(value)": [
    "value"
  ], 
  "CSS/fr(value)": [
    "value"
  ], 
  "CSS/grad(value)": [
    "value"
  ], 
  "CSS/ic(value)": [
    "value"
  ], 
  "CSS/in(value)": [
    "value"
  ], 
  "CSS/kHz(value)": [
    "value"
  ], 
  "CSS/lh(value)": [
    "value"
  ], 
  "CSS/mm(value)": [
    "value"
  ], 
  "CSS/ms(value)": [
    "value"
  ], 
  "CSS/number(value)": [
    "value"
  ], 
  "CSS/pc(value)": [
    "value"
  ], 
  "CSS/percent(value)": [
    "value"
  ], 
  "CSS/pt(value)": [
    "value"
  ], 
  "CSS/px(value)": [
    "value"
  ], 
  "CSS/rad(value)": [
    "value"
  ], 
  "CSS/registerProperty(descriptor)": [
    "descriptor"
  ], 
  "CSS/rem(value)": [
    "value"
  ], 
  "CSS/rlh(value)": [
    "value"
  ], 
  "CSS/s(value)": [
    "value"
  ], 
  "CSS/supports(conditionText)": [
    "conditionText"
  ], 
  "CSS/supports(property, value)": [
    "property", 
    "value"
  ], 
  "CSS/turn(value)": [
    "value"
  ], 
  "CSS/unregisterProperty(name)": [
    "name"
  ], 
  "CSS/vb(value)": [
    "value"
  ], 
  "CSS/vh(value)": [
    "value"
  ], 
  "CSS/vi(value)": [
    "value"
  ], 
  "CSS/vmax(value)": [
    "value"
  ], 
  "CSS/vmin(value)": [
    "value"
  ], 
  "CSS/vw(value)": [
    "value"
  ], 
  "CSSAnimation": [
    "CSSAnimation(target, animationName)", 
    "CSSAnimation(target, animationName, options)", 
    "CSSAnimation(target, animationName, options, defaultEasing)", 
    "CSSAnimation(target, animationName, options, defaultEasing, timeline)", 
    "Constructor", 
    "animationName"
  ], 
  "CSSAnimation/CSSAnimation(target, animationName, options, defaultEasing)": [
    "animationName", 
    "defaultEasing", 
    "options", 
    "target"
  ], 
  "CSSAnimation/CSSAnimation(target, animationName, options, defaultEasing, timeline)": [
    "animationName", 
    "defaultEasing", 
    "options", 
    "target", 
    "timeline"
  ], 
  "CSSBoxType": [
    "\"border\"", 
    "\"content\"", 
    "\"margin\"", 
    "\"padding\""
  ], 
  "CSSConditionRule": [
    "conditionText"
  ], 
  "CSSCounterStyleRule": [
    "additiveSymbols", 
    "fallback", 
    "name", 
    "negative", 
    "pad", 
    "prefix", 
    "range", 
    "speakAs", 
    "suffix", 
    "symbols", 
    "system"
  ], 
  "CSSFontFaceLoadEvent": [
    "fontfaces"
  ], 
  "CSSFontFaceLoadEvent/CSSFontFaceLoadEvent()": [
    "eventInitDict", 
    "type"
  ], 
  "CSSFontFaceLoadEventInit": [
    "fontfaces"
  ], 
  "CSSFontFaceRule": [
    "style"
  ], 
  "CSSFontFeatureValuesMap": [
    "set", 
    "set(featureValueName, values)"
  ], 
  "CSSFontFeatureValuesMap/set(featureValueName, values)": [
    "featureValueName", 
    "values"
  ], 
  "CSSFontFeatureValuesRule": [
    "annotation", 
    "characterVariant", 
    "fontFamily", 
    "ornaments", 
    "styleset", 
    "stylistic", 
    "swash"
  ], 
  "CSSFontPaletteValuesRule": [
    "basePalette", 
    "fontFamily"
  ], 
  "CSSGroupingRule": [
    "cssRules", 
    "deleteRule", 
    "deleteRule(index)", 
    "insertRule", 
    "insertRule(rule)", 
    "insertRule(rule, index)", 
    "media", 
    "selectorText", 
    "style"
  ], 
  "CSSGroupingRule/deleteRule(index)": [
    "index"
  ], 
  "CSSGroupingRule/insertRule(rule)": [
    "index", 
    "rule"
  ], 
  "CSSGroupingRule/insertRule(rule, index)": [
    "index", 
    "rule"
  ], 
  "CSSImportRule": [
    "href", 
    "media", 
    "styleSheet"
  ], 
  "CSSKeyframeEffectReadOnly": [
    "CSSKeyframeEffectReadOnly(keyframesName, defaultEasing)", 
    "Constructor", 
    "defaultEasing", 
    "keyframesName"
  ], 
  "CSSKeyframeEffectReadOnly/CSSKeyframeEffectReadOnly(keyframesName, defaultEasing)": [
    "defaultEasing", 
    "keyframesName"
  ], 
  "CSSKeyframeRule": [
    "keyText", 
    "style"
  ], 
  "CSSKeyframesRule": [
    "appendRule", 
    "appendRule(rule)", 
    "cssRules", 
    "deleteRule", 
    "deleteRule(select)", 
    "findRule", 
    "findRule(select)", 
    "name"
  ], 
  "CSSKeyframesRule/appendRule(rule)": [
    "rule"
  ], 
  "CSSKeyframesRule/deleteRule(select)": [
    "select"
  ], 
  "CSSKeyframesRule/findRule(select)": [
    "select"
  ], 
  "CSSKeywordValue": [
    "CSSKeywordValue(value)", 
    "value"
  ], 
  "CSSKeywordValue/CSSKeywordValue(value)": [
    "value"
  ], 
  "CSSMarginRule": [
    "name", 
    "style"
  ], 
  "CSSMath": [
    "invert", 
    "invert a cssnumericvalue", 
    "negate", 
    "negate a cssnumericvalue"
  ], 
  "CSSMathClamp": [
    "CSSMathClamp(min, val, max)", 
    "max", 
    "min", 
    "operator", 
    "val"
  ], 
  "CSSMathClamp/CSSMathClamp(min, val, max)": [
    "max", 
    "min", 
    "val"
  ], 
  "CSSMathInvert": [
    "CSSMathInvert(arg)", 
    "operator", 
    "value"
  ], 
  "CSSMathInvert/CSSMathInvert(arg)": [
    "arg"
  ], 
  "CSSMathMax": [
    "CSSMathMax(...args)", 
    "operator", 
    "values"
  ], 
  "CSSMathMax/CSSMathMax(args)": [
    "args"
  ], 
  "CSSMathMin": [
    "CSSMathMin(...args)", 
    "operator", 
    "values"
  ], 
  "CSSMathMin/CSSMathMin(args)": [
    "args"
  ], 
  "CSSMathNegate": [
    "CSSMathNegate(arg)", 
    "operator", 
    "value"
  ], 
  "CSSMathNegate/CSSMathNegate(arg)": [
    "arg"
  ], 
  "CSSMathOperator": [
    "\"clamp\"", 
    "\"invert\"", 
    "\"max\"", 
    "\"min\"", 
    "\"negate\"", 
    "\"product\"", 
    "\"sum\"", 
    "invert", 
    "max", 
    "min", 
    "negate", 
    "product", 
    "sum"
  ], 
  "CSSMathProduct": [
    "CSSMathProduct(...args)", 
    "operator", 
    "values"
  ], 
  "CSSMathProduct/CSSMathProduct(args)": [
    "args"
  ], 
  "CSSMathSum": [
    "CSSMathSum(...args)", 
    "operator", 
    "values"
  ], 
  "CSSMathSum/CSSMathSum(args)": [
    "args"
  ], 
  "CSSMathValue": [
    "operator"
  ], 
  "CSSMatrixComponent": [
    "CSSMatrixComponent(matrix, options)", 
    "matrix"
  ], 
  "CSSMatrixComponent/CSSMatrixComponent(matrix, options)": [
    "matrix", 
    "options"
  ], 
  "CSSMatrixComponentOptions": [
    "is2D"
  ], 
  "CSSMediaRule": [
    "media"
  ], 
  "CSSNamespaceRule": [
    "namespaceURI", 
    "prefix"
  ], 
  "CSSNumericArray": [
    "indexed getter", 
    "indexed property getter", 
    "length"
  ], 
  "CSSNumericArray/__getter__(index)": [
    "index"
  ], 
  "CSSNumericBaseType": [
    "\"angle\"", 
    "\"flex\"", 
    "\"frequency\"", 
    "\"length\"", 
    "\"percent\"", 
    "\"resolution\"", 
    "\"time\"", 
    "angle", 
    "flex", 
    "frequency", 
    "length", 
    "percent", 
    "resolution", 
    "time"
  ], 
  "CSSNumericType": [
    "angle", 
    "flex", 
    "frequency", 
    "length", 
    "percent", 
    "percentHint", 
    "resolution", 
    "time"
  ], 
  "CSSNumericValue": [
    "add two types", 
    "add(...values)", 
    "base type", 
    "create a type", 
    "creating a type", 
    "div(...values)", 
    "equals(...values)", 
    "invert a type", 
    "match", 
    "max(...values)", 
    "min(...values)", 
    "mul(...values)", 
    "multiply two types", 
    "parse(cssText)", 
    "percent hint", 
    "sub(...values)", 
    "sum value", 
    "to(unit)", 
    "toSum(...units)", 
    "type", 
    "type()"
  ], 
  "CSSNumericValue/add(...values)": [
    "values"
  ], 
  "CSSNumericValue/div(...values)": [
    "values"
  ], 
  "CSSNumericValue/equals(...value)": [
    "value"
  ], 
  "CSSNumericValue/max(...values)": [
    "values"
  ], 
  "CSSNumericValue/min(...values)": [
    "values"
  ], 
  "CSSNumericValue/mul(...values)": [
    "values"
  ], 
  "CSSNumericValue/parse(cssText)": [
    "cssText"
  ], 
  "CSSNumericValue/sub(...values)": [
    "values"
  ], 
  "CSSNumericValue/to(unit)": [
    "unit"
  ], 
  "CSSNumericValue/toSum(...units)": [
    "units"
  ], 
  "CSSPageRule": [
    "selectorText", 
    "style"
  ], 
  "CSSPerspective": [
    "CSSPerspective(length)", 
    "is2D", 
    "length"
  ], 
  "CSSPerspective/CSSPerspective(length)": [
    "length"
  ], 
  "CSSPositionValue": [
    "CSSPositionValue(x, y)", 
    "x", 
    "y"
  ], 
  "CSSPositionValue/CSSPositionValue(x, y)": [
    "x", 
    "y"
  ], 
  "CSSPseudoElement": [
    "element", 
    "type"
  ], 
  "CSSRotate": [
    "CSSRotate(angle)", 
    "CSSRotate(x, y, z, angle)", 
    "angle", 
    "x", 
    "y", 
    "z"
  ], 
  "CSSRotate/CSSRotate(angle)": [
    "angle"
  ], 
  "CSSRotate/CSSRotate(x, y, z, angle)": [
    "angle", 
    "x", 
    "y", 
    "z"
  ], 
  "CSSRule": [
    "CHARSET_RULE", 
    "COUNTER_STYLE_RULE", 
    "FONT_FACE_RULE", 
    "FONT_FEATURE_VALUES_RULE", 
    "FONT_PALETTE_VALUES_RULE", 
    "IMPORT_RULE", 
    "KEYFRAMES_RULE", 
    "KEYFRAME_RULE", 
    "MARGIN_RULE", 
    "MEDIA_RULE", 
    "NAMESPACE_RULE", 
    "PAGE_RULE", 
    "STYLE_RULE", 
    "SUPPORTS_RULE", 
    "VIEWPORT_RULE", 
    "child css rules", 
    "cssText", 
    "parent css rule", 
    "parent css style sheet", 
    "parentRule", 
    "parentStyleSheet", 
    "text", 
    "type"
  ], 
  "CSSRuleList": [
    "item(index)", 
    "length"
  ], 
  "CSSRuleList/item(index)": [
    "index"
  ], 
  "CSSScale": [
    "CSSScale(x, y, z)", 
    "x", 
    "y", 
    "z"
  ], 
  "CSSScale/CSSScale(x, y, z)": [
    "x", 
    "y", 
    "z"
  ], 
  "CSSSkew": [
    "CSSSkew(ax, ay)", 
    "ax", 
    "ay", 
    "is2D"
  ], 
  "CSSSkew/CSSSkew(ax, ay)": [
    "ax", 
    "ay"
  ], 
  "CSSSkewX": [
    "CSSSkewX(ax)", 
    "ax", 
    "is2D"
  ], 
  "CSSSkewX/CSSSkewX(ax)": [
    "ax"
  ], 
  "CSSSkewY": [
    "CSSSkewY(ay)", 
    "ay", 
    "is2D"
  ], 
  "CSSSkewY/CSSSkewY(ay)": [
    "ay"
  ], 
  "CSSStyleDeclaration": [
    "_camel_cased_attribute", 
    "_dashed_attribute", 
    "_webkit_cased_attribute", 
    "camel-cased attribute", 
    "cssFloat", 
    "cssText", 
    "dashed attribute", 
    "declarations", 
    "getPropertyPriority(property)", 
    "getPropertyValue(property)", 
    "item(index)", 
    "length", 
    "owner node", 
    "parent css rule", 
    "parentRule", 
    "readonly flag", 
    "removeProperty(property)", 
    "setProperty(property, value)", 
    "setProperty(property, value, priority)", 
    "setPropertyPriority(property, priority)", 
    "setPropertyValue(property, value)", 
    "updating flag", 
    "webkit-cased attribute"
  ], 
  "CSSStyleDeclaration/getPropertyPriority(property)": [
    "property"
  ], 
  "CSSStyleDeclaration/getPropertyValue(property)": [
    "property"
  ], 
  "CSSStyleDeclaration/item(index)": [
    "index"
  ], 
  "CSSStyleDeclaration/removeProperty(property)": [
    "property"
  ], 
  "CSSStyleDeclaration/setProperty(property, value)": [
    "priority", 
    "property", 
    "value"
  ], 
  "CSSStyleDeclaration/setProperty(property, value, priority)": [
    "priority", 
    "property", 
    "value"
  ], 
  "CSSStyleDeclaration/setPropertyPriority(property, priority)": [
    "priority", 
    "property"
  ], 
  "CSSStyleDeclaration/setPropertyValue(property, value)": [
    "property", 
    "value"
  ], 
  "CSSStyleRule": [
    "selectorText", 
    "style", 
    "styleMap"
  ], 
  "CSSStyleSheet": [
    "addRule(selector, block, optionalIndex)", 
    "alternate flag", 
    "css rules", 
    "cssRules", 
    "deleteRule(index)", 
    "disabled flag", 
    "insertRule(rule)", 
    "insertRule(rule, index)", 
    "location", 
    "media", 
    "origin-clean flag", 
    "owner css rule", 
    "owner node", 
    "ownerRule", 
    "parent css style sheet", 
    "referrer policy", 
    "removeRule()", 
    "removeRule(index)", 
    "rules", 
    "title", 
    "type"
  ], 
  "CSSStyleSheet/addRule()": [
    "index", 
    "selector", 
    "style"
  ], 
  "CSSStyleSheet/addRule(selector)": [
    "index", 
    "selector", 
    "style"
  ], 
  "CSSStyleSheet/addRule(selector, style)": [
    "index", 
    "selector", 
    "style"
  ], 
  "CSSStyleSheet/addRule(selector, style, index)": [
    "index", 
    "selector", 
    "style"
  ], 
  "CSSStyleSheet/deleteRule(index)": [
    "index"
  ], 
  "CSSStyleSheet/insertRule(rule)": [
    "index", 
    "rule"
  ], 
  "CSSStyleSheet/insertRule(rule, index)": [
    "index", 
    "rule"
  ], 
  "CSSStyleSheet/removeRule()": [
    "index"
  ], 
  "CSSStyleSheet/removeRule(index)": [
    "index"
  ], 
  "CSSStyleValue": [
    "[[associatedProperty]]", 
    "match a grammar", 
    "parse(property, cssText)", 
    "parseAll(property, cssText)", 
    "stringification behavior"
  ], 
  "CSSStyleValue/parse(property, cssText)": [
    "cssText", 
    "property"
  ], 
  "CSSStyleValue/parseAll(property, cssText)": [
    "cssText", 
    "property"
  ], 
  "CSSTransformComponent": [
    "is2D", 
    "stringification behavior", 
    "toMatrix()"
  ], 
  "CSSTransformValue": [
    "CSSTransformValue(transforms)", 
    "[[values]]", 
    "is2D", 
    "length", 
    "toMatrix()"
  ], 
  "CSSTransformValue/CSSTransformValue(transforms)": [
    "transforms"
  ], 
  "CSSTransformValue/__getter__(index)": [
    "index"
  ], 
  "CSSTransformValue/__setter__(index, val)": [
    "index", 
    "val"
  ], 
  "CSSTransition": [
    "CSSTransition(target, transitionProperty, transitionValue)", 
    "CSSTransition(target, transitionProperty, transitionValue, options)", 
    "CSSTransition(target, transitionProperty, transitionValue, options, timeline)", 
    "Constructor", 
    "transitionProperty"
  ], 
  "CSSTransition/CSSTransition(target, transitionProperty, transitionValue, options)": [
    "options", 
    "target", 
    "transitionProperty", 
    "transitionValue"
  ], 
  "CSSTransition/CSSTransition(target, transitionProperty, transitionValue, options, timeline)": [
    "options", 
    "target", 
    "timeline", 
    "transitionProperty", 
    "transitionValue"
  ], 
  "CSSTranslate": [
    "CSSTranslate(x, y, z)", 
    "x", 
    "y", 
    "z"
  ], 
  "CSSTranslate/CSSTranslate(x, y, z)": [
    "x", 
    "y", 
    "z"
  ], 
  "CSSUnitValue": [
    "CSSUnitValue(value, unit)", 
    "unit", 
    "value"
  ], 
  "CSSUnitValue/CSSUnitValue(value, unit)": [
    "unit", 
    "value"
  ], 
  "CSSUnparsedValue": [
    "CSSUnparsedValue(members)", 
    "Constructor", 
    "[[tokens]]", 
    "length"
  ], 
  "CSSUnparsedValue/CSSUnparsedValue(members)": [
    "members"
  ], 
  "CSSUnparsedValue/__getter__(index)": [
    "index"
  ], 
  "CSSUnparsedValue/__setter__(index, val)": [
    "index", 
    "val"
  ], 
  "CSSVariableReferenceValue": [
    "CSSVariableReferenceValue(variable, fallback)", 
    "fallback", 
    "variable"
  ], 
  "CSSVariableReferenceValue/CSSVariableReferenceValue(variable, fallback)": [
    "fallback", 
    "variable"
  ], 
  "CSSViewportRule": [
    "style"
  ], 
  "Cache": [
    "add(request)", 
    "addAll(requests)", 
    "delete(request)", 
    "delete(request, options)", 
    "keys()", 
    "keys(request)", 
    "keys(request, options)", 
    "match(request)", 
    "match(request, options)", 
    "matchAll()", 
    "matchAll(request)", 
    "matchAll(request, options)", 
    "put(request, response)"
  ], 
  "Cache/add(request)": [
    "request"
  ], 
  "Cache/addAll(requests)": [
    "requests"
  ], 
  "Cache/delete(request)": [
    "options", 
    "request"
  ], 
  "Cache/delete(request, options)": [
    "options", 
    "request"
  ], 
  "Cache/keys()": [
    "options", 
    "request"
  ], 
  "Cache/keys(request)": [
    "options", 
    "request"
  ], 
  "Cache/keys(request, options)": [
    "options", 
    "request"
  ], 
  "Cache/match(request)": [
    "options", 
    "request"
  ], 
  "Cache/match(request, options)": [
    "options", 
    "request"
  ], 
  "Cache/matchAll()": [
    "options", 
    "request"
  ], 
  "Cache/matchAll(request)": [
    "options", 
    "request"
  ], 
  "Cache/matchAll(request, options)": [
    "options", 
    "request"
  ], 
  "Cache/put(request, response)": [
    "request", 
    "response"
  ], 
  "CacheQueryOptions": [
    "cacheName", 
    "ignoreMethod", 
    "ignoreSearch", 
    "ignoreVary"
  ], 
  "CacheStorage": [
    "delete(cacheName)", 
    "global object", 
    "has(cacheName)", 
    "keys()", 
    "match(request)", 
    "match(request, options)", 
    "open(cacheName)"
  ], 
  "CacheStorage/delete(cacheName)": [
    "cacheName"
  ], 
  "CacheStorage/has(cacheName)": [
    "cacheName"
  ], 
  "CacheStorage/match(request)": [
    "options", 
    "request"
  ], 
  "CacheStorage/match(request, options)": [
    "options", 
    "request"
  ], 
  "CacheStorage/open(cacheName)": [
    "cacheName"
  ], 
  "CanvasDrawImage": [
    "drawImage", 
    "drawImage(image, dx, dy, dw, dh)", 
    "drawImage(image, sx, sy, sw, sh, dx, dy, dw, dh)"
  ], 
  "CanvasDrawPath": [
    "beginPath()", 
    "clip()", 
    "fill()", 
    "isPointInPath()", 
    "isPointInStroke()", 
    "stroke()"
  ], 
  "CanvasFillStrokeStyles": [
    "createLinearGradient(x0, y0, x1, y1)", 
    "createPattern(image, repetition)", 
    "createRadialGradient(x0, y0, r0, x1, y1, r1)"
  ], 
  "CanvasGradient": [
    "addColorStop(offset, color)"
  ], 
  "CanvasImageData": [
    "createImageData()", 
    "getImageData(sx, sy, sw, sh)", 
    "putImageData()"
  ], 
  "CanvasPath": [
    "arc(x, y, radius, startAngle, endAngle)", 
    "arcTo(x1, y1, x2, y2, radius)", 
    "bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)", 
    "closePath()", 
    "ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle)", 
    "lineTo(x, y)", 
    "moveTo(x, y)", 
    "quadraticCurveTo(cpx, cpy, x, y)", 
    "rect(x, y, w, h)"
  ], 
  "CanvasPathDrawingStyles": [
    "getLineDash()", 
    "setLineDash()"
  ], 
  "CanvasPattern": [
    "setTransform()", 
    "setTransform(a, b, c, d, e, f)"
  ], 
  "CanvasRect": [
    "clearRect(x, y, w, h)", 
    "fillRect(x, y, w, h)", 
    "strokeRect(x, y, w, h)"
  ], 
  "CanvasRenderingContext2D": [
    "canvas", 
    "getContextAttributes()"
  ], 
  "CanvasRenderingContext2DSettings": [
    "alpha", 
    "desynchronized"
  ], 
  "CanvasState": [
    "restore()", 
    "save()"
  ], 
  "CanvasText": [
    "fillText()", 
    "measureText()", 
    "strokeText()"
  ], 
  "CanvasTransform": [
    "getTransform()", 
    "resetTransform()", 
    "rotate(angle)", 
    "scale(x, y)", 
    "transform(a, b, c, d, e, f)", 
    "translate(x, y)"
  ], 
  "CanvasUserInterface": [
    "drawFocusIfNeeded(element)", 
    "scrollPathIntoView()"
  ], 
  "CaretPosition": [
    "getClientRect()", 
    "offset", 
    "offsetNode"
  ], 
  "CharacterData": [
    "appendData(data)", 
    "data", 
    "deleteData(offset, count)", 
    "insertData(offset, data)", 
    "length", 
    "replaceData(offset, count, data)", 
    "substring data", 
    "substringData(offset, count)"
  ], 
  "CharacterData/appendData(data)": [
    "data"
  ], 
  "CharacterData/deleteData(offset, count)": [
    "count", 
    "offset"
  ], 
  "CharacterData/insertData(offset, data)": [
    "data", 
    "offset"
  ], 
  "CharacterData/replaceData(offset, count, data)": [
    "count", 
    "data", 
    "offset"
  ], 
  "CharacterData/substringData(offset, count)": [
    "count", 
    "offset"
  ], 
  "CharacteristicEventHandlers": [
    "oncharacteristicvaluechanged"
  ], 
  "ChildBreakToken": [
    "[[unique id]]", 
    "breakType", 
    "child"
  ], 
  "ChildDisplayType": [
    "\"block\"", 
    "\"normal\"", 
    "block", 
    "normal"
  ], 
  "ChildNode": [
    "after(...nodes)", 
    "after(nodes)", 
    "before(...nodes)", 
    "before(nodes)", 
    "remove()", 
    "replaceWith(...nodes)", 
    "replaceWith(nodes)"
  ], 
  "ChildNode/after(...nodes)": [
    "nodes"
  ], 
  "ChildNode/before(...nodes)": [
    "nodes"
  ], 
  "ChildNode/replaceWith(...nodes)": [
    "nodes"
  ], 
  "Client": [
    "frame type", 
    "frameType", 
    "id", 
    "postMessage(message)", 
    "postMessage(message, options)", 
    "postMessage(message, transfer)", 
    "reserved", 
    "reserved state", 
    "service worker client", 
    "type", 
    "url"
  ], 
  "Client/postMessage(message)": [
    "message", 
    "options", 
    "transfer"
  ], 
  "Client/postMessage(message, options)": [
    "message", 
    "options"
  ], 
  "Client/postMessage(message, transfer)": [
    "message", 
    "transfer"
  ], 
  "ClientQueryOptions": [
    "includeReserved", 
    "includeUncontrolled", 
    "type"
  ], 
  "ClientType": [
    "\"all\"", 
    "\"sharedworker\"", 
    "\"window\"", 
    "\"worker\"", 
    "all", 
    "sharedworker", 
    "window", 
    "worker"
  ], 
  "Clients": [
    "claim()", 
    "get(id)", 
    "matchAll()", 
    "matchAll(options)", 
    "openWindow(url)"
  ], 
  "Clients/get(id)": [
    "id"
  ], 
  "Clients/matchAll()": [
    "options"
  ], 
  "Clients/matchAll(options)": [
    "options"
  ], 
  "Clients/openWindow(url)": [
    "url"
  ], 
  "CloseEventInit": [
    "code", 
    "reason", 
    "wasClean"
  ], 
  "CollectedClientData": [
    "challenge", 
    "hash of the serialized client data", 
    "json-serialized client data", 
    "origin", 
    "tokenBinding", 
    "type"
  ], 
  "Comment": [
    "Comment(data)", 
    "substring data"
  ], 
  "Comment/Comment(data)": [
    "data"
  ], 
  "CompositeOperation": [
    "accumulate", 
    "add", 
    "replace"
  ], 
  "CompositeOperationOrAuto": [
    "accumulate", 
    "add", 
    "auto", 
    "replace"
  ], 
  "CompositionEvent": [
    "CompositionEvent(type)", 
    "CompositionEvent(type, eventInitDict)", 
    "Constructor", 
    "data", 
    "initCompositionEvent()"
  ], 
  "CompositionEvent/CompositionEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "CompositionEventInit": [
    "data"
  ], 
  "ComputedEffectTiming": [
    "activeDuration", 
    "currentIteration", 
    "endTime", 
    "localTime", 
    "progress"
  ], 
  "ConvertCoordinateOptions": [
    "fromBox", 
    "toBox"
  ], 
  "CountQueuingStrategy": [
    "CountQueuingStrategy(options)", 
    "size()"
  ], 
  "CrashReportBody": [
    "reason"
  ], 
  "CreateCred-AuthnrSuccess": [
    "indicates success"
  ], 
  "Credential": [
    "[[CollectFromCredentialStore]](origin, options, sameOriginWithAncestors)", 
    "[[Create]](origin, options, sameOriginWithAncestors)", 
    "[[DiscoverFromExternalSource]](origin, options, sameOriginWithAncestors)", 
    "[[Store]](credential, sameOriginWithAncestors)", 
    "[[discovery]]", 
    "[[origin]]", 
    "[[type]]", 
    "credential type", 
    "id", 
    "origin bound", 
    "type"
  ], 
  "Credential/[[discovery]]": [
    "credential store", 
    "remote"
  ], 
  "Credential/[[type]]": [
    "password"
  ], 
  "CredentialCreationOptions": [
    "federated", 
    "password", 
    "publicKey", 
    "signal"
  ], 
  "CredentialData": [
    "id"
  ], 
  "CredentialMediationRequirement": [
    "optional", 
    "required", 
    "silent"
  ], 
  "CredentialPropertiesOutput": [
    "rk"
  ], 
  "CredentialRequestOptions": [
    "federated", 
    "matchable a priori", 
    "mediation", 
    "password", 
    "publicKey", 
    "relevant credential interface objects", 
    "signal"
  ], 
  "CredentialUserData": [
    "iconURL", 
    "name"
  ], 
  "CredentialsContainer": [
    "create()", 
    "create(options)", 
    "get()", 
    "get(options)", 
    "preventSilentAccess()", 
    "store()", 
    "store(credential)"
  ], 
  "CredentialsContainer/create(options)": [
    "options"
  ], 
  "CredentialsContainer/get(options)": [
    "options"
  ], 
  "CredentialsContainer/store(credential)": [
    "credential"
  ], 
  "CustomElementRegistry": [
    "define(name, constructor)", 
    "get(name)", 
    "upgrade(root)", 
    "whenDefined(name)"
  ], 
  "CustomEvent": [
    "Constructor", 
    "CustomEvent(type)", 
    "CustomEvent(type, eventInitDict)", 
    "detail", 
    "initCustomEvent(type)", 
    "initCustomEvent(type, bubbles)", 
    "initCustomEvent(type, bubbles, cancelable)", 
    "initCustomEvent(type, bubbles, cancelable, detail)"
  ], 
  "CustomEvent/CustomEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "CustomEvent/initCustomEvent(type)": [
    "bubbles", 
    "cancelable", 
    "detail", 
    "type"
  ], 
  "CustomEvent/initCustomEvent(type, bubbles)": [
    "bubbles", 
    "cancelable", 
    "detail", 
    "type"
  ], 
  "CustomEvent/initCustomEvent(type, bubbles, cancelable)": [
    "bubbles", 
    "cancelable", 
    "detail", 
    "type"
  ], 
  "CustomEvent/initCustomEvent(type, bubbles, cancelable, detail)": [
    "bubbles", 
    "cancelable", 
    "detail", 
    "type"
  ], 
  "CustomEventInit": [
    "detail"
  ], 
  "DOMException": [
    "ABORT_ERR", 
    "DATA_CLONE_ERR", 
    "DOMException(message, name)", 
    "DOMSTRING_SIZE_ERR", 
    "HIERARCHY_REQUEST_ERR", 
    "INDEX_SIZE_ERR", 
    "INUSE_ATTRIBUTE_ERR", 
    "INVALID_ACCESS_ERR", 
    "INVALID_CHARACTER_ERR", 
    "INVALID_MODIFICATION_ERR", 
    "INVALID_NODE_TYPE_ERR", 
    "INVALID_STATE_ERR", 
    "NAMESPACE_ERR", 
    "NETWORK_ERR", 
    "NOT_FOUND_ERR", 
    "NOT_SUPPORTED_ERR", 
    "NO_DATA_ALLOWED_ERR", 
    "NO_MODIFICATION_ALLOWED_ERR", 
    "QUOTA_EXCEEDED_ERR", 
    "SECURITY_ERR", 
    "SYNTAX_ERR", 
    "TIMEOUT_ERR", 
    "TYPE_MISMATCH_ERR", 
    "URL_MISMATCH_ERR", 
    "VALIDATION_ERR", 
    "WRONG_DOCUMENT_ERR", 
    "code", 
    "message", 
    "name"
  ], 
  "DOMException/DOMException(message, name)": [
    "message", 
    "name"
  ], 
  "DOMImplementation": [
    "createDocument(namespace, qualifiedName)", 
    "createDocument(namespace, qualifiedName, doctype)", 
    "createDocumentType(qualifiedName, publicId, systemId)", 
    "createHTMLDocument()", 
    "createHTMLDocument(title)", 
    "getFeature()", 
    "hasFeature()"
  ], 
  "DOMImplementation/createDocument(namespace, qualifiedName)": [
    "doctype", 
    "namespace", 
    "qualifiedName"
  ], 
  "DOMImplementation/createDocument(namespace, qualifiedName, doctype)": [
    "doctype", 
    "namespace", 
    "qualifiedName"
  ], 
  "DOMImplementation/createDocumentType(qualifiedName, publicId, systemId)": [
    "publicId", 
    "qualifiedName", 
    "systemId"
  ], 
  "DOMImplementation/createHTMLDocument()": [
    "title"
  ], 
  "DOMImplementation/createHTMLDocument(title)": [
    "title"
  ], 
  "DOMMatrix": [
    "DOMMatrix(init)", 
    "a", 
    "b", 
    "c", 
    "d", 
    "e", 
    "f", 
    "fromFloat32Array(array32)", 
    "fromFloat64Array(array64)", 
    "fromMatrix()", 
    "invertSelf()", 
    "m11", 
    "m12", 
    "m13", 
    "m14", 
    "m21", 
    "m22", 
    "m23", 
    "m24", 
    "m31", 
    "m32", 
    "m33", 
    "m34", 
    "m41", 
    "m42", 
    "m43", 
    "m44", 
    "multiplySelf()", 
    "multiplySelf(other)", 
    "preMultiplySelf()", 
    "preMultiplySelf(other)", 
    "rotateAxisAngleSelf()", 
    "rotateAxisAngleSelf(x)", 
    "rotateAxisAngleSelf(x, y)", 
    "rotateAxisAngleSelf(x, y, z)", 
    "rotateAxisAngleSelf(x, y, z, angle)", 
    "rotateFromVectorSelf()", 
    "rotateFromVectorSelf(x)", 
    "rotateFromVectorSelf(x, y)", 
    "rotateSelf()", 
    "rotateSelf(rotX)", 
    "rotateSelf(rotX, rotY)", 
    "rotateSelf(rotX, rotY, rotZ)", 
    "scale3dSelf()", 
    "scale3dSelf(scale)", 
    "scale3dSelf(scale, originX)", 
    "scale3dSelf(scale, originX, originY)", 
    "scale3dSelf(scale, originX, originY, originZ)", 
    "scaleSelf()", 
    "scaleSelf(scaleX)", 
    "scaleSelf(scaleX, scaleY)", 
    "scaleSelf(scaleX, scaleY, scaleZ)", 
    "scaleSelf(scaleX, scaleY, scaleZ, originX)", 
    "scaleSelf(scaleX, scaleY, scaleZ, originX, originY)", 
    "scaleSelf(scaleX, scaleY, scaleZ, originX, originY, originZ)", 
    "setMatrixValue(transformList)", 
    "skewXSelf()", 
    "skewXSelf(sx)", 
    "skewYSelf()", 
    "skewYSelf(sy)", 
    "translateSelf()", 
    "translateSelf(tx)", 
    "translateSelf(tx, ty)", 
    "translateSelf(tx, ty, tz)"
  ], 
  "DOMMatrix/DOMMatrix(init)": [
    "init"
  ], 
  "DOMMatrix/fromFloat32Array(array32)": [
    "array32"
  ], 
  "DOMMatrix/fromFloat64Array(array64)": [
    "array64"
  ], 
  "DOMMatrix/fromMatrix()": [
    "other"
  ], 
  "DOMMatrix/fromMatrix(other)": [
    "other"
  ], 
  "DOMMatrix/multiplySelf()": [
    "other"
  ], 
  "DOMMatrix/multiplySelf(other)": [
    "other"
  ], 
  "DOMMatrix/preMultiplySelf()": [
    "other"
  ], 
  "DOMMatrix/preMultiplySelf(other)": [
    "other"
  ], 
  "DOMMatrix/rotateAxisAngleSelf()": [
    "angle", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMMatrix/rotateAxisAngleSelf(x)": [
    "angle", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMMatrix/rotateAxisAngleSelf(x, y)": [
    "angle", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMMatrix/rotateAxisAngleSelf(x, y, z)": [
    "angle", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMMatrix/rotateAxisAngleSelf(x, y, z, angle)": [
    "angle", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMMatrix/rotateFromVectorSelf()": [
    "x", 
    "y"
  ], 
  "DOMMatrix/rotateFromVectorSelf(x)": [
    "x", 
    "y"
  ], 
  "DOMMatrix/rotateFromVectorSelf(x, y)": [
    "x", 
    "y"
  ], 
  "DOMMatrix/rotateSelf()": [
    "rotX", 
    "rotY", 
    "rotZ"
  ], 
  "DOMMatrix/rotateSelf(rotX)": [
    "rotX", 
    "rotY", 
    "rotZ"
  ], 
  "DOMMatrix/rotateSelf(rotX, rotY)": [
    "rotX", 
    "rotY", 
    "rotZ"
  ], 
  "DOMMatrix/rotateSelf(rotX, rotY, rotZ)": [
    "rotX", 
    "rotY", 
    "rotZ"
  ], 
  "DOMMatrix/scale3dSelf()": [
    "originX", 
    "originY", 
    "originZ", 
    "scale"
  ], 
  "DOMMatrix/scale3dSelf(scale)": [
    "originX", 
    "originY", 
    "originZ", 
    "scale"
  ], 
  "DOMMatrix/scale3dSelf(scale, originX)": [
    "originX", 
    "originY", 
    "originZ", 
    "scale"
  ], 
  "DOMMatrix/scale3dSelf(scale, originX, originY)": [
    "originX", 
    "originY", 
    "originZ", 
    "scale"
  ], 
  "DOMMatrix/scale3dSelf(scale, originX, originY, originZ)": [
    "originX", 
    "originY", 
    "originZ", 
    "scale"
  ], 
  "DOMMatrix/scaleSelf()": [
    "originX", 
    "originY", 
    "originZ", 
    "scaleX", 
    "scaleY", 
    "scaleZ"
  ], 
  "DOMMatrix/scaleSelf(scaleX)": [
    "originX", 
    "originY", 
    "originZ", 
    "scaleX", 
    "scaleY", 
    "scaleZ"
  ], 
  "DOMMatrix/scaleSelf(scaleX, scaleY)": [
    "originX", 
    "originY", 
    "originZ", 
    "scaleX", 
    "scaleY", 
    "scaleZ"
  ], 
  "DOMMatrix/scaleSelf(scaleX, scaleY, scaleZ)": [
    "originX", 
    "originY", 
    "originZ", 
    "scaleX", 
    "scaleY", 
    "scaleZ"
  ], 
  "DOMMatrix/scaleSelf(scaleX, scaleY, scaleZ, originX)": [
    "originX", 
    "originY", 
    "originZ", 
    "scaleX", 
    "scaleY", 
    "scaleZ"
  ], 
  "DOMMatrix/scaleSelf(scaleX, scaleY, scaleZ, originX, originY)": [
    "originX", 
    "originY", 
    "originZ", 
    "scaleX", 
    "scaleY", 
    "scaleZ"
  ], 
  "DOMMatrix/scaleSelf(scaleX, scaleY, scaleZ, originX, originY, originZ)": [
    "originX", 
    "originY", 
    "originZ", 
    "scaleX", 
    "scaleY", 
    "scaleZ"
  ], 
  "DOMMatrix/setMatrixValue(transformList)": [
    "transformList"
  ], 
  "DOMMatrix/skewXSelf()": [
    "sx"
  ], 
  "DOMMatrix/skewXSelf(sx)": [
    "sx"
  ], 
  "DOMMatrix/skewYSelf()": [
    "sy"
  ], 
  "DOMMatrix/skewYSelf(sy)": [
    "sy"
  ], 
  "DOMMatrix/translateSelf()": [
    "tx", 
    "ty", 
    "tz"
  ], 
  "DOMMatrix/translateSelf(tx)": [
    "tx", 
    "ty", 
    "tz"
  ], 
  "DOMMatrix/translateSelf(tx, ty)": [
    "tx", 
    "ty", 
    "tz"
  ], 
  "DOMMatrix/translateSelf(tx, ty, tz)": [
    "tx", 
    "ty", 
    "tz"
  ], 
  "DOMMatrix2DInit": [
    "a", 
    "b", 
    "c", 
    "d", 
    "e", 
    "f", 
    "m11", 
    "m12", 
    "m21", 
    "m22", 
    "m41", 
    "m42"
  ], 
  "DOMMatrixInit": [
    "is2D", 
    "m13", 
    "m14", 
    "m23", 
    "m24", 
    "m31", 
    "m32", 
    "m33", 
    "m34", 
    "m43", 
    "m44"
  ], 
  "DOMMatrixReadOnly": [
    "DOMMatrixReadOnly(init)", 
    "a", 
    "b", 
    "c", 
    "d", 
    "e", 
    "f", 
    "flipX()", 
    "flipY()", 
    "fromFloat32Array(array32)", 
    "fromFloat64Array(array64)", 
    "fromMatrix()", 
    "inverse()", 
    "is2D", 
    "isIdentity", 
    "m11", 
    "m12", 
    "m13", 
    "m14", 
    "m21", 
    "m22", 
    "m23", 
    "m24", 
    "m31", 
    "m32", 
    "m33", 
    "m34", 
    "m41", 
    "m42", 
    "m43", 
    "m44", 
    "multiply()", 
    "multiply(other)", 
    "rotate()", 
    "rotate(rotX)", 
    "rotate(rotX, rotY)", 
    "rotate(rotX, rotY, rotZ)", 
    "rotateAxisAngle()", 
    "rotateAxisAngle(x)", 
    "rotateAxisAngle(x, y)", 
    "rotateAxisAngle(x, y, z)", 
    "rotateAxisAngle(x, y, z, angle)", 
    "rotateFromVector()", 
    "rotateFromVector(x)", 
    "rotateFromVector(x, y)", 
    "scale()", 
    "scale(scaleX)", 
    "scale(scaleX, scaleY)", 
    "scale(scaleX, scaleY, scaleZ)", 
    "scale(scaleX, scaleY, scaleZ, originX)", 
    "scale(scaleX, scaleY, scaleZ, originX, originY)", 
    "scale(scaleX, scaleY, scaleZ, originX, originY, originZ)", 
    "scale3d()", 
    "scale3d(scale)", 
    "scale3d(scale, originX)", 
    "scale3d(scale, originX, originY)", 
    "scale3d(scale, originX, originY, originZ)", 
    "scaleNonUniform()", 
    "scaleNonUniform(scaleX)", 
    "scaleNonUniform(scaleX, scaleY)", 
    "skewX()", 
    "skewX(sx)", 
    "skewY()", 
    "skewY(sy)", 
    "stringification behavior", 
    "toFloat32Array()", 
    "toFloat64Array()", 
    "toJSON", 
    "toJSON()", 
    "transformPoint()", 
    "transformPoint(point)", 
    "translate()", 
    "translate(tx)", 
    "translate(tx, ty)", 
    "translate(tx, ty, tz)"
  ], 
  "DOMMatrixReadOnly/DOMMatrixReadOnly(init)": [
    "init"
  ], 
  "DOMMatrixReadOnly/fromFloat32Array(array32)": [
    "array32"
  ], 
  "DOMMatrixReadOnly/fromFloat64Array(array64)": [
    "array64"
  ], 
  "DOMMatrixReadOnly/fromMatrix()": [
    "other"
  ], 
  "DOMMatrixReadOnly/fromMatrix(other)": [
    "other"
  ], 
  "DOMMatrixReadOnly/multiply()": [
    "other"
  ], 
  "DOMMatrixReadOnly/multiply(other)": [
    "other"
  ], 
  "DOMMatrixReadOnly/rotate()": [
    "rotX", 
    "rotY", 
    "rotZ"
  ], 
  "DOMMatrixReadOnly/rotate(rotX)": [
    "rotX", 
    "rotY", 
    "rotZ"
  ], 
  "DOMMatrixReadOnly/rotate(rotX, rotY)": [
    "rotX", 
    "rotY", 
    "rotZ"
  ], 
  "DOMMatrixReadOnly/rotate(rotX, rotY, rotZ)": [
    "rotX", 
    "rotY", 
    "rotZ"
  ], 
  "DOMMatrixReadOnly/rotateAxisAngle()": [
    "angle", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMMatrixReadOnly/rotateAxisAngle(x)": [
    "angle", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMMatrixReadOnly/rotateAxisAngle(x, y)": [
    "angle", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMMatrixReadOnly/rotateAxisAngle(x, y, z)": [
    "angle", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMMatrixReadOnly/rotateAxisAngle(x, y, z, angle)": [
    "angle", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMMatrixReadOnly/rotateFromVector()": [
    "x", 
    "y"
  ], 
  "DOMMatrixReadOnly/rotateFromVector(x)": [
    "x", 
    "y"
  ], 
  "DOMMatrixReadOnly/rotateFromVector(x, y)": [
    "x", 
    "y"
  ], 
  "DOMMatrixReadOnly/scale()": [
    "originX", 
    "originY", 
    "originZ", 
    "scaleX", 
    "scaleY", 
    "scaleZ"
  ], 
  "DOMMatrixReadOnly/scale(scaleX)": [
    "originX", 
    "originY", 
    "originZ", 
    "scaleX", 
    "scaleY", 
    "scaleZ"
  ], 
  "DOMMatrixReadOnly/scale(scaleX, scaleY)": [
    "originX", 
    "originY", 
    "originZ", 
    "scaleX", 
    "scaleY", 
    "scaleZ"
  ], 
  "DOMMatrixReadOnly/scale(scaleX, scaleY, scaleZ)": [
    "originX", 
    "originY", 
    "originZ", 
    "scaleX", 
    "scaleY", 
    "scaleZ"
  ], 
  "DOMMatrixReadOnly/scale(scaleX, scaleY, scaleZ, originX)": [
    "originX", 
    "originY", 
    "originZ", 
    "scaleX", 
    "scaleY", 
    "scaleZ"
  ], 
  "DOMMatrixReadOnly/scale(scaleX, scaleY, scaleZ, originX, originY)": [
    "originX", 
    "originY", 
    "originZ", 
    "scaleX", 
    "scaleY", 
    "scaleZ"
  ], 
  "DOMMatrixReadOnly/scale(scaleX, scaleY, scaleZ, originX, originY, originZ)": [
    "originX", 
    "originY", 
    "originZ", 
    "scaleX", 
    "scaleY", 
    "scaleZ"
  ], 
  "DOMMatrixReadOnly/scale3d()": [
    "originX", 
    "originY", 
    "originZ", 
    "scale"
  ], 
  "DOMMatrixReadOnly/scale3d(scale)": [
    "originX", 
    "originY", 
    "originZ", 
    "scale"
  ], 
  "DOMMatrixReadOnly/scale3d(scale, originX)": [
    "originX", 
    "originY", 
    "originZ", 
    "scale"
  ], 
  "DOMMatrixReadOnly/scale3d(scale, originX, originY)": [
    "originX", 
    "originY", 
    "originZ", 
    "scale"
  ], 
  "DOMMatrixReadOnly/scale3d(scale, originX, originY, originZ)": [
    "originX", 
    "originY", 
    "originZ", 
    "scale"
  ], 
  "DOMMatrixReadOnly/scaleNonUniform()": [
    "scaleX", 
    "scaleY"
  ], 
  "DOMMatrixReadOnly/scaleNonUniform(scaleX)": [
    "scaleX", 
    "scaleY"
  ], 
  "DOMMatrixReadOnly/scaleNonUniform(scaleX, scaleY)": [
    "scaleX", 
    "scaleY"
  ], 
  "DOMMatrixReadOnly/skewX()": [
    "sx"
  ], 
  "DOMMatrixReadOnly/skewX(sx)": [
    "sx"
  ], 
  "DOMMatrixReadOnly/skewY()": [
    "sy"
  ], 
  "DOMMatrixReadOnly/skewY(sy)": [
    "sy"
  ], 
  "DOMMatrixReadOnly/transformPoint()": [
    "point"
  ], 
  "DOMMatrixReadOnly/transformPoint(point)": [
    "point"
  ], 
  "DOMMatrixReadOnly/translate()": [
    "tx", 
    "ty", 
    "tz"
  ], 
  "DOMMatrixReadOnly/translate(tx)": [
    "tx", 
    "ty", 
    "tz"
  ], 
  "DOMMatrixReadOnly/translate(tx, ty)": [
    "tx", 
    "ty", 
    "tz"
  ], 
  "DOMMatrixReadOnly/translate(tx, ty, tz)": [
    "tx", 
    "ty", 
    "tz"
  ], 
  "DOMPoint": [
    "DOMPoint(x, y, z, w)", 
    "fromPoint()", 
    "fromPoint(other)", 
    "w", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMPoint/DOMPoint(x, y, z, w)": [
    "w", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMPoint/fromPoint()": [
    "other"
  ], 
  "DOMPoint/fromPoint(other)": [
    "other"
  ], 
  "DOMPointInit": [
    "w", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMPointReadOnly": [
    "DOMPointReadOnly(x, y, z, w)", 
    "fromPoint()", 
    "fromPoint(other)", 
    "matrixTransform()", 
    "matrixTransform(matrix)", 
    "toJSON", 
    "toJSON()", 
    "w", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMPointReadOnly/DOMPointReadOnly(x, y, z, w)": [
    "w", 
    "x", 
    "y", 
    "z"
  ], 
  "DOMPointReadOnly/fromPoint()": [
    "other"
  ], 
  "DOMPointReadOnly/fromPoint(other)": [
    "other"
  ], 
  "DOMPointReadOnly/matrixTransform()": [
    "matrix"
  ], 
  "DOMPointReadOnly/matrixTransform(matrix)": [
    "matrix"
  ], 
  "DOMQuad": [
    "DOMQuad(p1, p2, p3, p4)", 
    "fromQuad()", 
    "fromRect()", 
    "getBounds()", 
    "p1", 
    "p2", 
    "p3", 
    "p4", 
    "toJSON", 
    "toJSON()"
  ], 
  "DOMQuad/DOMQuad(p1, p2, p3, p4)": [
    "p1", 
    "p2", 
    "p3", 
    "p4"
  ], 
  "DOMQuad/fromQuad()": [
    "other"
  ], 
  "DOMQuad/fromQuad(other)": [
    "other"
  ], 
  "DOMQuad/fromRect()": [
    "other"
  ], 
  "DOMQuad/fromRect(other)": [
    "other"
  ], 
  "DOMQuadInit": [
    "p1", 
    "p2", 
    "p3", 
    "p4"
  ], 
  "DOMRect": [
    "DOMRect(x, y, width, height)", 
    "fromRect()", 
    "height", 
    "width", 
    "x", 
    "y"
  ], 
  "DOMRect/DOMRect(x, y, width, height)": [
    "height", 
    "width", 
    "x", 
    "y"
  ], 
  "DOMRect/fromRect()": [
    "other"
  ], 
  "DOMRect/fromRect(other)": [
    "other"
  ], 
  "DOMRectInit": [
    "height", 
    "width", 
    "x", 
    "y"
  ], 
  "DOMRectList": [
    "item(index)", 
    "length"
  ], 
  "DOMRectList/item(index)": [
    "index"
  ], 
  "DOMRectReadOnly": [
    "DOMRectReadOnly(x, y, width, height)", 
    "bottom", 
    "fromRect()", 
    "height", 
    "left", 
    "right", 
    "toJSON", 
    "toJSON()", 
    "top", 
    "width", 
    "x", 
    "y"
  ], 
  "DOMRectReadOnly DOMRect": [
    "bottom", 
    "height", 
    "left", 
    "right", 
    "top", 
    "width", 
    "x", 
    "y"
  ], 
  "DOMRectReadOnly/DOMRectReadOnly(x, y, width, height)": [
    "height", 
    "width", 
    "x", 
    "y"
  ], 
  "DOMRectReadOnly/fromRect()": [
    "other"
  ], 
  "DOMRectReadOnly/fromRect(other)": [
    "other"
  ], 
  "DOMStringList": [
    "contains(string)", 
    "item(index)", 
    "length"
  ], 
  "DOMTokenList": [
    "add()", 
    "add(tokens)", 
    "contains(token)", 
    "item(index)", 
    "length", 
    "remove()", 
    "remove(tokens)", 
    "replace(token, newToken)", 
    "serialize steps", 
    "stringification behavior", 
    "supports(token)", 
    "toggle(token)", 
    "toggle(token, force)", 
    "token set", 
    "update steps", 
    "validation steps", 
    "value"
  ], 
  "DOMTokenList/add(...tokens)": [
    "tokens"
  ], 
  "DOMTokenList/contains(token)": [
    "token"
  ], 
  "DOMTokenList/item(index)": [
    "index"
  ], 
  "DOMTokenList/remove(...tokens)": [
    "tokens"
  ], 
  "DOMTokenList/replace(token, newToken)": [
    "newToken", 
    "token"
  ], 
  "DOMTokenList/supports(token)": [
    "token"
  ], 
  "DOMTokenList/toggle(token)": [
    "force", 
    "token"
  ], 
  "DOMTokenList/toggle(token, force)": [
    "force", 
    "token"
  ], 
  "DataTransfer": [
    "clearData()", 
    "dropEffect", 
    "effectAllowed", 
    "files", 
    "getData(format)", 
    "items", 
    "setData(format, data)", 
    "setDragImage(element, x, y)", 
    "types"
  ], 
  "DataTransferItem": [
    "getAsFile()", 
    "getAsString(callback)", 
    "kind", 
    "type"
  ], 
  "DataTransferItemList": [
    "add()", 
    "clear()", 
    "length", 
    "remove()"
  ], 
  "DeadFragmentInformation": [
    "children", 
    "height", 
    "isOverflowed", 
    "left", 
    "nextInBox", 
    "nextSibling", 
    "node", 
    "previousInBox", 
    "previousSibling", 
    "top", 
    "width"
  ], 
  "DedicatedWorkerGlobalScope": [
    "close()", 
    "message", 
    "messageerror", 
    "name", 
    "postMessage(message)", 
    "postMessage(message, transfer)"
  ], 
  "DeprecationReportBody": [
    "anticipatedRemoval", 
    "anticipatedremoval", 
    "columnNumber", 
    "columnnumber", 
    "id", 
    "lineNumber", 
    "linenumber", 
    "message", 
    "sourceFile", 
    "sourcefile"
  ], 
  "DevicePermissionDescriptor": [
    "deviceId"
  ], 
  "DisplayModeType": [
    "default display mode", 
    "display mode", 
    "display modes values", 
    "display-mode", 
    "fallback display mode"
  ], 
  "Document": [
    "DOMContentLoaded", 
    "Document()", 
    "URL", 
    "activeElement", 
    "adoptNode(node)", 
    "alinkColor", 
    "all", 
    "anchors", 
    "applets", 
    "bgColor", 
    "body", 
    "browsing context", 
    "captureEvents()", 
    "caretPositionFromPoint(x, y)", 
    "characterSet", 
    "charset", 
    "clear()", 
    "compatMode", 
    "content type", 
    "contentType", 
    "cookie", 
    "createAttribute(localName)", 
    "createAttributeNS(namespace, qualifiedName)", 
    "createCDATASection(data)", 
    "createComment(data)", 
    "createDocumentFragment()", 
    "createElement(localName)", 
    "createElement(localName, options)", 
    "createElementNS(namespace, qualifiedName)", 
    "createElementNS(namespace, qualifiedName, options)", 
    "createEntityReference()", 
    "createEvent(interface)", 
    "createNodeIterator(root)", 
    "createNodeIterator(root, whatToShow)", 
    "createNodeIterator(root, whatToShow, filter)", 
    "createProcessingInstruction(target, data)", 
    "createRange()", 
    "createTextNode(data)", 
    "createTreeWalker(root)", 
    "createTreeWalker(root, whatToShow)", 
    "createTreeWalker(root, whatToShow, filter)", 
    "csp list", 
    "currentScript", 
    "defaultView", 
    "doctype", 
    "documentElement", 
    "documentURI", 
    "domConfig", 
    "domain", 
    "elementFromPoint(x, y)", 
    "elementsFromPoint(x, y)", 
    "embeds", 
    "encoding", 
    "exitFullscreen()", 
    "feature policy", 
    "featurePolicy", 
    "fgColor", 
    "forms", 
    "fullscreen", 
    "fullscreenEnabled", 
    "fully active", 
    "getAnimations()", 
    "getElementsByClassName(classNames)", 
    "getElementsByName(name)", 
    "getElementsByTagName(qualifiedName)", 
    "getElementsByTagNameNS(namespace, localName)", 
    "hasFocus()", 
    "head", 
    "https state", 
    "images", 
    "implementation", 
    "importNode(node)", 
    "importNode(node, deep)", 
    "inputEncoding", 
    "lastModified", 
    "layoutNow", 
    "layoutNow()", 
    "linkColor", 
    "links", 
    "measureElement", 
    "measureElement(element)", 
    "measureText", 
    "measureText(text, styleMap)", 
    "mode", 
    "module map", 
    "namedFlows", 
    "normalizeDocument()", 
    "onabort", 
    "onanimationcancel", 
    "onanimationend", 
    "onanimationiteration", 
    "onanimationstart", 
    "onauxclick", 
    "oncancel", 
    "oncanplay", 
    "oncanplaythrough", 
    "onchange", 
    "onclick", 
    "onclose", 
    "oncontextmenu", 
    "oncuechange", 
    "ondblclick", 
    "ondrag", 
    "ondragend", 
    "ondragenter", 
    "ondragexit", 
    "ondragleave", 
    "ondragover", 
    "ondragstart", 
    "ondrop", 
    "ondurationchange", 
    "onemptied", 
    "onended", 
    "onformdata", 
    "onfullscreenchange", 
    "onfullscreenerror", 
    "oninput", 
    "oninvalid", 
    "onkeydown", 
    "onkeypress", 
    "onkeyup", 
    "onloadeddata", 
    "onloadedmetadata", 
    "onloadend", 
    "onloadstart", 
    "onmousedown", 
    "onmouseenter", 
    "onmouseleave", 
    "onmousemove", 
    "onmouseout", 
    "onmouseover", 
    "onmouseup", 
    "onpause", 
    "onplay", 
    "onplaying", 
    "onprogress", 
    "onratechange", 
    "onreadystatechange", 
    "onreset", 
    "onsecuritypolicyviolation", 
    "onseeked", 
    "onseeking", 
    "onselect", 
    "onstalled", 
    "onsubmit", 
    "onsuspend", 
    "ontimeupdate", 
    "ontoggle", 
    "onvolumechange", 
    "onwaiting", 
    "onwheel", 
    "origin", 
    "plugins", 
    "policy object", 
    "queryCommandEnabled()", 
    "queryCommandIndeterm()", 
    "queryCommandState()", 
    "queryCommandSupported()", 
    "queryCommandValue()", 
    "readyState", 
    "readystatechange", 
    "referrer", 
    "referrer policy", 
    "releaseEvents()", 
    "renameNode()", 
    "resizeObservers", 
    "scripts", 
    "scroll", 
    "scrollingElement", 
    "strictErrorChecking", 
    "styleSheets", 
    "timeline", 
    "type", 
    "url", 
    "vlinkColor", 
    "will declaratively refresh", 
    "xmlEncoding", 
    "xmlStandalone", 
    "xmlVersion"
  ], 
  "Document/adoptNode(node)": [
    "node"
  ], 
  "Document/caretPositionFromPoint(x, y)": [
    "x", 
    "y"
  ], 
  "Document/createAttribute(localName)": [
    "localName"
  ], 
  "Document/createAttributeNS(namespace, qualifiedName)": [
    "namespace", 
    "qualifiedName"
  ], 
  "Document/createCDATASection(data)": [
    "data"
  ], 
  "Document/createComment(data)": [
    "data"
  ], 
  "Document/createElement(localName)": [
    "localName", 
    "options"
  ], 
  "Document/createElement(localName, options)": [
    "localName", 
    "options"
  ], 
  "Document/createElementNS(namespace, qualifiedName)": [
    "namespace", 
    "options", 
    "qualifiedName"
  ], 
  "Document/createElementNS(namespace, qualifiedName, options)": [
    "namespace", 
    "options", 
    "qualifiedName"
  ], 
  "Document/createEvent(interface)": [
    "interface"
  ], 
  "Document/createNodeIterator(root)": [
    "filter", 
    "root", 
    "whatToShow"
  ], 
  "Document/createNodeIterator(root, whatToShow)": [
    "filter", 
    "root", 
    "whatToShow"
  ], 
  "Document/createNodeIterator(root, whatToShow, filter)": [
    "filter", 
    "root", 
    "whatToShow"
  ], 
  "Document/createProcessingInstruction(target, data)": [
    "data", 
    "target"
  ], 
  "Document/createTextNode(data)": [
    "data"
  ], 
  "Document/createTreeWalker(root)": [
    "filter", 
    "root", 
    "whatToShow"
  ], 
  "Document/createTreeWalker(root, whatToShow)": [
    "filter", 
    "root", 
    "whatToShow"
  ], 
  "Document/createTreeWalker(root, whatToShow, filter)": [
    "filter", 
    "root", 
    "whatToShow"
  ], 
  "Document/elementFromPoint(x, y)": [
    "x", 
    "y"
  ], 
  "Document/elementsFromPoint(x, y)": [
    "x", 
    "y"
  ], 
  "Document/getElementsByClassName(classNames)": [
    "classNames"
  ], 
  "Document/getElementsByTagName(qualifiedName)": [
    "qualifiedName"
  ], 
  "Document/getElementsByTagNameNS(namespace, localName)": [
    "localName", 
    "namespace"
  ], 
  "Document/importNode(node)": [
    "deep", 
    "node"
  ], 
  "Document/importNode(node, deep)": [
    "deep", 
    "node"
  ], 
  "Document/measureElement(element)": [
    "element"
  ], 
  "Document/measureText(text, styleMap)": [
    "styleMap", 
    "text"
  ], 
  "DocumentFragment": [
    "DocumentFragment()", 
    "host"
  ], 
  "DocumentOrShadowRoot": [
    "document or shadow root css style sheets", 
    "fullscreenElement", 
    "getAnimations()", 
    "styleSheets"
  ], 
  "DocumentTimeline": [
    "DocumentTimeline(options)"
  ], 
  "DocumentTimeline/DocumentTimeline(options)": [
    "options"
  ], 
  "DocumentTimelineOptions": [
    "originTime"
  ], 
  "DocumentType": [
    "entities", 
    "internalSubset", 
    "name", 
    "notations", 
    "public id", 
    "publicId", 
    "system id", 
    "systemId"
  ], 
  "DragEventInit": [
    "dataTransfer"
  ], 
  "ECMAScript": [
    "ecmascript throw"
  ], 
  "EffectTiming": [
    "delay", 
    "direction", 
    "duration", 
    "easing", 
    "endDelay", 
    "fill", 
    "iterationStart", 
    "iterations"
  ], 
  "Element": [
    "[[computedStyleMapCache]]", 
    "attachShadow(init)", 
    "attribute list", 
    "attributes", 
    "class", 
    "classList", 
    "className", 
    "clientHeight", 
    "clientLeft", 
    "clientTop", 
    "clientWidth", 
    "closest(selectors)", 
    "computedStyleMap()", 
    "custom", 
    "custom element definition", 
    "custom element state", 
    "defined", 
    "focusableAreas()", 
    "getAttribute(qualifiedName)", 
    "getAttributeNS(namespace, localName)", 
    "getAttributeNames()", 
    "getAttributeNode(qualifiedName)", 
    "getAttributeNodeNS(namespace, localName)", 
    "getBoundingClientRect()", 
    "getClientRects()", 
    "getElementsByClassName(classNames)", 
    "getElementsByTagName(qualifiedName)", 
    "getElementsByTagNameNS(namespace, localName)", 
    "getFragmentInformation", 
    "getFragmentInformation(filter)", 
    "getSpatialNavigationContainer()", 
    "hasAttribute(qualifiedName)", 
    "hasAttributeNS(namespace, localName)", 
    "hasAttributes()", 
    "html-uppercased qualified name", 
    "id", 
    "insertAdjacentElement(where, element)", 
    "insertAdjacentText(where, data)", 
    "is value", 
    "local name", 
    "localName", 
    "matches(selectors)", 
    "namespace", 
    "namespace prefix", 
    "namespaceURI", 
    "onfullscreenchange", 
    "onfullscreenerror", 
    "part", 
    "prefix", 
    "pseudo(CSSOMString type)", 
    "pseudo(type)", 
    "qualified name", 
    "removeAttribute(qualifiedName)", 
    "removeAttributeNS(namespace, localName)", 
    "removeAttributeNode(attr)", 
    "requestFullscreen()", 
    "requestFullscreen(options)", 
    "schemaTypeInfo", 
    "scroll", 
    "scroll()", 
    "scroll(options)", 
    "scroll(x, y)", 
    "scrollBy()", 
    "scrollBy(options)", 
    "scrollBy(x, y)", 
    "scrollHeight", 
    "scrollIntoView()", 
    "scrollIntoView(arg)", 
    "scrollLeft", 
    "scrollTo()", 
    "scrollTo(options)", 
    "scrollTo(x, y)", 
    "scrollTop", 
    "scrollWidth", 
    "setAttribute(qualifiedName, value)", 
    "setAttributeNS(namespace, qualifiedName, value)", 
    "setAttributeNode(attr)", 
    "setAttributeNodeNS(attr)", 
    "setIdAttribute()", 
    "setIdAttributeNS()", 
    "setIdAttributeNode()", 
    "shadow host", 
    "shadow root", 
    "shadowRoot", 
    "slot", 
    "spatialNavigationSearch(options)", 
    "tagName", 
    "toggleAttribute(qualifiedName)", 
    "toggleAttribute(qualifiedName, force)", 
    "webkitMatchesSelector(selectors)"
  ], 
  "Element/attachShadow(init)": [
    "init"
  ], 
  "Element/closest(selectors)": [
    "selectors"
  ], 
  "Element/focusableAreas()": [
    "option"
  ], 
  "Element/focusableAreas(option)": [
    "option"
  ], 
  "Element/getAttribute(qualifiedName)": [
    "qualifiedName"
  ], 
  "Element/getAttributeNS(namespace, localName)": [
    "localName", 
    "namespace"
  ], 
  "Element/getAttributeNode(qualifiedName)": [
    "qualifiedName"
  ], 
  "Element/getAttributeNodeNS(namespace, localName)": [
    "localName", 
    "namespace"
  ], 
  "Element/getElementsByClassName(classNames)": [
    "classNames"
  ], 
  "Element/getElementsByTagName(qualifiedName)": [
    "qualifiedName"
  ], 
  "Element/getElementsByTagNameNS(namespace, localName)": [
    "localName", 
    "namespace"
  ], 
  "Element/getFragmentInformation(filter)": [
    "filter"
  ], 
  "Element/hasAttribute(qualifiedName)": [
    "qualifiedName"
  ], 
  "Element/hasAttributeNS(namespace, localName)": [
    "localName", 
    "namespace"
  ], 
  "Element/insertAdjacentElement(where, element)": [
    "element", 
    "where"
  ], 
  "Element/insertAdjacentText(where, data)": [
    "data", 
    "where"
  ], 
  "Element/matches(selectors)": [
    "selectors"
  ], 
  "Element/pseudo(type)": [
    "type"
  ], 
  "Element/removeAttribute(qualifiedName)": [
    "qualifiedName"
  ], 
  "Element/removeAttributeNS(namespace, localName)": [
    "localName", 
    "namespace"
  ], 
  "Element/removeAttributeNode(attr)": [
    "attr"
  ], 
  "Element/requestFullscreen()": [
    "options"
  ], 
  "Element/requestFullscreen(options)": [
    "options"
  ], 
  "Element/scroll()": [
    "options"
  ], 
  "Element/scroll(options)": [
    "options"
  ], 
  "Element/scroll(x, y)": [
    "x", 
    "y"
  ], 
  "Element/scrollBy()": [
    "options"
  ], 
  "Element/scrollBy(options)": [
    "options"
  ], 
  "Element/scrollBy(x, y)": [
    "x", 
    "y"
  ], 
  "Element/scrollIntoView()": [
    "arg"
  ], 
  "Element/scrollIntoView(arg)": [
    "arg"
  ], 
  "Element/scrollTo()": [
    "options"
  ], 
  "Element/scrollTo(options)": [
    "options"
  ], 
  "Element/scrollTo(x, y)": [
    "x", 
    "y"
  ], 
  "Element/setAttribute(qualifiedName, value)": [
    "qualifiedName", 
    "value"
  ], 
  "Element/setAttributeNS(namespace, qualifiedName, value)": [
    "namespace", 
    "qualifiedName", 
    "value"
  ], 
  "Element/setAttributeNode(attr)": [
    "attr"
  ], 
  "Element/setAttributeNodeNS(attr)": [
    "attr"
  ], 
  "Element/spatialNavigationSearch(options)": [
    "options"
  ], 
  "Element/toggleAttribute(qualifiedName)": [
    "force", 
    "qualifiedName"
  ], 
  "Element/toggleAttribute(qualifiedName, force)": [
    "force", 
    "qualifiedName"
  ], 
  "Element/webkitMatchesSelector(selectors)": [
    "selectors"
  ], 
  "ElementCSSInlineStyle": [
    "attributeStyleMap", 
    "style"
  ], 
  "ElementContentEditable": [
    "isContentEditable"
  ], 
  "ElementCreationOptions": [
    "is"
  ], 
  "ElementInternals": [
    "setFormValue(value)", 
    "setValidity(flags)", 
    "setValidity(flags, message)", 
    "validationMessage"
  ], 
  "EndingType": [
    "\"native\"", 
    "\"transparent\""
  ], 
  "ErrorEventInit": [
    "colno", 
    "error", 
    "filename", 
    "lineno", 
    "message"
  ], 
  "Event": [
    "AT_TARGET", 
    "BUBBLING_PHASE", 
    "CAPTURING_PHASE", 
    "Constructor", 
    "Event(type)", 
    "Event(type, eventInitDict)", 
    "NONE", 
    "bubbles", 
    "cancelBubble", 
    "cancelable", 
    "canceled flag", 
    "composed", 
    "composed flag", 
    "composedPath()", 
    "constructor", 
    "currentTarget", 
    "defaultPrevented", 
    "dispatch flag", 
    "eventPhase", 
    "flatten", 
    "flatten more", 
    "in passive listener flag", 
    "initEvent(type)", 
    "initEvent(type, bubbles)", 
    "initEvent(type, bubbles, cancelable)", 
    "initialize", 
    "initialized flag", 
    "isTrusted", 
    "path", 
    "preventDefault()", 
    "relatedtarget", 
    "returnValue", 
    "srcElement", 
    "stop immediate propagation flag", 
    "stop propagation flag", 
    "stopImmediatePropagation()", 
    "stopPropagation()", 
    "target", 
    "timeStamp", 
    "touch target list", 
    "type"
  ], 
  "Event/Event(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "Event/initEvent(type)": [
    "bubbles", 
    "cancelable", 
    "type"
  ], 
  "Event/initEvent(type, bubbles)": [
    "bubbles", 
    "cancelable", 
    "type"
  ], 
  "Event/initEvent(type, bubbles, cancelable)": [
    "bubbles", 
    "cancelable", 
    "type"
  ], 
  "Event/path": [
    "invocation target", 
    "invocation-target-in-shadow-tree", 
    "relatedtarget", 
    "root-of-closed-tree", 
    "shadow-adjusted target", 
    "slot-in-closed-tree", 
    "touch target list"
  ], 
  "EventInit": [
    "bubbles", 
    "cancelable", 
    "composed"
  ], 
  "EventListener": [
    "handleEvent", 
    "handleEvent(event)"
  ], 
  "EventListener/handleEvent(event)": [
    "event"
  ], 
  "EventListenerOptions": [
    "capture"
  ], 
  "EventModifierInit": [
    "altKey", 
    "ctrlKey", 
    "metaKey", 
    "modifierAltGraph", 
    "modifierCapsLock", 
    "modifierFn", 
    "modifierFnLock", 
    "modifierHyper", 
    "modifierNumLock", 
    "modifierScrollLock", 
    "modifierSuper", 
    "modifierSymbol", 
    "modifierSymbolLock", 
    "shiftKey"
  ], 
  "EventSource": [
    "CLOSED", 
    "CONNECTING", 
    "OPEN", 
    "close()", 
    "error", 
    "message", 
    "open", 
    "readyState", 
    "url"
  ], 
  "EventSourceInit": [
    "withCredentials"
  ], 
  "EventTarget": [
    "EventTarget()", 
    "activation behavior", 
    "addEventListener(type, callback)", 
    "addEventListener(type, callback, options)", 
    "dispatchEvent(event)", 
    "event listener list", 
    "legacy-canceled-activation behavior", 
    "legacy-pre-activation behavior", 
    "removeEventListener(type, callback)", 
    "removeEventListener(type, callback, options)"
  ], 
  "EventTarget/addEventListener(type, callback)": [
    "callback", 
    "options", 
    "type"
  ], 
  "EventTarget/addEventListener(type, callback, options)": [
    "callback", 
    "options", 
    "type"
  ], 
  "EventTarget/dispatchEvent(event)": [
    "event"
  ], 
  "EventTarget/removeEventListener(type, callback)": [
    "callback", 
    "options", 
    "type"
  ], 
  "EventTarget/removeEventListener(type, callback, options)": [
    "callback", 
    "options", 
    "type"
  ], 
  "ExtendableEvent": [
    "Constructor", 
    "ExtendableEvent(type)", 
    "ExtendableEvent(type, eventInitDict)", 
    "active", 
    "extend lifetime promises", 
    "pending promises count", 
    "timed out flag", 
    "waitUntil(f)"
  ], 
  "ExtendableEvent/ExtendableEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "ExtendableEvent/waitUntil(f)": [
    "f"
  ], 
  "ExtendableMessageEvent": [
    "Constructor", 
    "ExtendableMessageEvent(type)", 
    "ExtendableMessageEvent(type, eventInitDict)", 
    "data", 
    "lastEventId", 
    "origin", 
    "ports", 
    "source"
  ], 
  "ExtendableMessageEvent/ExtendableMessageEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "ExtendableMessageEventInit": [
    "data", 
    "lastEventId", 
    "origin", 
    "ports", 
    "source"
  ], 
  "External": [
    "AddSearchProvider()", 
    "IsSearchProviderInstalled()"
  ], 
  "ExternalApplicationResource": [
    "processing the url member of an application"
  ], 
  "FakeWorkletGlobalScope": [
    "registerAnArbitaryClass(type, classConstructor)"
  ], 
  "FakeWorkletGlobalScope/registerAnArbitaryClass(type, classConstructor)": [
    "classConstructor", 
    "type"
  ], 
  "FeaturePolicy": [
    "allowedFeatures", 
    "allowedFeatures()", 
    "allowsFeature", 
    "allowsFeature(feature)", 
    "allowsFeature(feature, origin)", 
    "features", 
    "features()", 
    "getAllowlistForFeature", 
    "getAllowlistForFeature(feature)"
  ], 
  "FeaturePolicy/allowsFeature(feature)": [
    "feature", 
    "origin"
  ], 
  "FeaturePolicy/allowsFeature(feature, origin)": [
    "feature", 
    "origin"
  ], 
  "FeaturePolicy/getAllowlistForFeature(feature)": [
    "feature"
  ], 
  "FeaturePolicyViolationReportBody": [
    "columnNumber", 
    "columnnumber", 
    "disposition", 
    "featureId", 
    "featureid", 
    "lineNumber", 
    "linenumber", 
    "sourceFile", 
    "sourcefile"
  ], 
  "FederatedCredential": [
    "FederatedCredential(data)", 
    "[[CollectFromCredentialStore]](origin, options, sameOriginWithAncestors)", 
    "[[Create]](origin, options, sameOriginWithAncestors)", 
    "[[Store]](credential, sameOriginWithAncestors)", 
    "federated", 
    "protocol", 
    "provider"
  ], 
  "FederatedCredential/FederatedCredential(data)": [
    "data"
  ], 
  "FederatedCredentialInit": [
    "iconURL", 
    "name", 
    "origin", 
    "protocol", 
    "provider"
  ], 
  "FederatedCredentialRequestOptions": [
    "protocols", 
    "providers"
  ], 
  "FetchEvent": [
    "Constructor", 
    "FetchEvent(type, eventInitDict)", 
    "clientId", 
    "potential response", 
    "preloadResponse", 
    "replacesClientId", 
    "request", 
    "reservedClientId", 
    "respond-with entered flag", 
    "respond-with error flag", 
    "respondWith(r)", 
    "resultingClientId", 
    "targetClientId", 
    "wait to respond flag"
  ], 
  "FetchEvent/FetchEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "FetchEvent/respondWith(r)": [
    "r"
  ], 
  "FetchEventInit": [
    "clientId", 
    "preloadResponse", 
    "replacesClientId", 
    "request", 
    "reservedClientId", 
    "resultingClientId", 
    "targetClientId"
  ], 
  "File": [
    "Constructor", 
    "File(fileBits, fileName)", 
    "File(fileBits, fileName, options)", 
    "lastModified", 
    "name"
  ], 
  "File/File(fileBits, fileName, options)": [
    "fileBits", 
    "fileName", 
    "options"
  ], 
  "FileList": [
    "item(index)", 
    "length"
  ], 
  "FileList/item(index)": [
    "index"
  ], 
  "FilePropertyBag": [
    "lastModified"
  ], 
  "FileReader": [
    "DONE", 
    "EMPTY", 
    "FileReader()", 
    "LOADING", 
    "abort", 
    "abort()", 
    "error", 
    "load", 
    "loadend", 
    "loadstart", 
    "onabort", 
    "onerror", 
    "onload", 
    "onloadend", 
    "onloadstart", 
    "onprogress", 
    "progress", 
    "readAsArrayBuffer(blob)", 
    "readAsBinaryString(blob)", 
    "readAsDataURL(blob)", 
    "readAsText(blob)", 
    "readAsText(blob, encoding)", 
    "readyState", 
    "result", 
    "state"
  ], 
  "FileReader/readAsArrayBuffer(blob)": [
    "blob"
  ], 
  "FileReader/readAsBinaryString(blob)": [
    "blob"
  ], 
  "FileReader/readAsDataURL(blob)": [
    "blob"
  ], 
  "FileReader/readAsText(blob)": [
    "blob", 
    "encoding"
  ], 
  "FileReader/readAsText(blob, encoding)": [
    "blob", 
    "encoding"
  ], 
  "FileReaderSync": [
    "Constructor", 
    "FileReaderSync()", 
    "readAsArrayBuffer(blob)", 
    "readAsBinaryString(blob)", 
    "readAsDataURL(blob)", 
    "readAsText(blob)", 
    "readAsText(blob, encoding)"
  ], 
  "FileReaderSync/readAsArrayBuffer(blob)": [
    "blob"
  ], 
  "FileReaderSync/readAsBinaryString(blob)": [
    "blob"
  ], 
  "FileReaderSync/readAsDataURL(blob)": [
    "blob"
  ], 
  "FileReaderSync/readAsText(blob)": [
    "blob", 
    "encoding"
  ], 
  "FileReaderSync/readAsText(blob, encoding)": [
    "blob", 
    "encoding"
  ], 
  "FillMode": [
    "\"auto\"", 
    "\"backwards\"", 
    "\"both\"", 
    "\"forwards\"", 
    "\"none\""
  ], 
  "FocusEvent": [
    "Constructor", 
    "FocusEvent(type)", 
    "FocusEvent(type, eventInitDict)", 
    "relatedTarget"
  ], 
  "FocusEvent/FocusEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "FocusEventInit": [
    "relatedTarget"
  ], 
  "FocusOptions": [
    "preventScroll"
  ], 
  "FocusableAreaSearchMode": [
    "\"all\"", 
    "\"visible\""
  ], 
  "FocusableAreasOption": [
    "mode"
  ], 
  "Font": [
    "glyphsRendered", 
    "name"
  ], 
  "FontFace": [
    "FontFace", 
    "FontFace()", 
    "FontFace(family, source, descriptors)", 
    "[[Data]]", 
    "[[FontStatusPromise]]", 
    "[[Urls]]", 
    "display", 
    "family", 
    "featureSettings", 
    "load()", 
    "loaded", 
    "status", 
    "stretch", 
    "style", 
    "unicodeRange", 
    "variant", 
    "variationSettings", 
    "weight"
  ], 
  "FontFace/FontFace()": [
    "descriptors", 
    "family", 
    "source"
  ], 
  "FontFace/FontFace(family, source, descriptors)": [
    "descriptors", 
    "family", 
    "source"
  ], 
  "FontFaceDescriptors": [
    "display", 
    "featureSettings", 
    "stretch", 
    "style", 
    "unicodeRange", 
    "variant", 
    "variationSettings", 
    "weight"
  ], 
  "FontFaceLoadStatus": [
    "\"error\"", 
    "\"loaded\"", 
    "\"loading\"", 
    "\"unloaded\""
  ], 
  "FontFaceSet": [
    "FontFaceSet(initialFaces)", 
    "[[FailedFonts]]", 
    "[[LoadedFonts]]", 
    "[[LoadingFonts]]", 
    "[[PendingReadyPromises]]", 
    "[[ReadyPromise]]", 
    "add(font)", 
    "check", 
    "check()", 
    "check(font)", 
    "check(font, text)", 
    "clear()", 
    "delete(font)", 
    "iteration order", 
    "load", 
    "load()", 
    "load(font, text)", 
    "loading", 
    "loadingdone", 
    "loadingerror", 
    "onloading", 
    "onloadingdone", 
    "onloadingerror", 
    "pending on the environment", 
    "ready", 
    "ready()", 
    "set entries", 
    "status", 
    "stuck on the environment"
  ], 
  "FontFaceSet/FontFaceSet(initialFaces)": [
    "initialFaces"
  ], 
  "FontFaceSet/add(font)": [
    "font"
  ], 
  "FontFaceSet/check()": [
    "font", 
    "text"
  ], 
  "FontFaceSet/check(font, text)": [
    "font", 
    "text"
  ], 
  "FontFaceSet/delete(font)": [
    "font"
  ], 
  "FontFaceSet/load()": [
    "font", 
    "text"
  ], 
  "FontFaceSet/load(font, text)": [
    "font", 
    "text"
  ], 
  "FontFaceSetLoadEvent": [
    "Constructor", 
    "FontFaceSetLoadEvent(type)", 
    "FontFaceSetLoadEvent(type, eventInitDict)", 
    "fontfaces"
  ], 
  "FontFaceSetLoadEvent/FontFaceSetLoadEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "FontFaceSetLoadEventInit": [
    "fontfaces"
  ], 
  "FontFaceSetLoadStatus": [
    "\"loaded\"", 
    "\"loading\""
  ], 
  "FontFaceSource": [
    "fonts"
  ], 
  "FontMetrics": [
    "advances", 
    "baselines", 
    "boundingBoxAscent", 
    "boundingBoxDescent", 
    "boundingBoxLeft", 
    "boundingBoxRight", 
    "dominantBaseline", 
    "emHeightAscent", 
    "emHeightDescent", 
    "fontBoundingBoxAscent", 
    "fontBoundingBoxDescent", 
    "fonts", 
    "height", 
    "width"
  ], 
  "ForEachCallback": [
    "font", 
    "index", 
    "self"
  ], 
  "FormData": [
    "FormData(form)", 
    "append(name, blobValue)", 
    "append(name, blobValue, filename)", 
    "append(name, value)", 
    "delete(name)", 
    "entries", 
    "entry", 
    "entry list", 
    "get(name)", 
    "getAll(name)", 
    "has(name)", 
    "set(name, blobValue)", 
    "set(name, blobValue, filename)", 
    "set(name, value)"
  ], 
  "FormData/FormData(form)": [
    "form"
  ], 
  "FormData/append(name, blobValue)": [
    "blobValue", 
    "filename", 
    "name"
  ], 
  "FormData/append(name, blobValue, filename)": [
    "blobValue", 
    "filename", 
    "name"
  ], 
  "FormData/append(name, value)": [
    "name", 
    "value"
  ], 
  "FormData/delete(name)": [
    "name"
  ], 
  "FormData/entry": [
    "name", 
    "value"
  ], 
  "FormData/get(name)": [
    "name"
  ], 
  "FormData/getAll(name)": [
    "name"
  ], 
  "FormData/has(name)": [
    "name"
  ], 
  "FormData/set(name, blobValue)": [
    "blobValue", 
    "filename", 
    "name"
  ], 
  "FormData/set(name, blobValue, filename)": [
    "blobValue", 
    "filename", 
    "name"
  ], 
  "FormData/set(name, value)": [
    "name", 
    "value"
  ], 
  "FormDataEventInit": [
    "formData"
  ], 
  "FragmentFilter": [
    "\"direct-fragments-only\"", 
    "\"fragment-hierarchy\""
  ], 
  "FragmentResult": [
    "FragmentResult(options)", 
    "[[block size]]", 
    "[[box]]", 
    "[[child fragments]]", 
    "[[data]]", 
    "[[inline size]]", 
    "[[internal break token]]", 
    "[[unique id]]", 
    "blockSize", 
    "inlineSize"
  ], 
  "FragmentResult/FragmentResult(options)": [
    "options"
  ], 
  "FragmentResultOptions": [
    "autoBlockSize", 
    "blockSize", 
    "breakToken", 
    "childFragments", 
    "data", 
    "inlineSize"
  ], 
  "FrameType": [
    "\"auxiliary\"", 
    "\"nested\"", 
    "\"none\"", 
    "\"top-level\""
  ], 
  "FullscreenNavigationUI": [
    "\"auto\"", 
    "\"hide\"", 
    "\"show\""
  ], 
  "FullscreenOptions": [
    "navigationUI"
  ], 
  "Function": [
    "arguments"
  ], 
  "GenerateTestReportParameters": [
    "group", 
    "message"
  ], 
  "GenericTransformStream": [
    "readable", 
    "transform", 
    "writable"
  ], 
  "GeometryUtils": [
    "convertPointFromNode(point, from)", 
    "convertPointFromNode(point, from, options)", 
    "convertQuadFromNode(quad, from)", 
    "convertQuadFromNode(quad, from, options)", 
    "convertRectFromNode(rect, from)", 
    "convertRectFromNode(rect, from, options)", 
    "getBoxQuads()", 
    "getBoxQuads(options)"
  ], 
  "GeometryUtils/convertPointFromNode(point, from)": [
    "from", 
    "options", 
    "point"
  ], 
  "GeometryUtils/convertPointFromNode(point, from, options)": [
    "from", 
    "options", 
    "point"
  ], 
  "GeometryUtils/convertQuadFromNode(quad, from)": [
    "from", 
    "options", 
    "quad"
  ], 
  "GeometryUtils/convertQuadFromNode(quad, from, options)": [
    "from", 
    "options", 
    "quad"
  ], 
  "GeometryUtils/convertRectFromNode(rect, from)": [
    "from", 
    "options", 
    "rect"
  ], 
  "GeometryUtils/convertRectFromNode(rect, from, options)": [
    "from", 
    "options", 
    "rect"
  ], 
  "GeometryUtils/getBoxQuads()": [
    "options"
  ], 
  "GeometryUtils/getBoxQuads(options)": [
    "options"
  ], 
  "GetAnimationsOptions": [
    "subtree"
  ], 
  "GetRootNodeOptions": [
    "composed"
  ], 
  "GlobalEventHandlers": [
    "onabort", 
    "onanimationcancel", 
    "onanimationend", 
    "onanimationiteration", 
    "onanimationstart", 
    "onauxclick", 
    "oncancel", 
    "oncanplay", 
    "oncanplaythrough", 
    "onchange", 
    "onclick", 
    "onclose", 
    "oncontextmenu", 
    "oncuechange", 
    "ondblclick", 
    "ondrag", 
    "ondragend", 
    "ondragenter", 
    "ondragexit", 
    "ondragleave", 
    "ondragover", 
    "ondragstart", 
    "ondrop", 
    "ondurationchange", 
    "onemptied", 
    "onended", 
    "onformdata", 
    "oninput", 
    "oninvalid", 
    "onkeydown", 
    "onkeypress", 
    "onkeyup", 
    "onloadeddata", 
    "onloadedmetadata", 
    "onloadend", 
    "onloadstart", 
    "onmousedown", 
    "onmouseenter", 
    "onmouseleave", 
    "onmousemove", 
    "onmouseout", 
    "onmouseover", 
    "onmouseup", 
    "onpause", 
    "onplay", 
    "onplaying", 
    "onprogress", 
    "onratechange", 
    "onreset", 
    "onsecuritypolicyviolation", 
    "onseeked", 
    "onseeking", 
    "onselect", 
    "onstalled", 
    "onsubmit", 
    "onsuspend", 
    "ontimeupdate", 
    "ontoggle", 
    "ontransitioncancel", 
    "ontransitionend", 
    "ontransitionrun", 
    "ontransitionstart", 
    "onvolumechange", 
    "onwaiting", 
    "onwheel"
  ], 
  "HTMLAllCollection": [
    "item()", 
    "length", 
    "namedItem(name)"
  ], 
  "HTMLAnchorElement": [
    "charset", 
    "coords", 
    "download", 
    "hreflang", 
    "name", 
    "referrerPolicy", 
    "rel", 
    "relList", 
    "rev", 
    "shape", 
    "target", 
    "text", 
    "type"
  ], 
  "HTMLAreaElement": [
    "alt", 
    "coords", 
    "download", 
    "noHref", 
    "ping", 
    "referrerPolicy", 
    "rel", 
    "relList", 
    "shape", 
    "target"
  ], 
  "HTMLAudioElement": [
    "Audio(src)"
  ], 
  "HTMLBRElement": [
    "clear"
  ], 
  "HTMLBaseElement": [
    "href", 
    "target"
  ], 
  "HTMLBodyElement": [
    "aLink", 
    "background", 
    "bgColor", 
    "link", 
    "text", 
    "vLink"
  ], 
  "HTMLButtonElement": [
    "formAction", 
    "formEnctype", 
    "formMethod", 
    "formNoValidate", 
    "formTarget", 
    "type", 
    "value"
  ], 
  "HTMLCanvasElement": [
    "getContext(contextId)", 
    "height", 
    "toBlob(callback)", 
    "toBlob(callback, type)", 
    "toDataURL()", 
    "toDataURL(type)", 
    "transferControlToOffscreen()", 
    "width"
  ], 
  "HTMLCollection": [
    "item(index)", 
    "length", 
    "namedItem", 
    "namedItem(key)", 
    "namedItem(name)"
  ], 
  "HTMLCollection/item(index)": [
    "index"
  ], 
  "HTMLCollection/namedItem(name)": [
    "name"
  ], 
  "HTMLDListElement": [
    "compact"
  ], 
  "HTMLDataElement": [
    "value"
  ], 
  "HTMLDataListElement": [
    "options"
  ], 
  "HTMLDetailsElement": [
    "open"
  ], 
  "HTMLDialogElement": [
    "close()", 
    "open", 
    "returnValue", 
    "show()", 
    "showModal()"
  ], 
  "HTMLDirectoryElement": [
    "compact"
  ], 
  "HTMLDivElement": [
    "align"
  ], 
  "HTMLElement": [
    "accessKey", 
    "accessKeyLabel", 
    "attachInternals()", 
    "autocapitalize", 
    "blur", 
    "blur()", 
    "cancel", 
    "change", 
    "click()", 
    "close", 
    "contextmenu", 
    "copy", 
    "cut", 
    "dir", 
    "draggable", 
    "error", 
    "focus", 
    "formdata", 
    "hidden", 
    "innerText", 
    "input", 
    "invalid", 
    "lang", 
    "load", 
    "loadend", 
    "loadstart", 
    "offsetHeight", 
    "offsetLeft", 
    "offsetParent", 
    "offsetTop", 
    "offsetWidth", 
    "onabort", 
    "onauxclick", 
    "oncancel", 
    "oncanplay", 
    "oncanplaythrough", 
    "onchange", 
    "onclick", 
    "onclose", 
    "oncontextmenu", 
    "oncuechange", 
    "ondblclick", 
    "ondrag", 
    "ondragend", 
    "ondragenter", 
    "ondragexit", 
    "ondragleave", 
    "ondragover", 
    "ondragstart", 
    "ondrop", 
    "ondurationchange", 
    "onemptied", 
    "onended", 
    "onformdata", 
    "oninput", 
    "oninvalid", 
    "onkeydown", 
    "onkeypress", 
    "onkeyup", 
    "onloadeddata", 
    "onloadedmetadata", 
    "onloadend", 
    "onloadstart", 
    "onmousedown", 
    "onmouseenter", 
    "onmouseleave", 
    "onmousemove", 
    "onmouseout", 
    "onmouseover", 
    "onmouseup", 
    "onpause", 
    "onplay", 
    "onplaying", 
    "onprogress", 
    "onratechange", 
    "onreset", 
    "onsecuritypolicyviolation", 
    "onseeked", 
    "onseeking", 
    "onselect", 
    "onstalled", 
    "onsubmit", 
    "onsuspend", 
    "ontimeupdate", 
    "ontoggle", 
    "onvolumechange", 
    "onwaiting", 
    "onwheel", 
    "paste", 
    "progress", 
    "reset", 
    "securitypolicyviolation", 
    "select", 
    "spellcheck", 
    "submit", 
    "title", 
    "toggle", 
    "translate"
  ], 
  "HTMLEmbedElement": [
    "align", 
    "name", 
    "src", 
    "type"
  ], 
  "HTMLFieldSetElement": [
    "checkValidity()", 
    "disabled", 
    "elements", 
    "name", 
    "reportValidity()", 
    "setCustomValidity(message)", 
    "type", 
    "validationMessage", 
    "validity", 
    "willValidate"
  ], 
  "HTMLFontElement": [
    "color", 
    "face", 
    "size"
  ], 
  "HTMLFormControlsCollection": [
    "namedItem(name)"
  ], 
  "HTMLFormElement": [
    "acceptCharset", 
    "action", 
    "autocomplete", 
    "checkValidity()", 
    "elements", 
    "encoding", 
    "enctype", 
    "length", 
    "method", 
    "name", 
    "noValidate", 
    "rel", 
    "relList", 
    "reportValidity()", 
    "requestSubmit()", 
    "reset()", 
    "submit()", 
    "target"
  ], 
  "HTMLFrameElement": [
    "contentDocument", 
    "contentWindow", 
    "frameBorder", 
    "longDesc", 
    "marginHeight", 
    "marginWidth", 
    "name", 
    "noResize", 
    "scrolling", 
    "src"
  ], 
  "HTMLFrameSetElement": [
    "cols", 
    "rows"
  ], 
  "HTMLHRElement": [
    "align", 
    "color", 
    "noShade", 
    "size", 
    "width"
  ], 
  "HTMLHeadingElement": [
    "align"
  ], 
  "HTMLHtmlElement": [
    "version"
  ], 
  "HTMLHyperlinkElementUtils": [
    "href", 
    "origin"
  ], 
  "HTMLIFrameElement": [
    "align", 
    "allow", 
    "allowFullscreen", 
    "allowPaymentRequest", 
    "contentDocument", 
    "contentWindow", 
    "featurePolicy", 
    "frameBorder", 
    "longDesc", 
    "marginHeight", 
    "marginWidth", 
    "name", 
    "referrerPolicy", 
    "sandbox", 
    "scrolling", 
    "src", 
    "srcdoc"
  ], 
  "HTMLImageElement": [
    "Image(width, height)", 
    "align", 
    "alt", 
    "border", 
    "complete", 
    "crossOrigin", 
    "currentSrc", 
    "decode()", 
    "decoding", 
    "height", 
    "hspace", 
    "isMap", 
    "longDesc", 
    "lowsrc", 
    "name", 
    "naturalHeight", 
    "naturalWidth", 
    "referrerPolicy", 
    "sizes", 
    "src", 
    "srcset", 
    "useMap", 
    "vspace", 
    "width", 
    "x", 
    "y"
  ], 
  "HTMLInputElement": [
    "accept", 
    "align", 
    "alt", 
    "checked", 
    "defaultChecked", 
    "defaultValue", 
    "dirName", 
    "files", 
    "height", 
    "indeterminate", 
    "list", 
    "max", 
    "maxLength", 
    "min", 
    "minLength", 
    "multiple", 
    "pattern", 
    "placeholder", 
    "readOnly", 
    "required", 
    "size", 
    "src", 
    "step", 
    "stepDown()", 
    "stepUp()", 
    "type", 
    "useMap", 
    "value", 
    "valueAsDate", 
    "valueAsNumber", 
    "width"
  ], 
  "HTMLLIElement": [
    "type", 
    "value"
  ], 
  "HTMLLabelElement": [
    "control", 
    "form", 
    "htmlFor"
  ], 
  "HTMLLegendElement": [
    "align", 
    "form"
  ], 
  "HTMLLinkElement": [
    "as", 
    "charset", 
    "crossOrigin", 
    "href", 
    "hreflang", 
    "imageSizes", 
    "imageSrcset", 
    "integrity", 
    "media", 
    "referrerPolicy", 
    "rel", 
    "relList", 
    "rev", 
    "sizes", 
    "target", 
    "type"
  ], 
  "HTMLMapElement": [
    "areas", 
    "name"
  ], 
  "HTMLMarqueeElement": [
    "behavior", 
    "bgColor", 
    "direction", 
    "height", 
    "hspace", 
    "loop", 
    "scrollAmount", 
    "scrollDelay", 
    "start()", 
    "stop()", 
    "trueSpeed", 
    "vspace", 
    "width"
  ], 
  "HTMLMediaElement": [
    "HAVE_CURRENT_DATA", 
    "HAVE_ENOUGH_DATA", 
    "HAVE_FUTURE_DATA", 
    "HAVE_METADATA", 
    "HAVE_NOTHING", 
    "NETWORK_EMPTY", 
    "NETWORK_IDLE", 
    "NETWORK_LOADING", 
    "NETWORK_NO_SOURCE", 
    "addTextTrack(kind)", 
    "addTextTrack(kind, label)", 
    "audioTracks", 
    "autoplay", 
    "buffered", 
    "canPlayType(type)", 
    "controls", 
    "crossOrigin", 
    "currentSrc", 
    "currentTime", 
    "defaultMuted", 
    "defaultPlaybackRate", 
    "duration", 
    "ended", 
    "error", 
    "fastSeek()", 
    "getStartDate()", 
    "load()", 
    "loop", 
    "muted", 
    "networkState", 
    "pause()", 
    "paused", 
    "play()", 
    "playbackRate", 
    "played", 
    "preload", 
    "readyState", 
    "seekable", 
    "seeking", 
    "src", 
    "srcObject", 
    "textTracks", 
    "videoTracks", 
    "volume"
  ], 
  "HTMLMenuElement": [
    "compact"
  ], 
  "HTMLMetaElement": [
    "content", 
    "httpEquiv", 
    "name", 
    "scheme"
  ], 
  "HTMLMeterElement": [
    "high", 
    "low", 
    "max", 
    "min", 
    "optimum", 
    "value"
  ], 
  "HTMLModElement": [
    "cite", 
    "dateTime"
  ], 
  "HTMLOListElement": [
    "compact", 
    "reversed", 
    "start", 
    "type"
  ], 
  "HTMLObjectElement": [
    "align", 
    "archive", 
    "border", 
    "code", 
    "codeBase", 
    "codeType", 
    "contentDocument", 
    "contentWindow", 
    "data", 
    "declare", 
    "getSVGDocument()", 
    "hspace", 
    "name", 
    "standby", 
    "type", 
    "useMap", 
    "vspace"
  ], 
  "HTMLOptGroupElement": [
    "disabled", 
    "label"
  ], 
  "HTMLOptionElement": [
    "Option(text, value, defaultSelected, selected)", 
    "defaultSelected", 
    "disabled", 
    "form", 
    "index", 
    "label", 
    "selected", 
    "text", 
    "value"
  ], 
  "HTMLOptionsCollection": [
    "add(element)", 
    "length", 
    "remove(index)", 
    "selectedIndex"
  ], 
  "HTMLOrSVGElement": [
    "[[CryptographicNonce]]", 
    "dataset", 
    "focus()", 
    "nonce"
  ], 
  "HTMLOutputElement": [
    "defaultValue", 
    "htmlFor", 
    "type", 
    "value"
  ], 
  "HTMLParagraphElement": [
    "align"
  ], 
  "HTMLParamElement": [
    "name", 
    "type", 
    "value", 
    "valueType"
  ], 
  "HTMLPreElement": [
    "width"
  ], 
  "HTMLProgressElement": [
    "max", 
    "position", 
    "value"
  ], 
  "HTMLQuoteElement": [
    "cite"
  ], 
  "HTMLScriptElement": [
    "async", 
    "charset", 
    "crossOrigin", 
    "defer", 
    "event", 
    "htmlFor", 
    "integrity", 
    "noModule", 
    "referrerPolicy", 
    "src", 
    "text", 
    "type"
  ], 
  "HTMLSelectElement": [
    "add()", 
    "item(index)", 
    "length", 
    "multiple", 
    "namedItem(name)", 
    "options", 
    "remove()", 
    "required", 
    "selectedIndex", 
    "selectedOptions", 
    "size", 
    "type", 
    "value"
  ], 
  "HTMLSlotElement": [
    "assignedElements()", 
    "assignedNodes()", 
    "name"
  ], 
  "HTMLSourceElement": [
    "media", 
    "sizes", 
    "src", 
    "srcset", 
    "type"
  ], 
  "HTMLStyleElement": [
    "media", 
    "type"
  ], 
  "HTMLTableCaptionElement": [
    "align"
  ], 
  "HTMLTableCellElement": [
    "abbr", 
    "align", 
    "axis", 
    "bgColor", 
    "cellIndex", 
    "ch", 
    "chOff", 
    "colSpan", 
    "headers", 
    "height", 
    "noWrap", 
    "rowSpan", 
    "scope", 
    "vAlign", 
    "width"
  ], 
  "HTMLTableColElement": [
    "align", 
    "ch", 
    "chOff", 
    "span", 
    "vAlign", 
    "width"
  ], 
  "HTMLTableElement": [
    "align", 
    "bgColor", 
    "border", 
    "caption", 
    "cellPadding", 
    "cellSpacing", 
    "createCaption()", 
    "createTBody()", 
    "createTFoot()", 
    "createTHead()", 
    "deleteCaption()", 
    "deleteRow(index)", 
    "deleteTFoot()", 
    "deleteTHead()", 
    "frame", 
    "insertRow()", 
    "rows", 
    "rules", 
    "summary", 
    "tBodies", 
    "tFoot", 
    "tHead", 
    "width"
  ], 
  "HTMLTableRowElement": [
    "align", 
    "bgColor", 
    "cells", 
    "ch", 
    "chOff", 
    "deleteCell(index)", 
    "insertCell()", 
    "rowIndex", 
    "sectionRowIndex", 
    "vAlign"
  ], 
  "HTMLTableSectionElement": [
    "align", 
    "ch", 
    "chOff", 
    "deleteRow(index)", 
    "insertRow()", 
    "rows", 
    "vAlign"
  ], 
  "HTMLTemplateElement": [
    "content"
  ], 
  "HTMLTextAreaElement": [
    "autocomplete", 
    "autofocus", 
    "cols", 
    "defaultValue", 
    "dirName", 
    "maxLength", 
    "minLength", 
    "placeholder", 
    "readOnly", 
    "required", 
    "rows", 
    "select", 
    "select()", 
    "selectionDirection", 
    "selectionEnd", 
    "selectionStart", 
    "setRangeText(replacement, start, end, selectMode)", 
    "setSelectionRange(start, end)", 
    "textLength", 
    "type", 
    "value", 
    "wrap"
  ], 
  "HTMLTextAreaElement/setSelectionRange(start, end, direction)": [
    "direction"
  ], 
  "HTMLTimeElement": [
    "dateTime"
  ], 
  "HTMLTitleElement": [
    "text"
  ], 
  "HTMLTrackElement": [
    "ERROR", 
    "LOADED", 
    "LOADING", 
    "NONE", 
    "default", 
    "kind", 
    "label", 
    "readyState", 
    "src", 
    "srclang", 
    "track"
  ], 
  "HTMLUListElement": [
    "compact", 
    "type"
  ], 
  "HTMLVideoElement": [
    "height", 
    "playsInline", 
    "poster", 
    "videoHeight", 
    "videoWidth", 
    "width"
  ], 
  "HashChangeEventInit": [
    "newURL", 
    "oldURL"
  ], 
  "Headers": [
    "Headers(init)", 
    "append", 
    "append(name, value)", 
    "delete(name)", 
    "fill", 
    "get(name)", 
    "guard", 
    "has(name)", 
    "header list", 
    "remove privileged no-cors request headers", 
    "set(name, value)"
  ], 
  "Headers/Headers(init)": [
    "init"
  ], 
  "Headers/append(name, value)": [
    "name", 
    "value"
  ], 
  "Headers/delete(name)": [
    "name"
  ], 
  "Headers/get(name)": [
    "name"
  ], 
  "Headers/has(name)": [
    "name"
  ], 
  "Headers/set(name, value)": [
    "name", 
    "value"
  ], 
  "History": [
    "back()", 
    "forward()", 
    "go()", 
    "length", 
    "pushState(data, title)", 
    "replaceState(data, title)", 
    "scrollRestoration", 
    "state"
  ], 
  "IDBCursor": [
    "advance(count)", 
    "continue()", 
    "continue(key)", 
    "continuePrimaryKey(key, primaryKey)", 
    "delete()", 
    "direction", 
    "key", 
    "primaryKey", 
    "request", 
    "source", 
    "update(value)"
  ], 
  "IDBCursor/advance(count)": [
    "count"
  ], 
  "IDBCursor/continue()": [
    "key"
  ], 
  "IDBCursor/continue(key)": [
    "key"
  ], 
  "IDBCursor/continuePrimaryKey(key, primaryKey)": [
    "key", 
    "primaryKey"
  ], 
  "IDBCursor/update(value)": [
    "value"
  ], 
  "IDBCursorDirection": [
    "\"next\"", 
    "\"nextunique\"", 
    "\"prev\"", 
    "\"prevunique\""
  ], 
  "IDBCursorWithValue": [
    "value"
  ], 
  "IDBDatabase": [
    "close()", 
    "createObjectStore(name)", 
    "createObjectStore(name, options)", 
    "deleteObjectStore(name)", 
    "name", 
    "objectStoreNames", 
    "onabort", 
    "onclose", 
    "onerror", 
    "onversionchange", 
    "transaction(storeNames)", 
    "transaction(storeNames, mode)", 
    "version"
  ], 
  "IDBDatabase/createObjectStore(name)": [
    "name", 
    "options"
  ], 
  "IDBDatabase/createObjectStore(name, options)": [
    "name", 
    "options"
  ], 
  "IDBDatabase/deleteObjectStore(name)": [
    "name"
  ], 
  "IDBDatabase/transaction(storeNames)": [
    "mode", 
    "storeNames"
  ], 
  "IDBDatabase/transaction(storeNames, mode)": [
    "mode", 
    "storeNames"
  ], 
  "IDBDatabaseInfo": [
    "name", 
    "version"
  ], 
  "IDBFactory": [
    "cmp(first, second)", 
    "databases()", 
    "deleteDatabase(name)", 
    "open(name)", 
    "open(name, version)"
  ], 
  "IDBFactory/cmp(first, second)": [
    "first", 
    "second"
  ], 
  "IDBFactory/deleteDatabase(name)": [
    "name"
  ], 
  "IDBFactory/open(name)": [
    "name", 
    "version"
  ], 
  "IDBFactory/open(name, version)": [
    "name", 
    "version"
  ], 
  "IDBIndex": [
    "count()", 
    "count(query)", 
    "get(query)", 
    "getAll()", 
    "getAll(query)", 
    "getAll(query, count)", 
    "getAllKeys()", 
    "getAllKeys(query)", 
    "getAllKeys(query, count)", 
    "getKey(query)", 
    "keyPath", 
    "multiEntry", 
    "name", 
    "objectStore", 
    "openCursor()", 
    "openCursor(query)", 
    "openCursor(query, direction)", 
    "openKeyCursor()", 
    "openKeyCursor(query)", 
    "openKeyCursor(query, direction)", 
    "unique"
  ], 
  "IDBIndex/count()": [
    "query"
  ], 
  "IDBIndex/count(query)": [
    "query"
  ], 
  "IDBIndex/get(query)": [
    "query"
  ], 
  "IDBIndex/getAll()": [
    "count", 
    "query"
  ], 
  "IDBIndex/getAll(query)": [
    "count", 
    "query"
  ], 
  "IDBIndex/getAll(query, count)": [
    "count", 
    "query"
  ], 
  "IDBIndex/getAllKeys()": [
    "count", 
    "query"
  ], 
  "IDBIndex/getAllKeys(query)": [
    "count", 
    "query"
  ], 
  "IDBIndex/getAllKeys(query, count)": [
    "count", 
    "query"
  ], 
  "IDBIndex/getKey(query)": [
    "query"
  ], 
  "IDBIndex/openCursor()": [
    "direction", 
    "query"
  ], 
  "IDBIndex/openCursor(query)": [
    "direction", 
    "query"
  ], 
  "IDBIndex/openCursor(query, direction)": [
    "direction", 
    "query"
  ], 
  "IDBIndex/openKeyCursor()": [
    "direction", 
    "query"
  ], 
  "IDBIndex/openKeyCursor(query)": [
    "direction", 
    "query"
  ], 
  "IDBIndex/openKeyCursor(query, direction)": [
    "direction", 
    "query"
  ], 
  "IDBIndexParameters": [
    "multiEntry", 
    "unique"
  ], 
  "IDBKeyRange": [
    "_includes", 
    "_includes(key)", 
    "bound(lower, upper)", 
    "bound(lower, upper, lowerOpen)", 
    "bound(lower, upper, lowerOpen, upperOpen)", 
    "includes(key)", 
    "lower", 
    "lowerBound", 
    "lowerBound(lower)", 
    "lowerBound(lower, lowerOpen)", 
    "lowerBound(lower, open)", 
    "lowerOpen", 
    "only(value)", 
    "upper", 
    "upperBound", 
    "upperBound(upper)", 
    "upperBound(upper, open)", 
    "upperBound(upper, upperOpen)", 
    "upperOpen"
  ], 
  "IDBKeyRange/_includes(key)": [
    "key"
  ], 
  "IDBKeyRange/bound(lower, upper)": [
    "lower", 
    "lowerOpen", 
    "upper", 
    "upperOpen"
  ], 
  "IDBKeyRange/bound(lower, upper, lowerOpen)": [
    "lower", 
    "lowerOpen", 
    "upper", 
    "upperOpen"
  ], 
  "IDBKeyRange/bound(lower, upper, lowerOpen, upperOpen)": [
    "lower", 
    "lowerOpen", 
    "upper", 
    "upperOpen"
  ], 
  "IDBKeyRange/lowerBound(lower)": [
    "lower", 
    "open"
  ], 
  "IDBKeyRange/lowerBound(lower, open)": [
    "lower", 
    "open"
  ], 
  "IDBKeyRange/only(value)": [
    "value"
  ], 
  "IDBKeyRange/upperBound(upper)": [
    "open", 
    "upper"
  ], 
  "IDBKeyRange/upperBound(upper, open)": [
    "open", 
    "upper"
  ], 
  "IDBObjectStore": [
    "add(value)", 
    "add(value, key)", 
    "autoIncrement", 
    "clear()", 
    "count()", 
    "count(query)", 
    "createIndex(name, keyPath)", 
    "createIndex(name, keyPath, options)", 
    "delete(query)", 
    "deleteIndex(name)", 
    "get(query)", 
    "getAll()", 
    "getAll(query)", 
    "getAll(query, count)", 
    "getAllKeys()", 
    "getAllKeys(query)", 
    "getAllKeys(query, count)", 
    "getKey(query)", 
    "index(name)", 
    "indexNames", 
    "keyPath", 
    "name", 
    "openCursor()", 
    "openCursor(query)", 
    "openCursor(query, direction)", 
    "openKeyCursor()", 
    "openKeyCursor(query)", 
    "openKeyCursor(query, direction)", 
    "put(value)", 
    "put(value, key)", 
    "transaction"
  ], 
  "IDBObjectStore/add(value)": [
    "key", 
    "value"
  ], 
  "IDBObjectStore/add(value, key)": [
    "key", 
    "value"
  ], 
  "IDBObjectStore/count()": [
    "query"
  ], 
  "IDBObjectStore/count(query)": [
    "query"
  ], 
  "IDBObjectStore/createIndex(name, keyPath)": [
    "keyPath", 
    "name", 
    "options"
  ], 
  "IDBObjectStore/createIndex(name, keyPath, options)": [
    "keyPath", 
    "name", 
    "options"
  ], 
  "IDBObjectStore/delete(query)": [
    "query"
  ], 
  "IDBObjectStore/deleteIndex(name)": [
    "name"
  ], 
  "IDBObjectStore/get(query)": [
    "query"
  ], 
  "IDBObjectStore/getAll()": [
    "count", 
    "query"
  ], 
  "IDBObjectStore/getAll(query)": [
    "count", 
    "query"
  ], 
  "IDBObjectStore/getAll(query, count)": [
    "count", 
    "query"
  ], 
  "IDBObjectStore/getAllKeys()": [
    "count", 
    "query"
  ], 
  "IDBObjectStore/getAllKeys(query)": [
    "count", 
    "query"
  ], 
  "IDBObjectStore/getAllKeys(query, count)": [
    "count", 
    "query"
  ], 
  "IDBObjectStore/getKey(query)": [
    "query"
  ], 
  "IDBObjectStore/index(name)": [
    "name"
  ], 
  "IDBObjectStore/openCursor()": [
    "direction", 
    "query"
  ], 
  "IDBObjectStore/openCursor(query)": [
    "direction", 
    "query"
  ], 
  "IDBObjectStore/openCursor(query, direction)": [
    "direction", 
    "query"
  ], 
  "IDBObjectStore/openKeyCursor()": [
    "direction", 
    "query"
  ], 
  "IDBObjectStore/openKeyCursor(query)": [
    "direction", 
    "query"
  ], 
  "IDBObjectStore/openKeyCursor(query, direction)": [
    "direction", 
    "query"
  ], 
  "IDBObjectStore/put(value)": [
    "key", 
    "value"
  ], 
  "IDBObjectStore/put(value, key)": [
    "key", 
    "value"
  ], 
  "IDBObjectStoreParameters": [
    "autoIncrement", 
    "keyPath"
  ], 
  "IDBOpenDBRequest": [
    "onblocked", 
    "onupgradeneeded"
  ], 
  "IDBRequest": [
    "error", 
    "onerror", 
    "onsuccess", 
    "readyState", 
    "result", 
    "source", 
    "transaction"
  ], 
  "IDBRequestReadyState": [
    "\"done\"", 
    "\"pending\""
  ], 
  "IDBTransaction": [
    "abort()", 
    "commit()", 
    "db", 
    "error", 
    "mode", 
    "objectStore(name)", 
    "objectStoreNames", 
    "onabort", 
    "oncomplete", 
    "onerror"
  ], 
  "IDBTransaction/objectStore(name)": [
    "name"
  ], 
  "IDBTransactionMode": [
    "\"readonly\"", 
    "\"readwrite\"", 
    "\"versionchange\""
  ], 
  "IDBVersionChangeEvent": [
    "Constructor", 
    "IDBVersionChangeEvent(type)", 
    "IDBVersionChangeEvent(type, eventInitDict)", 
    "newVersion", 
    "oldVersion"
  ], 
  "IDBVersionChangeEvent/IDBVersionChangeEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "IDBVersionChangeEventInit": [
    "newVersion", 
    "oldVersion"
  ], 
  "IDL type": [
    "extended attribute associated with", 
    "extended attributes associated with"
  ], 
  "ImageBitmap": [
    "close()", 
    "height", 
    "width"
  ], 
  "ImageBitmapOptions": [
    "colorSpaceConversion", 
    "imageOrientation", 
    "premultiplyAlpha", 
    "resizeHeight", 
    "resizeQuality", 
    "resizeWidth"
  ], 
  "ImageBitmapRenderingContext": [
    "canvas", 
    "transferFromImageBitmap(imageBitmap)"
  ], 
  "ImageBitmapRenderingContextSettings": [
    "alpha"
  ], 
  "ImageData": [
    "data", 
    "height", 
    "width"
  ], 
  "ImageResource": [
    "any", 
    "any purpose", 
    "badge", 
    "badge maskable", 
    "badge purpose", 
    "icon", 
    "icon purposes", 
    "maskable", 
    "processing the purpose member of an image", 
    "processing the src member of an image", 
    "processing the type member of an image"
  ], 
  "InputEvent": [
    "Constructor", 
    "InputEvent(type)", 
    "InputEvent(type, eventInitDict)", 
    "data", 
    "inputType", 
    "isComposing"
  ], 
  "InputEvent/InputEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "InputEventInit": [
    "data", 
    "inputType", 
    "isComposing"
  ], 
  "InterventionReportBody": [
    "columnNumber", 
    "columnnumber", 
    "id", 
    "lineNumber", 
    "linenumber", 
    "message", 
    "sourceFile", 
    "sourcefile"
  ], 
  "IntrinsicSizes": [
    "[[intrinsicSizesRequest]]", 
    "maxContentSize", 
    "minContentSize"
  ], 
  "IntrinsicSizesRequest": [
    "[[layoutChild]]"
  ], 
  "IntrinsicSizesResultOptions": [
    "maxContentSize", 
    "minContentSize"
  ], 
  "IterationCompositeOperation": [
    "\"accumulate\"", 
    "\"replace\""
  ], 
  "JavaScript string": [
    "convert", 
    "length"
  ], 
  "KeyboardEveng": [
    "initKeyboardEvent()"
  ], 
  "KeyboardEvent": [
    "Constructor", 
    "DOM_KEY_LOCATION_LEFT", 
    "DOM_KEY_LOCATION_NUMPAD", 
    "DOM_KEY_LOCATION_RIGHT", 
    "DOM_KEY_LOCATION_STANDARD", 
    "KeyboardEvent(type)", 
    "KeyboardEvent(type, eventInitDict)", 
    "altKey", 
    "charCode", 
    "code", 
    "ctrlKey", 
    "getModifierState(keyArg)", 
    "isComposing", 
    "key", 
    "keyCode", 
    "location", 
    "metaKey", 
    "repeat", 
    "shiftKey"
  ], 
  "KeyboardEvent/KeyboardEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "KeyboardEvent/getModifierState(keyArg)": [
    "keyArg"
  ], 
  "KeyboardEventInit": [
    "charcode", 
    "code", 
    "isComposing", 
    "key", 
    "keycode", 
    "location", 
    "repeat"
  ], 
  "KeyframeAnimationOptions": [
    "id"
  ], 
  "KeyframeEffect": [
    "KeyframeEffect(source)", 
    "KeyframeEffect(target, keyframes, options)", 
    "composite", 
    "getKeyframes()", 
    "iterationComposite", 
    "setKeyframes(keyframes)", 
    "target", 
    "void setKeyframes(object? keyframes)"
  ], 
  "KeyframeEffect/KeyframeEffect(source)": [
    "source"
  ], 
  "KeyframeEffect/KeyframeEffect(target, keyframes, options)": [
    "keyframes", 
    "options", 
    "target"
  ], 
  "KeyframeEffect/setKeyframes": [
    "keyframes"
  ], 
  "KeyframeEffect/setKeyframes(keyframes)": [
    "keyframes"
  ], 
  "KeyframeEffectOptions": [
    "composite", 
    "iterationComposite"
  ], 
  "LayoutChild": [
    "[[box]]", 
    "[[styleMap]]", 
    "[[unique id]]", 
    "intrinsicSizes()", 
    "layoutNextFragment(constraints, breakToken)", 
    "styleMap"
  ], 
  "LayoutChild/layoutNextFragment(constraints, breakToken)": [
    "breakToken", 
    "constraints"
  ], 
  "LayoutConstraints": [
    "Constructor", 
    "LayoutConstraints()", 
    "LayoutConstraints(options)", 
    "availableBlockSize", 
    "availableInlineSize", 
    "blockFragmentationOffset", 
    "blockFragmentationType", 
    "data", 
    "fixedBlockSize", 
    "fixedInlineSize", 
    "percentageBlockSize", 
    "percentageInlineSize"
  ], 
  "LayoutConstraints/LayoutConstraints(options)": [
    "options"
  ], 
  "LayoutConstraintsOptions": [
    "availableBlockSize", 
    "availableInlineSize", 
    "blockFragmentationOffset", 
    "blockFragmentationType", 
    "data", 
    "fixedBlockSize", 
    "fixedInlineSize", 
    "percentageBlockSize", 
    "percentageInlineSize"
  ], 
  "LayoutEdgeSizes": [
    "block", 
    "blockEnd", 
    "blockStart", 
    "inline", 
    "inlineEnd", 
    "inlineStart"
  ], 
  "LayoutEdges": [
    "all", 
    "block", 
    "blockEnd", 
    "blockStart", 
    "border", 
    "inline", 
    "inlineEnd", 
    "inlineStart", 
    "padding", 
    "scrollbar"
  ], 
  "LayoutFragment": [
    "[[generator]]", 
    "[[layoutFragmentRequest]]", 
    "[[unique id]]", 
    "blockOffset", 
    "blockSize", 
    "breakToken", 
    "data", 
    "inlineOffset", 
    "inlineSize"
  ], 
  "LayoutFragmentRequest": [
    "[[breakToken]]", 
    "[[layoutChild]]", 
    "[[layoutConstraints]]"
  ], 
  "LayoutOptions": [
    "childDisplay", 
    "sizing"
  ], 
  "LayoutSizingMode": [
    "\"block-like\"", 
    "\"manual\"", 
    "block-like", 
    "manual"
  ], 
  "LayoutWorkletGlobalScope": [
    "registerLayout(name, layoutCtor)"
  ], 
  "LayoutWorkletGlobalScope/registerLayout(name, layoutCtor)": [
    "layoutCtor", 
    "name"
  ], 
  "LinkStyle": [
    "sheet"
  ], 
  "Location": [
    "ancestorOrigins", 
    "assign(url)", 
    "hash", 
    "host", 
    "hostname", 
    "href", 
    "origin", 
    "pathname", 
    "port", 
    "protocol", 
    "reload()", 
    "replace(url)", 
    "search"
  ], 
  "MIME type": [
    "essence", 
    "parameters", 
    "subtype", 
    "type"
  ], 
  "MediaError": [
    "MEDIA_ERR_ABORTED", 
    "MEDIA_ERR_DECODE", 
    "MEDIA_ERR_NETWORK", 
    "MEDIA_ERR_SRC_NOT_SUPPORTED", 
    "code", 
    "message"
  ], 
  "MediaList": [
    "appendMedium(medium)", 
    "collection of media queries", 
    "deleteMedium(medium)", 
    "item(index)", 
    "length", 
    "mediaText", 
    "stringification behavior"
  ], 
  "MediaList/appendMedium(medium)": [
    "medium"
  ], 
  "MediaList/deleteMedium(medium)": [
    "medium"
  ], 
  "MediaList/item(index)": [
    "index"
  ], 
  "MediaQueryList": [
    "addListener(listener)", 
    "change", 
    "document", 
    "matches", 
    "matches state", 
    "media", 
    "onchange", 
    "removeListener(listener)"
  ], 
  "MediaQueryList/addListener(listener)": [
    "listener"
  ], 
  "MediaQueryList/removeListener(listener)": [
    "listener"
  ], 
  "MediaQueryListEvent": [
    "Constructor", 
    "MediaQueryListEvent(type)", 
    "MediaQueryListEvent(type, eventInitDict)", 
    "matches", 
    "media"
  ], 
  "MediaQueryListEvent/MediaQueryListEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "MediaQueryListEventInit": [
    "matches", 
    "media"
  ], 
  "MessageChannel": [
    "port1", 
    "port2"
  ], 
  "MessageEvent": [
    "initMessageEvent()"
  ], 
  "MessageEventInit": [
    "data", 
    "lastEventId", 
    "origin", 
    "ports", 
    "source"
  ], 
  "MessagePort": [
    "close()", 
    "message", 
    "messageerror", 
    "postMessage(message)", 
    "postMessage(message, transfer)", 
    "start()"
  ], 
  "MidiPermissionDescriptor": [
    "sysex"
  ], 
  "MimeType": [
    "description", 
    "enabledPlugin", 
    "suffixes", 
    "type"
  ], 
  "MockSensor": [
    "maxSamplingFrequency", 
    "minSamplingFrequency", 
    "requestedSamplingFrequency"
  ], 
  "MockSensorConfiguration": [
    "connected", 
    "maxSamplingFrequency", 
    "minSamplingFrequency", 
    "mockSensorType"
  ], 
  "MockSensorType": [
    "\"absolute-orientation\"", 
    "\"accelerometer\"", 
    "\"ambient-light\"", 
    "\"geolocation\"", 
    "\"gravity\"", 
    "\"gyroscope\"", 
    "\"linear-acceleration\"", 
    "\"magnetometer\"", 
    "\"proximity\"", 
    "\"relative-orientation\"", 
    "\"uncalibrated-magnetometer\""
  ], 
  "MouseEvent": [
    "Constructor", 
    "MouseEvent(type)", 
    "MouseEvent(type, eventInitDict)", 
    "altKey", 
    "button", 
    "buttons", 
    "clientX", 
    "clientY", 
    "ctrlKey", 
    "getModifierState(keyArg)", 
    "initMouseEvent()", 
    "metaKey", 
    "offsetX", 
    "offsetY", 
    "pageX", 
    "pageY", 
    "relatedTarget", 
    "screenX", 
    "screenY", 
    "shiftKey", 
    "x", 
    "y"
  ], 
  "MouseEvent/MouseEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "MouseEvent/getModifierState(keyArg)": [
    "keyArg"
  ], 
  "MouseEventInit": [
    "button", 
    "buttons", 
    "clientX", 
    "clientY", 
    "relatedTarget", 
    "screenX", 
    "screenY"
  ], 
  "MultiCacheQueryOptions": [
    "cacheName"
  ], 
  "MutationCallback": [
    "mutations", 
    "observer"
  ], 
  "MutationEvent": [
    "ADDITION", 
    "MODIFICATION", 
    "REMOVAL", 
    "attrchange", 
    "attrname", 
    "initMutationEvent()", 
    "newvalue", 
    "prevvalue", 
    "relatednode"
  ], 
  "MutationObserver": [
    "MutationObserver(callback)", 
    "callback", 
    "disconnect()", 
    "node list", 
    "observe(target)", 
    "observe(target, options)", 
    "record queue", 
    "takeRecords()"
  ], 
  "MutationObserver/MutationObserver(callback)": [
    "callback"
  ], 
  "MutationObserver/observe(target)": [
    "options", 
    "target"
  ], 
  "MutationObserver/observe(target, options)": [
    "options", 
    "target"
  ], 
  "MutationObserverInit": [
    "attributeFilter", 
    "attributeOldValue", 
    "attributes", 
    "characterData", 
    "characterDataOldValue", 
    "childList", 
    "subtree"
  ], 
  "MutationRecord": [
    "addedNodes", 
    "attributeName", 
    "attributeNamespace", 
    "nextSibling", 
    "oldValue", 
    "previousSibling", 
    "removedNodes", 
    "target", 
    "type"
  ], 
  "NamedFlow": [
    "firstEmptyRegionIndex", 
    "getContent()", 
    "getRegions()", 
    "getRegionsByContent", 
    "getRegionsByContent()", 
    "getRegionsByContent(node)", 
    "name", 
    "overset"
  ], 
  "NamedFlow/getRegionsByContent()": [
    "node"
  ], 
  "NamedFlow/getRegionsByContent(node)": [
    "node"
  ], 
  "NamedFlowMap": [
    "delete", 
    "delete()", 
    "delete(flowName)", 
    "get", 
    "get()", 
    "get(flowName)", 
    "has", 
    "has()", 
    "has(flowName)", 
    "set", 
    "set()", 
    "set(flowName, flowValue)"
  ], 
  "NamedFlowMap/delete()": [
    "flowName"
  ], 
  "NamedFlowMap/delete(flowName)": [
    "flowName"
  ], 
  "NamedFlowMap/get()": [
    "flowName"
  ], 
  "NamedFlowMap/get(flowName)": [
    "flowName"
  ], 
  "NamedFlowMap/has()": [
    "flowName"
  ], 
  "NamedFlowMap/has(flowName)": [
    "flowName"
  ], 
  "NamedFlowMap/set()": [
    "flowName", 
    "flowValue"
  ], 
  "NamedFlowMap/set(flowName, flowValue)": [
    "flowName", 
    "flowValue"
  ], 
  "NamedNodeMap": [
    "attribute list", 
    "element", 
    "getNamedItem(qualifiedName)", 
    "getNamedItemNS(namespace, localName)", 
    "item(index)", 
    "length", 
    "removeNamedItem(qualifiedName)", 
    "removeNamedItemNS(namespace, localName)", 
    "setNamedItem(attr)", 
    "setNamedItemNS(attr)"
  ], 
  "NamedNodeMap/getNamedItem(qualifiedName)": [
    "qualifiedName"
  ], 
  "NamedNodeMap/getNamedItemNS(namespace, localName)": [
    "localName", 
    "namespace"
  ], 
  "NamedNodeMap/item(index)": [
    "index"
  ], 
  "NamedNodeMap/removeNamedItem(qualifiedName)": [
    "qualifiedName"
  ], 
  "NamedNodeMap/removeNamedItemNS(namespace, localName)": [
    "localName", 
    "namespace"
  ], 
  "NamedNodeMap/setNamedItem(attr)": [
    "attr"
  ], 
  "NamedNodeMap/setNamedItemNS(attr)": [
    "attr"
  ], 
  "NavigationEvent": [
    "Constructor", 
    "NavigationEvent(type)", 
    "NavigationEvent(type, eventInitDict)", 
    "dir", 
    "navbeforefocus", 
    "navnotarget", 
    "relatedTarget"
  ], 
  "NavigationEvent/NavigationEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "NavigationEventInit": [
    "dir", 
    "relatedTarget"
  ], 
  "NavigationPreloadManager": [
    "disable()", 
    "enable()", 
    "getState()", 
    "setHeaderValue(value)"
  ], 
  "NavigationPreloadManager/setHeaderValue(value)": [
    "value"
  ], 
  "NavigationPreloadState": [
    "enabled", 
    "headerValue"
  ], 
  "Navigator": [
    "bluetooth", 
    "credentials", 
    "permissions", 
    "serviceWorker", 
    "usb"
  ], 
  "NavigatorContentUtils": [
    "registerProtocolHandler()", 
    "unregisterProtocolHandler()"
  ], 
  "NavigatorCookies": [
    "cookieEnabled"
  ], 
  "NavigatorID": [
    "appCodeName", 
    "appName", 
    "appVersion", 
    "oscpu", 
    "platform", 
    "product", 
    "productSub", 
    "taintEnabled()", 
    "userAgent", 
    "vendor", 
    "vendorSub"
  ], 
  "NavigatorLanguage": [
    "language", 
    "languages"
  ], 
  "NavigatorStorage": [
    "storage"
  ], 
  "Node": [
    "ATTRIBUTE_NODE", 
    "CDATA_SECTION_NODE", 
    "COMMENT_NODE", 
    "DOCUMENT_FRAGMENT_NODE", 
    "DOCUMENT_NODE", 
    "DOCUMENT_POSITION_CONTAINED_BY", 
    "DOCUMENT_POSITION_CONTAINS", 
    "DOCUMENT_POSITION_DISCONNECTED", 
    "DOCUMENT_POSITION_FOLLOWING", 
    "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC", 
    "DOCUMENT_POSITION_PRECEDING", 
    "DOCUMENT_TYPE_NODE", 
    "ELEMENT_NODE", 
    "ENTITY_NODE", 
    "ENTITY_REFERENCE_NODE", 
    "NOTATION_NODE", 
    "PROCESSING_INSTRUCTION_NODE", 
    "TEXT_NODE", 
    "appendChild(node)", 
    "attributes", 
    "baseURI", 
    "childNodes", 
    "cloneNode()", 
    "cloneNode(deep)", 
    "compareDocumentPosition(other)", 
    "contains(other)", 
    "empty", 
    "ensure pre-insertion validity", 
    "equals", 
    "firstChild", 
    "getFeature()", 
    "getRootNode()", 
    "getRootNode(options)", 
    "getUserData()", 
    "hasAttributes()", 
    "hasChildNodes()", 
    "insertBefore(node, child)", 
    "isConnected", 
    "isDefaultNamespace(namespace)", 
    "isEqualNode(otherNode)", 
    "isSameNode(otherNode)", 
    "isSupported", 
    "lastChild", 
    "length", 
    "localName", 
    "lookupNamespaceURI(prefix)", 
    "lookupPrefix(namespace)", 
    "namespaceURI", 
    "nextSibling", 
    "node document", 
    "nodeName", 
    "nodeType", 
    "nodeValue", 
    "normalize()", 
    "ownerDocument", 
    "parentElement", 
    "parentNode", 
    "prefix", 
    "previousSibling", 
    "removeChild(child)", 
    "replace all", 
    "replaceChild(node, child)", 
    "setUserData()", 
    "supported tokens", 
    "textContent"
  ], 
  "Node/appendChild(node)": [
    "node"
  ], 
  "Node/cloneNode()": [
    "deep"
  ], 
  "Node/cloneNode(deep)": [
    "deep"
  ], 
  "Node/compareDocumentPosition(other)": [
    "other"
  ], 
  "Node/contains(other)": [
    "other"
  ], 
  "Node/getRootNode()": [
    "options"
  ], 
  "Node/getRootNode(options)": [
    "options"
  ], 
  "Node/insertBefore(node, child)": [
    "child", 
    "node"
  ], 
  "Node/isDefaultNamespace(namespace)": [
    "namespace"
  ], 
  "Node/isEqualNode(otherNode)": [
    "otherNode"
  ], 
  "Node/isSameNode(otherNode)": [
    "otherNode"
  ], 
  "Node/lookupNamespaceURI(prefix)": [
    "prefix"
  ], 
  "Node/lookupPrefix(namespace)": [
    "namespace"
  ], 
  "Node/removeChild(child)": [
    "child"
  ], 
  "Node/replaceChild(node, child)": [
    "child", 
    "node"
  ], 
  "NodeFilter": [
    "FILTER_ACCEPT", 
    "FILTER_REJECT", 
    "FILTER_SKIP", 
    "SHOW_ALL", 
    "SHOW_ATTRIBUTE", 
    "SHOW_CDATA_SECTION", 
    "SHOW_COMMENT", 
    "SHOW_DOCUMENT", 
    "SHOW_DOCUMENT_FRAGMENT", 
    "SHOW_DOCUMENT_TYPE", 
    "SHOW_ELEMENT", 
    "SHOW_ENTITY", 
    "SHOW_ENTITY_REFERENCE", 
    "SHOW_NOTATION", 
    "SHOW_PROCESSING_INSTRUCTION", 
    "SHOW_TEXT", 
    "acceptNode", 
    "acceptNode(node)"
  ], 
  "NodeFilter/acceptNode(node)": [
    "node"
  ], 
  "NodeIterator": [
    "detach()", 
    "expandEntityReferences", 
    "filter", 
    "iterator collection", 
    "nextNode()", 
    "pointer before reference", 
    "pointerBeforeReferenceNode", 
    "previousNode()", 
    "reference", 
    "referenceNode", 
    "root", 
    "traverse", 
    "whatToShow"
  ], 
  "NodeList": [
    "item(index)", 
    "length"
  ], 
  "NodeList/item(index)": [
    "index"
  ], 
  "NonDocumentTypeChildNode": [
    "nextElementSibling", 
    "previousElementSibling"
  ], 
  "NonElementParentNode": [
    "getElementById(elementId)"
  ], 
  "NonElementParentNode/getElementById(elementId)": [
    "elementId"
  ], 
  "OffscreenCanvas": [
    "convertToBlob()", 
    "getContext(contextId)", 
    "height", 
    "transferToImageBitmap()", 
    "width"
  ], 
  "OptionalEffectTiming": [
    "delay", 
    "direction", 
    "duration", 
    "easing", 
    "endDelay", 
    "fill", 
    "iterationStart", 
    "iterations"
  ], 
  "OrientationLockType": [
    "orientation lock", 
    "pre-lock conditions"
  ], 
  "OrientationType": [
    "current orientation angle", 
    "current orientation type", 
    "screen orientation values table"
  ], 
  "PageTransitionEventInit": [
    "persisted"
  ], 
  "PaintRenderingContext2D": [
    "alpha", 
    "output bitmap"
  ], 
  "PaintRenderingContext2DSettings": [
    "alpha"
  ], 
  "PaintSize": [
    "height", 
    "width"
  ], 
  "PaintWorkletGlobalScope": [
    "devicePixelRatio", 
    "registerPaint(name, paintCtor)"
  ], 
  "PaintWorkletGlobalScope/registerPaint(name, paintCtor)": [
    "name", 
    "paintCtor"
  ], 
  "ParentNode": [
    "append(...nodes)", 
    "append(nodes)", 
    "childElementCount", 
    "children", 
    "firstElementChild", 
    "lastElementChild", 
    "prepend(...nodes)", 
    "prepend(nodes)", 
    "querySelector(selectors)", 
    "querySelectorAll(selectors)"
  ], 
  "ParentNode/append(...nodes)": [
    "nodes"
  ], 
  "ParentNode/prepend(...nodes)": [
    "nodes"
  ], 
  "ParentNode/querySelector(selectors)": [
    "selectors"
  ], 
  "ParentNode/querySelectorAll(selectors)": [
    "selectors"
  ], 
  "PasswordCredential": [
    "PasswordCredential(data)", 
    "PasswordCredential(form)", 
    "[[CollectFromCredentialStore]](origin, options, sameOriginWithAncestors)", 
    "[[Create]](origin, options, sameOriginWithAncestors)", 
    "[[Store]](credential, sameOriginWithAncestors)", 
    "password"
  ], 
  "PasswordCredential/PasswordCredential(data)": [
    "data"
  ], 
  "PasswordCredential/PasswordCredential(form)": [
    "form"
  ], 
  "PasswordCredentialData": [
    "iconURL", 
    "name", 
    "origin", 
    "password"
  ], 
  "Path2D": [
    "addPath(b, transform)"
  ], 
  "Performance": [
    "performance"
  ], 
  "PermissionDescriptor": [
    "name", 
    "stronger than"
  ], 
  "PermissionName": [
    "\"accelerometer\"", 
    "\"ambient-light-sensor\"", 
    "\"background-fetch\"", 
    "\"background-sync\"", 
    "\"bluetooth\"", 
    "\"camera\"", 
    "\"clipboard\"", 
    "\"device-info\"", 
    "\"display\"", 
    "\"geolocation\"", 
    "\"gyroscope\"", 
    "\"magnetometer\"", 
    "\"microphone\"", 
    "\"midi\"", 
    "\"notifications\"", 
    "\"persistent-storage\"", 
    "\"push\"", 
    "\"speaker\"", 
    "\"usb\""
  ], 
  "PermissionSetParameters": [
    "descriptor", 
    "oneRealm", 
    "state"
  ], 
  "PermissionState": [
    "\"denied\"", 
    "\"granted\"", 
    "\"prompt\""
  ], 
  "PermissionStatus": [
    "[[query]]", 
    "onchange", 
    "state"
  ], 
  "Permissions": [
    "query(permissionDesc)", 
    "request(permissionDesc)", 
    "revoke(permissionDesc)"
  ], 
  "Permissions/query(permissionDesc)": [
    "permissionDesc"
  ], 
  "Permissions/request(permissionDesc)": [
    "permissionDesc"
  ], 
  "Permissions/revoke(permissionDesc)": [
    "permissionDesc"
  ], 
  "PlaybackDirection": [
    "\"alternate\"", 
    "\"alternate-reverse\"", 
    "\"normal\"", 
    "\"reverse\""
  ], 
  "Plugin": [
    "filename", 
    "item()", 
    "length", 
    "name", 
    "namedItem()"
  ], 
  "PluginArray": [
    "refresh()"
  ], 
  "PopStateEventInit": [
    "state"
  ], 
  "ProcessingInstruction": [
    "substring data", 
    "target"
  ], 
  "ProgressEvent": [
    "Constructor", 
    "ProgressEvent(type)", 
    "ProgressEvent(type, eventInitDict)", 
    "lengthComputable", 
    "loaded", 
    "total"
  ], 
  "ProgressEvent/ProgressEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "ProgressEventInit": [
    "lengthComputable", 
    "loaded", 
    "total"
  ], 
  "PromiseRejectionEventInit": [
    "promise", 
    "reason"
  ], 
  "PropertyDescriptor": [
    "inherits", 
    "initialValue", 
    "name", 
    "syntax"
  ], 
  "PublicKeyCredential": [
    "[[CollectFromCredentialStore]](origin, options, sameOriginWithAncestors)", 
    "[[Create]](origin, options, sameOriginWithAncestors)", 
    "[[DiscoverFromExternalSource]](origin, options, sameOriginWithAncestors)", 
    "[[Store]](credential, sameOriginWithAncestors)", 
    "[[clientExtensionsResults]]", 
    "[[discovery]]", 
    "[[identifier]]", 
    "[[preventSilentAccess]](credential, sameOriginWithAncestors)", 
    "[[type]]", 
    "getClientExtensionResults", 
    "getClientExtensionResults()", 
    "isUserVerifyingPlatformAuthenticatorAvailable", 
    "isUserVerifyingPlatformAuthenticatorAvailable()", 
    "rawId", 
    "response"
  ], 
  "PublicKeyCredential/[[Create]](origin, options, sameOriginWithAncestors)": [
    "options", 
    "origin", 
    "sameOriginWithAncestors"
  ], 
  "PublicKeyCredential/[[DiscoverFromExternalSource]](origin, options, sameOriginWithAncestors)": [
    "options", 
    "origin", 
    "sameOriginWithAncestors"
  ], 
  "PublicKeyCredential/[[Store]](credential, sameOriginWithAncestors)": [
    "credential", 
    "sameOriginWithAncestors"
  ], 
  "PublicKeyCredentialCreationOptions": [
    "attestation", 
    "authenticatorSelection", 
    "challenge", 
    "excludeCredentials", 
    "extensions", 
    "pubKeyCredParams", 
    "rp", 
    "timeout", 
    "user"
  ], 
  "PublicKeyCredentialDescriptor": [
    "id", 
    "transports", 
    "type"
  ], 
  "PublicKeyCredentialEntity": [
    "icon", 
    "name"
  ], 
  "PublicKeyCredentialParameters": [
    "alg", 
    "type"
  ], 
  "PublicKeyCredentialRequestOptions": [
    "allowCredentials", 
    "challenge", 
    "extensions", 
    "rpId", 
    "timeout", 
    "userVerification"
  ], 
  "PublicKeyCredentialRpEntity": [
    "id"
  ], 
  "PublicKeyCredentialType": [
    "public-key"
  ], 
  "PublicKeyCredentialUserEntity": [
    "displayName", 
    "id"
  ], 
  "PushPermissionDescriptor": [
    "userVisibleOnly"
  ], 
  "RadioNodeList": [
    "value"
  ], 
  "Range": [
    "END_TO_END", 
    "END_TO_START", 
    "Range()", 
    "START_TO_END", 
    "START_TO_START", 
    "cloneContents()", 
    "cloneRange()", 
    "collapse()", 
    "collapse(toStart)", 
    "commonAncestorContainer", 
    "compareBoundaryPoints(how, sourceRange)", 
    "comparePoint(node, offset)", 
    "deleteContents()", 
    "detach()", 
    "extractContents()", 
    "getBoundingClientRect()", 
    "getClientRects()", 
    "insertNode(node)", 
    "intersectsNode(node)", 
    "isPointInRange(node, offset)", 
    "selectNode(node)", 
    "selectNodeContents(node)", 
    "set the end", 
    "set the start", 
    "setEnd(node, offset)", 
    "setEndAfter(node)", 
    "setEndBefore(node)", 
    "setStart(node, offset)", 
    "setStartAfter(node)", 
    "setStartBefore(node)", 
    "stringification behavior", 
    "surroundContents(newParent)"
  ], 
  "Range/collapse()": [
    "toStart"
  ], 
  "Range/collapse(toStart)": [
    "toStart"
  ], 
  "Range/compareBoundaryPoints(how, sourceRange)": [
    "how", 
    "sourceRange"
  ], 
  "Range/comparePoint(node, offset)": [
    "node", 
    "offset"
  ], 
  "Range/insertNode(node)": [
    "node"
  ], 
  "Range/intersectsNode(node)": [
    "node"
  ], 
  "Range/isPointInRange(node, offset)": [
    "node", 
    "offset"
  ], 
  "Range/selectNode(node)": [
    "node"
  ], 
  "Range/selectNodeContents(node)": [
    "node"
  ], 
  "Range/setEnd(node, offset)": [
    "node", 
    "offset"
  ], 
  "Range/setEndAfter(node)": [
    "node"
  ], 
  "Range/setEndBefore(node)": [
    "node"
  ], 
  "Range/setStart(node, offset)": [
    "node", 
    "offset"
  ], 
  "Range/setStartAfter(node)": [
    "node"
  ], 
  "Range/setStartBefore(node)": [
    "node"
  ], 
  "Range/surroundContents(newParent)": [
    "newParent"
  ], 
  "ReadableByteStreamController": [
    "ReadableByteStreamController()", 
    "byobRequest", 
    "close()", 
    "desiredSize", 
    "enqueue(chunk)", 
    "error(e)"
  ], 
  "ReadableStream": [
    "ReadableStream(underlyingSource, strategy)", 
    "[@@asyncIterator]({ preventCancel } = {})", 
    "cancel", 
    "cancel(reason)", 
    "close", 
    "closed", 
    "construct a fixed readablestream object", 
    "construct a readablestream object", 
    "disturbed", 
    "empty", 
    "enqueue", 
    "error", 
    "errored", 
    "get a reader", 
    "getIterator({ preventCancel } = {})", 
    "getReader({ mode } = {})", 
    "locked", 
    "need more data", 
    "pipeThrough(transform, options)", 
    "pipeTo(dest, options)", 
    "read a chunk", 
    "read all bytes", 
    "readable", 
    "tee", 
    "tee()"
  ], 
  "ReadableStreamAsyncIteratorPrototype": [
    "next()", 
    "return(value)"
  ], 
  "ReadableStreamBYOBReader": [
    "ReadableStreamBYOBReader(stream)", 
    "cancel(reason)", 
    "closed", 
    "read(view)", 
    "releaseLock()"
  ], 
  "ReadableStreamBYOBRequest": [
    "ReadableStreamBYOBRequest(controller, view)", 
    "respond(bytesWritten)", 
    "respondWithNewView(view)", 
    "view"
  ], 
  "ReadableStreamDefaultController": [
    "ReadableStreamDefaultController()", 
    "close()", 
    "desiredSize", 
    "enqueue(chunk)", 
    "error(e)"
  ], 
  "ReadableStreamDefaultReader": [
    "ReadableStreamDefaultReader(stream)", 
    "cancel(reason)", 
    "closed", 
    "read()", 
    "releaseLock()"
  ], 
  "Realm": [
    "change", 
    "global object", 
    "settings object"
  ], 
  "ReferrerPolicy": [
    "", 
    "\"\"", 
    "\"no-referrer\"", 
    "\"no-referrer-when-downgrade\"", 
    "\"origin\"", 
    "\"origin-when-cross-origin\"", 
    "\"same-origin\"", 
    "\"strict-origin\"", 
    "\"strict-origin-when-cross-origin\"", 
    "\"unsafe-url\"", 
    "no-referrer", 
    "no-referrer-when-downgrade", 
    "origin", 
    "origin-when-cross-origin", 
    "same-origin", 
    "strict-origin", 
    "strict-origin-when-cross-origin", 
    "unsafe-url"
  ], 
  "Region": [
    "getRegionFlowRanges()", 
    "regionOverset"
  ], 
  "RegistrationOptions": [
    "scope", 
    "type", 
    "updateViaCache"
  ], 
  "Report": [
    "body", 
    "type", 
    "url"
  ], 
  "ReportTo": [
    "endpoints", 
    "group", 
    "include_subdomains", 
    "max_age", 
    "priority", 
    "url", 
    "weight"
  ], 
  "ReportingObserver": [
    "ReportingObserver(callback, options)", 
    "callback", 
    "disconnect()", 
    "observe()", 
    "options", 
    "report queue", 
    "takeRecords()"
  ], 
  "ReportingObserver/ReportingObserver(callback, options)": [
    "callback", 
    "options"
  ], 
  "ReportingObserverCallback": [
    "observer", 
    "reports"
  ], 
  "ReportingObserverOptions": [
    "buffered", 
    "types"
  ], 
  "Request": [
    "Request(input, init)", 
    "cache", 
    "clone()", 
    "credentials", 
    "destination", 
    "headers", 
    "integrity", 
    "isHistoryNavigation", 
    "isReloadNavigation", 
    "keepalive", 
    "method", 
    "mode", 
    "redirect", 
    "referrer", 
    "referrerPolicy", 
    "request", 
    "signal", 
    "url"
  ], 
  "Request/Request(input, init)": [
    "init", 
    "input"
  ], 
  "RequestCache": [
    "\"default\"", 
    "\"force-cache\"", 
    "\"no-cache\"", 
    "\"no-store\"", 
    "\"only-if-cached\"", 
    "\"reload\""
  ], 
  "RequestCredentials": [
    "\"include\"", 
    "\"omit\"", 
    "\"same-origin\""
  ], 
  "RequestDestination": [
    "\"\"", 
    "\"audio\"", 
    "\"audioworklet\"", 
    "\"document\"", 
    "\"embed\"", 
    "\"font\"", 
    "\"image\"", 
    "\"manifest\"", 
    "\"object\"", 
    "\"paintworklet\"", 
    "\"report\"", 
    "\"script\"", 
    "\"sharedworker\"", 
    "\"style\"", 
    "\"track\"", 
    "\"video\"", 
    "\"worker\"", 
    "\"xslt\""
  ], 
  "RequestDeviceOptions": [
    "acceptAllDevices", 
    "filters", 
    "optionalServices"
  ], 
  "RequestInit": [
    "body", 
    "cache", 
    "credentials", 
    "headers", 
    "integrity", 
    "keepalive", 
    "method", 
    "mode", 
    "redirect", 
    "referrer", 
    "referrerPolicy", 
    "signal", 
    "window"
  ], 
  "RequestMode": [
    "\"cors\"", 
    "\"navigate\"", 
    "\"no-cors\"", 
    "\"same-origin\""
  ], 
  "RequestRedirect": [
    "\"error\"", 
    "\"follow\"", 
    "\"manual\""
  ], 
  "ResidentKeyRequirement": [
    "discouraged", 
    "preferred", 
    "required"
  ], 
  "ResizeObservation": [
    "Constructor", 
    "ResizeObservation(target)", 
    "ResizeObservation(target, options)", 
    "isActive()", 
    "lastReportedSize", 
    "observedBox", 
    "target"
  ], 
  "ResizeObservation/ResizeObservation(target)": [
    "target"
  ], 
  "ResizeObserver": [
    "ResizeObserver(callback)", 
    "activeTargets", 
    "callback", 
    "disconnect()", 
    "observationTargets", 
    "observe(target)", 
    "observe(target, options)", 
    "skippedTargets", 
    "unobserve(target)"
  ], 
  "ResizeObserver/ResizeObserver(callback)": [
    "callback"
  ], 
  "ResizeObserver/observe(target)": [
    "options", 
    "target"
  ], 
  "ResizeObserver/observe(target, options)": [
    "options", 
    "target"
  ], 
  "ResizeObserver/unobserve(target)": [
    "target"
  ], 
  "ResizeObserverBoxOptions": [
    "\"border-box\"", 
    "\"content-box\""
  ], 
  "ResizeObserverCallback": [
    "entries", 
    "observer"
  ], 
  "ResizeObserverEntry": [
    "ResizeObserverEntry(target)", 
    "borderBoxSize", 
    "contentBoxSize", 
    "contentRect", 
    "target"
  ], 
  "ResizeObserverEntry/ResizeObserverEntry(target)": [
    "target"
  ], 
  "ResizeObserverOptions": [
    "box"
  ], 
  "ResizeObserverSize": [
    "blockSize", 
    "inlineSize"
  ], 
  "Response": [
    "Response(body, init)", 
    "clone()", 
    "error()", 
    "headers", 
    "ok", 
    "redirect(url, status)", 
    "redirected", 
    "response", 
    "status", 
    "statusText", 
    "trailer", 
    "trailer promise", 
    "type", 
    "url"
  ], 
  "Response/Response(body, init)": [
    "body", 
    "init"
  ], 
  "Response/redirect(url)": [
    "status", 
    "url"
  ], 
  "Response/redirect(url, status)": [
    "status", 
    "url"
  ], 
  "ResponseInit": [
    "headers", 
    "status", 
    "statusText"
  ], 
  "ResponseType": [
    "\"basic\"", 
    "\"cors\"", 
    "\"default\"", 
    "\"error\"", 
    "\"opaque\"", 
    "\"opaqueredirect\""
  ], 
  "SVGClipPathElement": [
    "clipPathUnits", 
    "transform"
  ], 
  "SVGComponentTransferFunctionElement": [
    "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE", 
    "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA", 
    "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY", 
    "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR", 
    "SVG_FECOMPONENTTRANSFER_TYPE_TABLE", 
    "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN", 
    "amplitude", 
    "exponent", 
    "intercept", 
    "offset", 
    "slope", 
    "tableValues", 
    "type"
  ], 
  "SVGFEBlendElement": [
    "SVG_FEBLEND_MODE_COLOR", 
    "SVG_FEBLEND_MODE_COLOR_BURN", 
    "SVG_FEBLEND_MODE_COLOR_DODGE", 
    "SVG_FEBLEND_MODE_DARKEN", 
    "SVG_FEBLEND_MODE_DIFFERENCE", 
    "SVG_FEBLEND_MODE_EXCLUSION", 
    "SVG_FEBLEND_MODE_HARD_LIGHT", 
    "SVG_FEBLEND_MODE_HUE", 
    "SVG_FEBLEND_MODE_LIGHTEN", 
    "SVG_FEBLEND_MODE_LUMINOSITY", 
    "SVG_FEBLEND_MODE_MULTIPLY", 
    "SVG_FEBLEND_MODE_NORMAL", 
    "SVG_FEBLEND_MODE_OVERLAY", 
    "SVG_FEBLEND_MODE_SATURATION", 
    "SVG_FEBLEND_MODE_SCREEN", 
    "SVG_FEBLEND_MODE_SOFT_LIGHT", 
    "SVG_FEBLEND_MODE_UNKNOWN", 
    "in1", 
    "in2", 
    "mode"
  ], 
  "SVGFEColorMatrixElement": [
    "SVG_FECOLORMATRIX_TYPE_HUEROTATE", 
    "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA", 
    "SVG_FECOLORMATRIX_TYPE_MATRIX", 
    "SVG_FECOLORMATRIX_TYPE_SATURATE", 
    "SVG_FECOLORMATRIX_TYPE_UNKNOWN", 
    "in1", 
    "type", 
    "values"
  ], 
  "SVGFEComponentTransferElement": [
    "in1"
  ], 
  "SVGFECompositeElement": [
    "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC", 
    "SVG_FECOMPOSITE_OPERATOR_ATOP", 
    "SVG_FECOMPOSITE_OPERATOR_IN", 
    "SVG_FECOMPOSITE_OPERATOR_OUT", 
    "SVG_FECOMPOSITE_OPERATOR_OVER", 
    "SVG_FECOMPOSITE_OPERATOR_UNKNOWN", 
    "SVG_FECOMPOSITE_OPERATOR_XOR", 
    "in1", 
    "in2", 
    "k1", 
    "k2", 
    "k3", 
    "k4", 
    "operator"
  ], 
  "SVGFEConvolveMatrixElement": [
    "SVG_EDGEMODE_DUPLICATE", 
    "SVG_EDGEMODE_NONE", 
    "SVG_EDGEMODE_UNKNOWN", 
    "SVG_EDGEMODE_WRAP", 
    "bias", 
    "divisor", 
    "edgeMode", 
    "in1", 
    "kernelMatrix", 
    "kernelUnitLengthX", 
    "kernelUnitLengthY", 
    "orderX", 
    "orderY", 
    "preserveAlpha", 
    "targetX", 
    "targetY"
  ], 
  "SVGFEDiffuseLightingElement": [
    "diffuseConstant", 
    "in1", 
    "kernelUnitLengthX", 
    "kernelUnitLengthY", 
    "surfaceScale"
  ], 
  "SVGFEDisplacementMapElement": [
    "SVG_CHANNEL_A", 
    "SVG_CHANNEL_B", 
    "SVG_CHANNEL_G", 
    "SVG_CHANNEL_R", 
    "SVG_CHANNEL_UNKNOWN", 
    "in1", 
    "in2", 
    "scale", 
    "xChannelSelector", 
    "yChannelSelector"
  ], 
  "SVGFEDistantLightElement": [
    "azimuth", 
    "elevation"
  ], 
  "SVGFEDropShadowElement": [
    "dx", 
    "dy", 
    "in1", 
    "setStdDeviation(stdDeviationX, stdDeviationY)", 
    "stdDeviationX", 
    "stdDeviationY"
  ], 
  "SVGFEDropShadowElement/setStdDeviation(stdDeviationX, stdDeviationY)": [
    "stdDeviationX", 
    "stdDeviationY"
  ], 
  "SVGFEGaussianBlurElement": [
    "SVG_EDGEMODE_DUPLICATE", 
    "SVG_EDGEMODE_NONE", 
    "SVG_EDGEMODE_UNKNOWN", 
    "SVG_EDGEMODE_WRAP", 
    "edgeMode", 
    "in1", 
    "setStdDeviation(stdDeviationX, stdDeviationY)", 
    "stdDeviationX", 
    "stdDeviationY"
  ], 
  "SVGFEGaussianBlurElement/setStdDeviation(stdDeviationX, stdDeviationY)": [
    "stdDeviationX", 
    "stdDeviationY"
  ], 
  "SVGFEImageElement": [
    "crossOrigin", 
    "preserveAspectRatio"
  ], 
  "SVGFEMergeNodeElement": [
    "in1"
  ], 
  "SVGFEMorphologyElement": [
    "SVG_MORPHOLOGY_OPERATOR_DILATE", 
    "SVG_MORPHOLOGY_OPERATOR_ERODE", 
    "SVG_MORPHOLOGY_OPERATOR_UNKNOWN", 
    "in1", 
    "operator", 
    "radiusX", 
    "radiusY"
  ], 
  "SVGFEOffsetElement": [
    "dx", 
    "dy", 
    "in1"
  ], 
  "SVGFEPointLightElement": [
    "x", 
    "y", 
    "z"
  ], 
  "SVGFESpecularLightingElement": [
    "in1", 
    "kernelUnitLengthX", 
    "kernelUnitLengthY", 
    "specularConstant", 
    "specularExponent", 
    "surfaceScale"
  ], 
  "SVGFESpotLightElement": [
    "limitingConeAngle", 
    "pointsAtX", 
    "pointsAtY", 
    "pointsAtZ", 
    "specularExponent", 
    "x", 
    "y", 
    "z"
  ], 
  "SVGFETileElement": [
    "in1"
  ], 
  "SVGFETurbulenceElement": [
    "SVG_STITCHTYPE_NOSTITCH", 
    "SVG_STITCHTYPE_STITCH", 
    "SVG_STITCHTYPE_UNKNOWN", 
    "SVG_TURBULENCE_TYPE_FRACTALNOISE", 
    "SVG_TURBULENCE_TYPE_TURBULENCE", 
    "SVG_TURBULENCE_TYPE_UNKNOWN", 
    "baseFrequencyX", 
    "baseFrequencyY", 
    "numOctaves", 
    "seed", 
    "stitchTiles", 
    "type"
  ], 
  "SVGFilterElement": [
    "filterUnits", 
    "height", 
    "primitiveUnits", 
    "width", 
    "x", 
    "y"
  ], 
  "SVGFilterPrimitiveStandardAttributes": [
    "height", 
    "result", 
    "width", 
    "x", 
    "y"
  ], 
  "SVGMaskElement": [
    "height", 
    "maskContentUnits", 
    "maskUnits", 
    "width", 
    "x", 
    "y"
  ], 
  "Screen": [
    "availHeight", 
    "availWidth", 
    "colorDepth", 
    "height", 
    "pixelDepth", 
    "width"
  ], 
  "ScrollBehavior": [
    "\"auto\"", 
    "\"instant\"", 
    "\"smooth\""
  ], 
  "ScrollIntoViewOptions": [
    "block", 
    "inline"
  ], 
  "ScrollLogicalPosition": [
    "\"center\"", 
    "\"end\"", 
    "\"nearest\"", 
    "\"start\""
  ], 
  "ScrollOptions": [
    "behavior"
  ], 
  "ScrollToOptions": [
    "left", 
    "top"
  ], 
  "SecurityPolicyViolationEvent": [
    "Constructor", 
    "SecurityPolicyViolationEvent(type)", 
    "SecurityPolicyViolationEvent(type, eventInitDict)", 
    "blockedURI", 
    "blockedURL", 
    "colno", 
    "columnNumber", 
    "disposition", 
    "documentURI", 
    "documentURL", 
    "effectiveDirective", 
    "lineNumber", 
    "lineno", 
    "originalPolicy", 
    "referrer", 
    "sample", 
    "sourceFile", 
    "statusCode", 
    "violatedDirective"
  ], 
  "SecurityPolicyViolationEvent/SecurityPolicyViolationEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "SecurityPolicyViolationEventDisposition": [
    "\"enforce\"", 
    "\"report\"", 
    "enforce", 
    "report"
  ], 
  "SecurityPolicyViolationEventInit": [
    "blockedURI", 
    "blockedURL", 
    "colno", 
    "columnNumber", 
    "disposition", 
    "documentURI", 
    "documentURL", 
    "effectiveDirective", 
    "lineNumber", 
    "lineno", 
    "originalPolicy", 
    "referrer", 
    "sample", 
    "sourceFile", 
    "statusCode", 
    "violatedDirective"
  ], 
  "Sensor": [
    "[[frequency]]", 
    "[[lastEventFiredAt]]", 
    "[[pendingReadingNotification]]", 
    "[[state]]", 
    "activated", 
    "hasReading", 
    "onactivate", 
    "onerror", 
    "onreading", 
    "start", 
    "start()", 
    "stop", 
    "stop()", 
    "timestamp"
  ], 
  "SensorErrorEvent": [
    "Constructor", 
    "SensorErrorEvent(type, errorEventInitDict)", 
    "error"
  ], 
  "SensorErrorEvent/SensorErrorEvent(type, errorEventInitDict)": [
    "errorEventInitDict", 
    "type"
  ], 
  "SensorErrorEventInit": [
    "error"
  ], 
  "SensorOptions": [
    "frequency"
  ], 
  "ServiceEventHandlers": [
    "onserviceadded", 
    "onservicechanged", 
    "onserviceremoved"
  ], 
  "ServiceWorker": [
    "onstatechange", 
    "postMessage(message, options)", 
    "postMessage(message, transfer)", 
    "scriptURL", 
    "state", 
    "statechange"
  ], 
  "ServiceWorker/postMessage(message)": [
    "message", 
    "options", 
    "transfer"
  ], 
  "ServiceWorker/postMessage(message, options)": [
    "message", 
    "options"
  ], 
  "ServiceWorker/postMessage(message, transfer)": [
    "message", 
    "transfer"
  ], 
  "ServiceWorkerContainer": [
    "client message queue", 
    "controller", 
    "controllerchange", 
    "getRegistration()", 
    "getRegistration(clientURL)", 
    "getRegistrations()", 
    "message", 
    "messageerror", 
    "oncontrollerchange", 
    "onmessage", 
    "onmessageerror", 
    "ready", 
    "ready promise", 
    "register(scriptURL)", 
    "register(scriptURL, options)", 
    "service worker client", 
    "startMessages()"
  ], 
  "ServiceWorkerContainer/getRegistration()": [
    "clientURL"
  ], 
  "ServiceWorkerContainer/getRegistration(clientURL)": [
    "clientURL"
  ], 
  "ServiceWorkerContainer/register(scriptURL)": [
    "options", 
    "scriptURL"
  ], 
  "ServiceWorkerContainer/register(scriptURL, options)": [
    "options", 
    "scriptURL"
  ], 
  "ServiceWorkerGlobalScope": [
    "activate", 
    "clients", 
    "fetch", 
    "force bypass cache for importscripts flag", 
    "importScripts(urls)", 
    "install", 
    "message", 
    "messageerror", 
    "onactivate", 
    "onfetch", 
    "oninstall", 
    "onmessage", 
    "onmessageerror", 
    "onsync", 
    "registration", 
    "service worker", 
    "skipWaiting()"
  ], 
  "ServiceWorkerRegistration": [
    "active", 
    "installing", 
    "navigationPreload", 
    "onupdatefound", 
    "scope", 
    "service worker registration", 
    "sync", 
    "unregister()", 
    "update()", 
    "updateViaCache", 
    "updatefound", 
    "waiting"
  ], 
  "ServiceWorkerRegistrationObject": [
    "processing the scope member of a service worker", 
    "processing the src member of a service worker"
  ], 
  "ServiceWorkerState": [
    "\"activated\"", 
    "\"activating\"", 
    "\"installed\"", 
    "\"installing\"", 
    "\"redundant\"", 
    "activated", 
    "activating", 
    "installed", 
    "installing", 
    "redundant"
  ], 
  "ServiceWorkerUpdateViaCache": [
    "\"all\"", 
    "\"imports\"", 
    "\"none\"", 
    "all", 
    "imports", 
    "none"
  ], 
  "ShadowRoot": [
    "host", 
    "mode"
  ], 
  "ShadowRootInit": [
    "mode"
  ], 
  "ShadowRootMode": [
    "\"closed\"", 
    "\"open\""
  ], 
  "SharedWorker": [
    "error", 
    "port"
  ], 
  "SharedWorkerGlobalScope": [
    "close()", 
    "connect", 
    "constructor origin", 
    "constructor url", 
    "name"
  ], 
  "Slotable": [
    "assignedSlot"
  ], 
  "SpatialNavigationDirection": [
    "\"down\"", 
    "\"left\"", 
    "\"right\"", 
    "\"up\""
  ], 
  "SpatialNavigationSearchOptions": [
    "candidates", 
    "container", 
    "dir"
  ], 
  "StatefulAnimator": [
    "Constructor", 
    "StatefulAnimator()", 
    "StatefulAnimator(options)", 
    "StatefulAnimator(options, state)", 
    "state", 
    "state()"
  ], 
  "StatefulAnimator/StatefulAnimator(options, state)": [
    "options", 
    "state"
  ], 
  "StatelessAnimator": [
    "Constructor", 
    "StatelessAnimator()", 
    "StatelessAnimator(options)"
  ], 
  "StatelessAnimator/StatelessAnimator(options)": [
    "options"
  ], 
  "Storage": [
    "clear()", 
    "getItem(key)", 
    "key(n)", 
    "length", 
    "removeItem(key)", 
    "setItem(key, value)"
  ], 
  "StorageEstimate": [
    "quota", 
    "usage"
  ], 
  "StorageEvent": [
    "initStorageEvent()"
  ], 
  "StorageEventInit": [
    "key", 
    "newValue", 
    "oldValue", 
    "storageArea", 
    "url"
  ], 
  "StorageManager": [
    "estimate()", 
    "persist()", 
    "persisted()"
  ], 
  "StylePropertyMap": [
    "[[declarations]]", 
    "append(property, ...values)", 
    "clear()", 
    "delete(property)", 
    "get(property)", 
    "getAll(property)", 
    "has(property)", 
    "set(property, ...values)", 
    "size"
  ], 
  "StylePropertyMap/append(property, ...values)": [
    "property", 
    "values"
  ], 
  "StylePropertyMap/delete(property)": [
    "property"
  ], 
  "StylePropertyMap/set(property, ...values)": [
    "property", 
    "values"
  ], 
  "StylePropertyMapReadOnly": [
    "get(property)", 
    "getAll(property)", 
    "has(property)", 
    "size"
  ], 
  "StylePropertyMapReadOnly/get(property)": [
    "property"
  ], 
  "StylePropertyMapReadOnly/getAll(property)": [
    "property"
  ], 
  "StylePropertyMapReadOnly/has(property)": [
    "property"
  ], 
  "StylePropertyMapReadonly": [
    "[[declarations]]", 
    "size"
  ], 
  "StyleSheet": [
    "disabled", 
    "href", 
    "media", 
    "ownerNode", 
    "parentStyleSheet", 
    "title", 
    "type"
  ], 
  "StyleSheetList": [
    "item(index)", 
    "length"
  ], 
  "StyleSheetList/item(index)": [
    "index"
  ], 
  "SyncEvent": [
    "Constructor", 
    "SyncEvent(type, init)", 
    "lastChance", 
    "tag"
  ], 
  "SyncEvent/SyncEvent(type, init)": [
    "init", 
    "type"
  ], 
  "SyncEventInit": [
    "lastChance", 
    "tag"
  ], 
  "SyncManager": [
    "getTags()", 
    "register(tag)", 
    "sync"
  ], 
  "SyncManager/register(tag)": [
    "tag"
  ], 
  "Synthetic Module Record": [
    "Evaluate", 
    "GetExportedNames", 
    "Instantiate", 
    "ResolveExport"
  ], 
  "Text": [
    "Text(data)", 
    "isElementContentWhitespace", 
    "replaceWholeText()", 
    "splitText(offset)", 
    "substring data", 
    "wholeText"
  ], 
  "Text/Text(data)": [
    "data"
  ], 
  "Text/splitText(offset)": [
    "offset"
  ], 
  "TextDecodeOptions": [
    "stream"
  ], 
  "TextDecoder": [
    "TextDecoder(label, options)", 
    "decode(input, options)", 
    "decoder", 
    "do not flush flag", 
    "stream"
  ], 
  "TextDecoder/TextDecoder(label, options)": [
    "label", 
    "options"
  ], 
  "TextDecoder/decode()": [
    "input", 
    "options"
  ], 
  "TextDecoder/decode(input)": [
    "input", 
    "options"
  ], 
  "TextDecoder/decode(input, options)": [
    "input", 
    "options"
  ], 
  "TextDecoderCommon": [
    "bom seen flag", 
    "encoding", 
    "error mode", 
    "fatal", 
    "ignore bom flag", 
    "ignoreBOM", 
    "serialize stream"
  ], 
  "TextDecoderOptions": [
    "fatal", 
    "ignoreBOM"
  ], 
  "TextDecoderStream": [
    "TextDecoderStream(label, options)", 
    "decoder", 
    "stream"
  ], 
  "TextDecoderStream/TextDecoderStream(label, options)": [
    "label", 
    "options"
  ], 
  "TextEncoder": [
    "TextEncoder()", 
    "encode(input)", 
    "encodeInto(source, destination)"
  ], 
  "TextEncoder/encode()": [
    "input"
  ], 
  "TextEncoder/encode(input)": [
    "input"
  ], 
  "TextEncoder/encodeInto(source, destination)": [
    "destination", 
    "source"
  ], 
  "TextEncoderCommon": [
    "encoding"
  ], 
  "TextEncoderEncodeIntoResult": [
    "read", 
    "written"
  ], 
  "TextEncoderStream": [
    "TextEncoderStream()", 
    "encoder", 
    "pending high surrogate"
  ], 
  "TextMetrics": [
    "actualBoundingBoxAscent", 
    "actualBoundingBoxDescent", 
    "actualBoundingBoxLeft", 
    "actualBoundingBoxRight", 
    "alphabeticBaseline", 
    "emHeightAscent", 
    "emHeightDescent", 
    "fontBoundingBoxAscent", 
    "fontBoundingBoxDescent", 
    "hangingBaseline", 
    "ideographicBaseline"
  ], 
  "TextTrack": [
    "activeCues", 
    "addCue(cue)", 
    "cues", 
    "id", 
    "inBandMetadataTrackDispatchType", 
    "kind", 
    "label", 
    "language", 
    "mode", 
    "removeCue(cue)"
  ], 
  "TextTrackCue": [
    "endTime", 
    "id", 
    "pauseOnExit", 
    "startTime", 
    "track"
  ], 
  "TextTrackCueList": [
    "getCueById(id)", 
    "length"
  ], 
  "TextTrackList": [
    "getTrackById(id)", 
    "length"
  ], 
  "TimeRanges": [
    "end", 
    "end(index)", 
    "length", 
    "start", 
    "start(index)"
  ], 
  "TokenBinding": [
    "id", 
    "status"
  ], 
  "TokenBindingStatus": [
    "present", 
    "supported"
  ], 
  "TrackEventInit": [
    "track"
  ], 
  "TransformStream": [
    "TransformStream(transformer, writableStrategy, readableStrategy)", 
    "readable", 
    "writable"
  ], 
  "TransformStreamDefaultController": [
    "TransformStreamDefaultController()", 
    "desiredSize", 
    "enqueue(chunk)", 
    "error(reason)", 
    "terminate()"
  ], 
  "TransitionEvent": [
    "TransitionEvent(type, transitionEventInitDict)", 
    "elapsedTime", 
    "propertyName", 
    "pseudoElement"
  ], 
  "TransitionEvent/TransitionEvent(type, transitionEventInitDict)": [
    "transitionEventInitDict", 
    "type"
  ], 
  "TransitionEventInit": [
    "elapsedTime", 
    "propertyName", 
    "pseudoElement"
  ], 
  "TreeWalker": [
    "current", 
    "currentNode", 
    "expandEntityReferences", 
    "filter", 
    "firstChild()", 
    "lastChild()", 
    "nextNode()", 
    "nextSibling()", 
    "parentNode()", 
    "previousNode()", 
    "previousSibling()", 
    "root", 
    "traverse children", 
    "whatToShow"
  ], 
  "UIEvent": [
    "Constructor", 
    "UIEvent(type)", 
    "UIEvent(type, eventInitDict)", 
    "detail", 
    "initUIEvent()", 
    "view", 
    "which"
  ], 
  "UIEvent/UIEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "UIEventInit": [
    "detail", 
    "view", 
    "which"
  ], 
  "URL": [
    "URL(url, base)", 
    "createObjectURL(obj)", 
    "hash", 
    "host", 
    "hostname", 
    "href", 
    "origin", 
    "password", 
    "pathname", 
    "port", 
    "protocol", 
    "query object", 
    "revokeObjectURL(url)", 
    "search", 
    "searchParams", 
    "stringification behavior", 
    "toJSON()", 
    "url", 
    "username"
  ], 
  "URL/URL(url, base)": [
    "base", 
    "url"
  ], 
  "URL/createObjectURL(obj)": [
    "obj"
  ], 
  "URL/revokeObjectURL(url)": [
    "url"
  ], 
  "URLSearchParams": [
    "URLSearchParams(init)", 
    "append(name, value)", 
    "delete(name)", 
    "get(name)", 
    "getAll(name)", 
    "has(name)", 
    "list", 
    "new", 
    "set(name, value)", 
    "sort()", 
    "stringification behavior", 
    "update steps", 
    "url object"
  ], 
  "URLSearchParams/URLSearchParams(init)": [
    "init"
  ], 
  "URLSearchParams/append(name, value)": [
    "name", 
    "value"
  ], 
  "URLSearchParams/delete(name)": [
    "name"
  ], 
  "URLSearchParams/get(name)": [
    "name"
  ], 
  "URLSearchParams/getAll(name)": [
    "name"
  ], 
  "URLSearchParams/has(name)": [
    "name"
  ], 
  "URLSearchParams/set(name, value)": [
    "name", 
    "value"
  ], 
  "USB": [
    "getDevices", 
    "getDevices()", 
    "onconnect", 
    "ondisconnect", 
    "requestDevice", 
    "requestDevice(options)"
  ], 
  "USB/requestDevice(options)": [
    "options"
  ], 
  "USBAlternateInterface": [
    "Constructor", 
    "USBAlternateInterface(deviceInterface, alternateSetting)", 
    "alternateSetting", 
    "endpoints", 
    "interfaceClass", 
    "interfaceName", 
    "interfaceProtocol", 
    "interfaceSubclass"
  ], 
  "USBAlternateInterface/USBAlternateInterface(deviceInterface, alternateSetting)": [
    "alternateSetting", 
    "deviceInterface"
  ], 
  "USBConfiguration": [
    "Constructor", 
    "USBConfiguration(device, configurationValue)", 
    "configurationName", 
    "configurationValue", 
    "interfaces"
  ], 
  "USBConfiguration/USBConfiguration(device, configurationValue)": [
    "configurationValue", 
    "device"
  ], 
  "USBConnectionEvent": [
    "Constructor", 
    "USBConnectionEvent(type, eventInitDict)", 
    "device"
  ], 
  "USBConnectionEvent/USBConnectionEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "USBConnectionEventInit": [
    "device"
  ], 
  "USBControlTransferParameters": [
    "index", 
    "recipient", 
    "request", 
    "requestType", 
    "value"
  ], 
  "USBDevice": [
    "claimInterface", 
    "claimInterface(interfaceNumber)", 
    "clearHalt", 
    "clearHalt(direction, endpointNumber)", 
    "close", 
    "close()", 
    "configuration", 
    "configurations", 
    "controlTransferIn", 
    "controlTransferIn(setup, length)", 
    "controlTransferOut", 
    "controlTransferOut(setup)", 
    "controlTransferOut(setup, data)", 
    "deviceClass", 
    "deviceProtocol", 
    "deviceSubclass", 
    "deviceVersionMajor", 
    "deviceVersionMinor", 
    "deviceVersionSubminor", 
    "isochronousTransferIn", 
    "isochronousTransferIn(endpointNumber, packetLengths)", 
    "isochronousTransferOut", 
    "isochronousTransferOut(endpointNumber, data, packetLengths)", 
    "manufacturerName", 
    "open", 
    "open()", 
    "opened", 
    "productId", 
    "productName", 
    "releaseInterface", 
    "releaseInterface(interfaceNumber)", 
    "reset", 
    "reset()", 
    "selectAlternateInterface", 
    "selectAlternateInterface(interfaceNumber, alternateSetting)", 
    "selectConfiguration", 
    "selectConfiguration(configurationValue)", 
    "serialNumber", 
    "transferIn", 
    "transferIn(endpointNumber, length)", 
    "transferOut", 
    "transferOut(endpointNumber, data)", 
    "usbVersionMajor", 
    "usbVersionMinor", 
    "usbVersionSubminor", 
    "vendorId"
  ], 
  "USBDevice/claimInterface(interfaceNumber)": [
    "interfaceNumber"
  ], 
  "USBDevice/clearHalt(direction, endpointNumber)": [
    "direction", 
    "endpointNumber"
  ], 
  "USBDevice/controlTransferIn(setup, length)": [
    "length", 
    "setup"
  ], 
  "USBDevice/controlTransferOut(setup)": [
    "data", 
    "setup"
  ], 
  "USBDevice/controlTransferOut(setup, data)": [
    "data", 
    "setup"
  ], 
  "USBDevice/isochronousTransferIn(endpointNumber, packetLengths)": [
    "endpointNumber", 
    "packetLengths"
  ], 
  "USBDevice/isochronousTransferOut(endpointNumber, data, packetLengths)": [
    "data", 
    "endpointNumber", 
    "packetLengths"
  ], 
  "USBDevice/releaseInterface(interfaceNumber)": [
    "interfaceNumber"
  ], 
  "USBDevice/selectAlternateInterface(interfaceNumber, alternateSetting)": [
    "alternateSetting", 
    "interfaceNumber"
  ], 
  "USBDevice/selectConfiguration(configurationValue)": [
    "configurationValue"
  ], 
  "USBDevice/transferIn(endpointNumber, length)": [
    "endpointNumber", 
    "length"
  ], 
  "USBDevice/transferOut(endpointNumber, data)": [
    "data", 
    "endpointNumber"
  ], 
  "USBDeviceFilter": [
    "classCode", 
    "productId", 
    "protocolCode", 
    "serialNumber", 
    "subclassCode", 
    "vendorId"
  ], 
  "USBDeviceRequestOptions": [
    "filters"
  ], 
  "USBDirection": [
    "\"in\"", 
    "\"out\""
  ], 
  "USBEndpoint": [
    "Constructor", 
    "USBEndpoint(alternate, endpointNumber, direction)", 
    "direction", 
    "endpointNumber", 
    "packetSize", 
    "type"
  ], 
  "USBEndpoint/USBEndpoint(alternate, endpointNumber, direction)": [
    "alternate", 
    "direction", 
    "endpointNumber"
  ], 
  "USBEndpointType": [
    "\"bulk\"", 
    "\"interrupt\"", 
    "\"isochronous\""
  ], 
  "USBInTransferResult": [
    "Constructor", 
    "USBInTransferResult(status)", 
    "USBInTransferResult(status, data)", 
    "data", 
    "status"
  ], 
  "USBInTransferResult/USBInTransferResult(status, data)": [
    "data", 
    "status"
  ], 
  "USBInterface": [
    "Constructor", 
    "USBInterface(configuration, interfaceNumber)", 
    "alternate", 
    "alternates", 
    "claimed", 
    "interfaceNumber"
  ], 
  "USBInterface/USBInterface(configuration, interfaceNumber)": [
    "configuration", 
    "interfaceNumber"
  ], 
  "USBIsochronousInTransferPacket": [
    "Constructor", 
    "USBIsochronousInTransferPacket(status)", 
    "USBIsochronousInTransferPacket(status, data)", 
    "data", 
    "status"
  ], 
  "USBIsochronousInTransferPacket/USBIsochronousInTransferPacket(status, data)": [
    "data", 
    "status"
  ], 
  "USBIsochronousInTransferResult": [
    "Constructor", 
    "USBIsochronousInTransferResult(packets)", 
    "USBIsochronousInTransferResult(packets, data)", 
    "data", 
    "packets"
  ], 
  "USBIsochronousInTransferResult/USBIsochronousInTransferResult(packets, data)": [
    "data", 
    "packets"
  ], 
  "USBIsochronousOutTransferPacket": [
    "Constructor", 
    "USBIsochronousOutTransferPacket(status)", 
    "USBIsochronousOutTransferPacket(status, bytesWritten)", 
    "bytesWritten", 
    "status"
  ], 
  "USBIsochronousOutTransferPacket/USBIsochronousOutTransferPacket(status, bytesWritten)": [
    "bytesWritten", 
    "status"
  ], 
  "USBIsochronousOutTransferResult": [
    "Constructor", 
    "USBIsochronousOutTransferResult(packets)", 
    "packets"
  ], 
  "USBIsochronousOutTransferResult/USBIsochronousOutTransferResult(packets)": [
    "packets"
  ], 
  "USBOutTransferResult": [
    "Constructor", 
    "USBOutTransferResult(status)", 
    "USBOutTransferResult(status, bytesWritten)", 
    "bytesWritten", 
    "status"
  ], 
  "USBOutTransferResult/USBOutTransferResult(status, bytesWritten)": [
    "bytesWritten", 
    "status"
  ], 
  "USBPermissionDescriptor": [
    "filters"
  ], 
  "USBPermissionResult": [
    "devices"
  ], 
  "USBPermissionStorage": [
    "allowedDevices"
  ], 
  "USBRecipient": [
    "\"device\"", 
    "\"endpoint\"", 
    "\"interface\"", 
    "\"other\""
  ], 
  "USBRequestType": [
    "\"class\"", 
    "\"standard\"", 
    "\"vendor\""
  ], 
  "USBTransferStatus": [
    "\"babble\"", 
    "\"ok\"", 
    "\"stall\""
  ], 
  "UserVerificationRequirement": [
    "discouraged", 
    "preferred", 
    "required"
  ], 
  "ValidityState": [
    "badInput", 
    "customError", 
    "patternMismatch", 
    "rangeOverflow", 
    "rangeUnderflow", 
    "stepMismatch", 
    "tooLong", 
    "tooShort", 
    "typeMismatch", 
    "valid", 
    "valueMissing"
  ], 
  "ValueEvent": [
    "Constructor", 
    "ValueEvent(type)", 
    "ValueEvent(type, initDict)", 
    "value"
  ], 
  "ValueEvent/ValueEvent(type, initDict)": [
    "initDict", 
    "type"
  ], 
  "ValueEventInit": [
    "value"
  ], 
  "VideoTrack": [
    "VideoTrack.id", 
    "VideoTrack.kind", 
    "VideoTrack.label", 
    "VideoTrack.language", 
    "VideoTrack.selected"
  ], 
  "VideoTrackList": [
    "VideoTrackList.getTrackById(id)", 
    "VideoTrackList.length", 
    "VideoTrackList.selectedIndex"
  ], 
  "Web IDL arguments list": [
    "converting"
  ], 
  "WebAppManifest": [
    "base direction", 
    "cannot be used together", 
    "default theme color", 
    "directionality-capable members", 
    "language tag", 
    "manifest", 
    "manifest url", 
    "processing the background_color member", 
    "processing the categories member", 
    "processing the lang member", 
    "processing the related_applications member", 
    "processing the scope member", 
    "processing the serviceworker member", 
    "processing the start_url member", 
    "processing the theme_color member", 
    "registration object", 
    "related application", 
    "start url", 
    "subtags", 
    "text-direction value", 
    "text-direction values", 
    "theme color", 
    "usvstring"
  ], 
  "WebSocket": [
    "CLOSED", 
    "CLOSING", 
    "CONNECTING", 
    "OPEN", 
    "binaryType", 
    "bufferedAmount", 
    "close", 
    "close()", 
    "close(code)", 
    "error", 
    "extensions", 
    "message", 
    "open", 
    "protocol", 
    "readyState", 
    "send(data)", 
    "url"
  ], 
  "WheelEvent": [
    "Constructor", 
    "DOM_DELTA_LINE", 
    "DOM_DELTA_PAGE", 
    "DOM_DELTA_PIXEL", 
    "WheelEvent(type)", 
    "WheelEvent(type, eventInitDict)", 
    "deltaMode", 
    "deltaX", 
    "deltaY", 
    "deltaZ", 
    "initWheelEvent()"
  ], 
  "WheelEvent/WheelEvent(type, eventInitDict)": [
    "eventInitDict", 
    "type"
  ], 
  "WheelEventInit": [
    "deltaMode", 
    "deltaX", 
    "deltaY", 
    "deltaZ"
  ], 
  "Window": [
    "[[defaultElementStylesMap]]", 
    "[[registeredPropertySet]]", 
    "abort", 
    "afterprint", 
    "alert(message)", 
    "appinstalled", 
    "applicationCache", 
    "beforeinstallprompt", 
    "beforeprint", 
    "beforeunload", 
    "blur", 
    "blur()", 
    "browsing context", 
    "captureEvents()", 
    "close()", 
    "closed", 
    "confirm(message)", 
    "current event", 
    "devicePixelRatio", 
    "document", 
    "error", 
    "event", 
    "external", 
    "fakeWorklet1", 
    "fakeWorklet2", 
    "focus", 
    "focus()", 
    "frames", 
    "getComputedStyle(elt)", 
    "getComputedStyle(elt, pseudoElt)", 
    "hashchange", 
    "history", 
    "innerHeight", 
    "innerWidth", 
    "languagechange", 
    "length", 
    "load", 
    "location", 
    "locationbar", 
    "matchMedia(query)", 
    "menubar", 
    "message", 
    "messageerror", 
    "moveBy(x, y)", 
    "moveTo(x, y)", 
    "name", 
    "navigate(dir)", 
    "navigator", 
    "offline", 
    "onabort", 
    "onanimationcancel", 
    "onanimationend", 
    "onanimationiteration", 
    "onanimationstart", 
    "onauxclick", 
    "oncancel", 
    "oncanplay", 
    "oncanplaythrough", 
    "onchange", 
    "onclick", 
    "onclose", 
    "oncontextmenu", 
    "oncuechange", 
    "ondblclick", 
    "ondrag", 
    "ondragend", 
    "ondragenter", 
    "ondragexit", 
    "ondragleave", 
    "ondragover", 
    "ondragstart", 
    "ondrop", 
    "ondurationchange", 
    "onemptied", 
    "onended", 
    "onformdata", 
    "oninput", 
    "oninvalid", 
    "onkeydown", 
    "onkeypress", 
    "onkeyup", 
    "online", 
    "onloadeddata", 
    "onloadedmetadata", 
    "onloadend", 
    "onloadstart", 
    "onmousedown", 
    "onmouseenter", 
    "onmouseleave", 
    "onmousemove", 
    "onmouseout", 
    "onmouseover", 
    "onmouseup", 
    "onpause", 
    "onplay", 
    "onplaying", 
    "onprogress", 
    "onratechange", 
    "onreset", 
    "onsecuritypolicyviolation", 
    "onseeked", 
    "onseeking", 
    "onselect", 
    "onstalled", 
    "onsubmit", 
    "onsuspend", 
    "ontimeupdate", 
    "ontoggle", 
    "onvolumechange", 
    "onwaiting", 
    "onwheel", 
    "open()", 
    "open(unused1, unused2)", 
    "open(url, name, features)", 
    "open(url, target, features)", 
    "outerHeight", 
    "outerWidth", 
    "pageXOffset", 
    "pageYOffset", 
    "pagehide", 
    "pageshow", 
    "personalbar", 
    "popstate", 
    "postMessage(message, options)", 
    "postMessage(message, targetOrigin, transfer)", 
    "print()", 
    "prompt(message, default)", 
    "rejectionhandled", 
    "releaseEvents()", 
    "resize", 
    "resizeBy(x, y)", 
    "resizeTo(x, y)", 
    "screen", 
    "screenLeft", 
    "screenTop", 
    "screenX", 
    "screenY", 
    "scroll()", 
    "scroll(options)", 
    "scroll(x, y)", 
    "scrollBy()", 
    "scrollBy(options)", 
    "scrollBy(x, y)", 
    "scrollTo()", 
    "scrollTo(options)", 
    "scrollTo(x, y)", 
    "scrollX", 
    "scrollY", 
    "scrollbars", 
    "self", 
    "status", 
    "statusbar", 
    "stop()", 
    "storage", 
    "toolbar", 
    "unhandledrejection", 
    "unload", 
    "window"
  ], 
  "Window/getComputedStyle(elt)": [
    "elt", 
    "pseudoElt"
  ], 
  "Window/getComputedStyle(elt, pseudoElt)": [
    "elt", 
    "pseudoElt"
  ], 
  "Window/matchMedia(query)": [
    "query"
  ], 
  "Window/moveBy(x, y)": [
    "x", 
    "y"
  ], 
  "Window/moveTo(x, y)": [
    "x", 
    "y"
  ], 
  "Window/navigate(dir)": [
    "dir"
  ], 
  "Window/resizeBy(x, y)": [
    "x", 
    "y"
  ], 
  "Window/resizeTo(x, y)": [
    "x", 
    "y"
  ], 
  "Window/scroll()": [
    "options"
  ], 
  "Window/scroll(options)": [
    "options"
  ], 
  "Window/scroll(x, y)": [
    "x", 
    "y"
  ], 
  "Window/scrollBy()": [
    "options"
  ], 
  "Window/scrollBy(options)": [
    "options"
  ], 
  "Window/scrollBy(x, y)": [
    "x", 
    "y"
  ], 
  "Window/scrollTo()": [
    "options"
  ], 
  "Window/scrollTo(options)": [
    "options"
  ], 
  "Window/scrollTo(x, y)": [
    "x", 
    "y"
  ], 
  "WindowClient": [
    "ancestor origins array", 
    "ancestorOrigins", 
    "browsing context", 
    "focus()", 
    "focused", 
    "navigate", 
    "navigate()", 
    "navigate(url)", 
    "visibilityState"
  ], 
  "WindowClient/navigate(url)": [
    "url"
  ], 
  "WindowLocalStorage": [
    "localStorage"
  ], 
  "WindowOrWorkerGlobalScope": [
    "atob(data)", 
    "btoa(data)", 
    "caches", 
    "clearInterval()", 
    "clearTimeout()", 
    "createImageBitmap(image)", 
    "fetch(input)", 
    "fetch(input, init)", 
    "indexedDB", 
    "isSecureContext", 
    "origin", 
    "queueMicrotask(callback)", 
    "setInterval()", 
    "setTimeout()"
  ], 
  "WindowOrWorkerGlobalScope/fetch(input)": [
    "init", 
    "input"
  ], 
  "WindowOrWorkerGlobalScope/fetch(input, init)": [
    "init", 
    "input"
  ], 
  "WindowSessionStorage": [
    "sessionStorage"
  ], 
  "Worker": [
    "error", 
    "message", 
    "messageerror", 
    "postMessage(message, options)", 
    "postMessage(message, transfer)", 
    "terminate()"
  ], 
  "WorkerGlobalScope": [
    "closing", 
    "csp list", 
    "error", 
    "https state", 
    "importScripts(urls)", 
    "languagechange", 
    "location", 
    "module map", 
    "name", 
    "navigator", 
    "offline", 
    "online", 
    "owner set", 
    "referrer policy", 
    "rejectionhandled", 
    "self", 
    "type", 
    "unhandledrejection", 
    "url", 
    "worker set"
  ], 
  "WorkerLocation": [
    "hash", 
    "host", 
    "hostname", 
    "href", 
    "origin", 
    "pathname", 
    "port", 
    "protocol", 
    "search"
  ], 
  "WorkerNavigator": [
    "permissions", 
    "serviceWorker", 
    "usb"
  ], 
  "Worklet": [
    "addModule(moduleURL)", 
    "addModule(moduleURL, options)", 
    "import(moduleURL)"
  ], 
  "Worklet/addModule(moduleURL)": [
    "moduleURL", 
    "options"
  ], 
  "Worklet/addModule(moduleURL, options)": [
    "moduleURL", 
    "options"
  ], 
  "Worklet/import(moduleURL)": [
    "moduleURL"
  ], 
  "WorkletAnimation": [
    "WorkletAnimation(animatorName, effects, timeline, options)", 
    "animatorName"
  ], 
  "WorkletAnimation/WorkletAnimation(animatorName, effects, timeline, options)": [
    "animatorName", 
    "effects", 
    "options", 
    "timeline"
  ], 
  "WorkletGlobalScope": [
    "console", 
    "module map", 
    "owner document"
  ], 
  "WorkletGroupEffect": [
    "getChildren", 
    "getChildren()"
  ], 
  "WorkletOptions": [
    "credentials"
  ], 
  "WritableStream": [
    "WritableStream(underlyingSink, strategy)", 
    "abort(reason)", 
    "getWriter()", 
    "locked"
  ], 
  "WritableStreamDefaultController": [
    "WritableStreamDefaultController()", 
    "error(e)"
  ], 
  "WritableStreamDefaultWriter": [
    "WritableStreamDefaultWriter(stream)", 
    "abort(reason)", 
    "close()", 
    "closed", 
    "desiredSize", 
    "ready", 
    "releaseLock()", 
    "write(chunk)"
  ], 
  "XMLHttpRequest": [
    "DONE", 
    "HEADERS_RECEIVED", 
    "LOADING", 
    "OPENED", 
    "UNSENT", 
    "XMLHttpRequest()", 
    "abort", 
    "abort()", 
    "error", 
    "getAllResponseHeaders()", 
    "getResponseHeader(name)", 
    "load", 
    "loadend", 
    "loadstart", 
    "onreadystatechange", 
    "open(method, url)", 
    "open(method, url, async)", 
    "open(method, url, async, username)", 
    "open(method, url, async, username, password)", 
    "overrideMimeType(mime)", 
    "progress", 
    "readyState", 
    "readystatechange", 
    "response", 
    "responseText", 
    "responseType", 
    "responseURL", 
    "responseXML", 
    "send()", 
    "send(body)", 
    "setRequestHeader(name, value)", 
    "status", 
    "statusText", 
    "timeout", 
    "upload", 
    "withCredentials"
  ], 
  "XMLHttpRequest/getResponseHeader(name)": [
    "name"
  ], 
  "XMLHttpRequest/open(method, url)": [
    "method", 
    "url"
  ], 
  "XMLHttpRequest/open(method, url, async)": [
    "async", 
    "method", 
    "password", 
    "url", 
    "username"
  ], 
  "XMLHttpRequest/open(method, url, async, username)": [
    "async", 
    "method", 
    "password", 
    "url", 
    "username"
  ], 
  "XMLHttpRequest/open(method, url, async, username, password)": [
    "async", 
    "method", 
    "password", 
    "url", 
    "username"
  ], 
  "XMLHttpRequest/overrideMimeType(mime)": [
    "mime"
  ], 
  "XMLHttpRequest/send()": [
    "body"
  ], 
  "XMLHttpRequest/send(body)": [
    "body"
  ], 
  "XMLHttpRequest/setRequestHeader(name, value)": [
    "name", 
    "value"
  ], 
  "XMLHttpRequestEventTarget": [
    "onabort", 
    "onerror", 
    "onload", 
    "onloadend", 
    "onloadstart", 
    "onprogress", 
    "ontimeout"
  ], 
  "XMLHttpRequestResponseType": [
    "\"\"", 
    "\"arraybuffer\"", 
    "\"blob\"", 
    "\"document\"", 
    "\"json\"", 
    "\"text\""
  ], 
  "a": [
    "download", 
    "href", 
    "hreflang", 
    "ping", 
    "referrerpolicy", 
    "rel", 
    "target", 
    "type", 
    "xlink:actuate", 
    "xlink:href", 
    "xlink:title"
  ], 
  "abbr": [
    "title"
  ], 
  "align-content": [
    "<aspect-ratio>", 
    "<transfer-ratio>", 
    "baseline", 
    "center", 
    "first", 
    "first baseline", 
    "flex-end", 
    "flex-start", 
    "last", 
    "last baseline", 
    "normal", 
    "space-around", 
    "space-between", 
    "space-evenly", 
    "stretch"
  ], 
  "align-items": [
    "auto", 
    "baseline", 
    "center", 
    "first", 
    "first baseline", 
    "flex-end", 
    "flex-start", 
    "last", 
    "last baseline", 
    "participates in baseline alignment", 
    "stretch"
  ], 
  "align-self": [
    "auto", 
    "baseline", 
    "center", 
    "first", 
    "first baseline", 
    "flex-end", 
    "flex-start", 
    "last", 
    "last baseline", 
    "normal", 
    "participates in baseline alignment", 
    "stretch"
  ], 
  "alignment-baseline": [
    "alphabetic", 
    "auto", 
    "baseline", 
    "bottom", 
    "center", 
    "central", 
    "first", 
    "ideographic", 
    "last", 
    "mathematical", 
    "middle", 
    "text-after-edge", 
    "text-before-edge", 
    "text-bottom", 
    "text-top", 
    "top"
  ], 
  "all": [
    "inherit", 
    "initial", 
    "revert", 
    "unset"
  ], 
  "altGlyph": [
    "dx", 
    "dy", 
    "format", 
    "glyphref", 
    "rotate", 
    "x", 
    "xlink:href", 
    "y"
  ], 
  "altGlyphDef": [
    "dx", 
    "dy", 
    "format", 
    "glyphref", 
    "x", 
    "xlink:href", 
    "y"
  ], 
  "animate": [
    "onbegin", 
    "onend", 
    "onrepeat"
  ], 
  "animateMotion": [
    "calcmode", 
    "keypoints", 
    "onbegin", 
    "onend", 
    "onrepeat", 
    "origin", 
    "path", 
    "rotate", 
    "xlink:href"
  ], 
  "animateTransform": [
    "onbegin", 
    "onend", 
    "onrepeat", 
    "type"
  ], 
  "animation-delay": [
    "<time>"
  ], 
  "animation-direction": [
    "alternate", 
    "alternate-reverse", 
    "normal", 
    "reverse"
  ], 
  "animation-duration": [
    "<time>"
  ], 
  "animation-fill-mode": [
    "backwards", 
    "both", 
    "forwards", 
    "none"
  ], 
  "animation-iteration-count": [
    "<number>", 
    "infinite"
  ], 
  "animation-name": [
    "<keyframes-name>", 
    "none"
  ], 
  "animation-play-state": [
    "paused", 
    "running"
  ], 
  "animationevent": [
    "animationcancel", 
    "animationend", 
    "animationiteration", 
    "animationstart"
  ], 
  "annotated types": [
    "inner type"
  ], 
  "appbannerpromptoutcome": [
    "accepted", 
    "dismissed"
  ], 
  "appearance": [
    "<compat-auto>", 
    "auto", 
    "button", 
    "checkbox", 
    "listbox", 
    "menulist", 
    "menulist-button", 
    "meter", 
    "none", 
    "progress-bar", 
    "push-button", 
    "radio", 
    "searchfield", 
    "slider-horizontal", 
    "square-button", 
    "textarea", 
    "textfield"
  ], 
  "area": [
    "alt", 
    "circle state", 
    "coords", 
    "default state", 
    "polygon state", 
    "rectangle state", 
    "shape", 
    "usemap"
  ], 
  "aspect-ratio": [
    "<ratio>", 
    "auto"
  ], 
  "assertionCreationData": [
    "authenticatordataresult", 
    "clientdatajsonresult", 
    "clientextensionresults", 
    "credentialidresult", 
    "signatureresult", 
    "userhandleresult"
  ], 
  "authenticator": [
    "credentials map"
  ], 
  "authenticator data": [
    "perform the following steps to generate an authenticator data structure"
  ], 
  "authenticatorBiometricPerfBounds": [
    "FAR", 
    "FRR"
  ], 
  "background-attachment": [
    "fixed", 
    "local", 
    "scroll"
  ], 
  "background-clip": [
    "<box>", 
    "border", 
    "border-box", 
    "content-box", 
    "padding-box", 
    "text"
  ], 
  "background-image": [
    "none"
  ], 
  "background-origin": [
    "border-box", 
    "content-box", 
    "padding-box"
  ], 
  "background-position": [
    "<length>", 
    "<percentage>", 
    "bottom", 
    "center", 
    "left", 
    "right", 
    "top"
  ], 
  "background-repeat": [
    "no-repeat", 
    "repeat", 
    "repeat-x", 
    "repeat-y", 
    "round", 
    "space"
  ], 
  "background-size": [
    "<length-percentage>", 
    "auto", 
    "contain", 
    "cover"
  ], 
  "base": [
    "href", 
    "target"
  ], 
  "baseline-shift": [
    "<length>", 
    "<percentage>", 
    "baseline", 
    "sub", 
    "super"
  ], 
  "beforeinstallpromptevent": [
    "beforeinstallpromptevent.prompt", 
    "beforeinstallpromptevent.prompt()", 
    "prompt", 
    "prompt()"
  ], 
  "binarytype": [
    "arraybuffer"
  ], 
  "blob": [
    "type"
  ], 
  "blob URL": [
    "resolve"
  ], 
  "blob URL entry": [
    "environment", 
    "object"
  ], 
  "blob url": [
    "lifetime", 
    "lifetime stipulation"
  ], 
  "blob url store": [
    "add an entry", 
    "add an entry to the blob url store", 
    "add the entry", 
    "add the entry to the blob url store", 
    "adding an entry to the blob url store", 
    "remove an entry", 
    "remove an entry from the blob url store", 
    "remove the entry", 
    "remove the entry from the blob url store"
  ], 
  "block-ellipsis": [
    "<string>", 
    "auto", 
    "none"
  ], 
  "block-overflow": [
    "<string>", 
    "clip", 
    "ellipsis"
  ], 
  "block-step-align": [
    "auto", 
    "center", 
    "down", 
    "end", 
    "nearest", 
    "start", 
    "up"
  ], 
  "block-step-insert": [
    "margin", 
    "padding"
  ], 
  "blockquote": [
    "cite"
  ], 
  "body": [
    "clone", 
    "done", 
    "source", 
    "stream", 
    "total bytes", 
    "transmitted bytes", 
    "wait"
  ], 
  "bookmark-label": [
    "<content-list>"
  ], 
  "bookmark-level": [
    "<integer>", 
    "none"
  ], 
  "bookmark-state": [
    "closed", 
    "open"
  ], 
  "border": [
    "dashed", 
    "dotted", 
    "double", 
    "groove", 
    "hidden", 
    "inset", 
    "medium", 
    "none", 
    "outset", 
    "ridge", 
    "solid", 
    "thick", 
    "thin"
  ], 
  "border-bottom-style": [
    "dashed", 
    "dotted", 
    "double", 
    "groove", 
    "hidden", 
    "inset", 
    "none", 
    "outset", 
    "ridge", 
    "solid"
  ], 
  "border-bottom-width": [
    "medium", 
    "thick", 
    "thin"
  ], 
  "border-color": [
    "logical"
  ], 
  "border-image-repeat": [
    "repeat", 
    "round", 
    "space", 
    "stretch"
  ], 
  "border-image-slice": [
    "<number>", 
    "<percentage>", 
    "fill"
  ], 
  "border-image-width": [
    "<length-percentage>", 
    "<number>", 
    "auto"
  ], 
  "border-left-style": [
    "dashed", 
    "dotted", 
    "double", 
    "groove", 
    "hidden", 
    "inset", 
    "none", 
    "outset", 
    "ridge", 
    "solid"
  ], 
  "border-left-width": [
    "medium", 
    "thick", 
    "thin"
  ], 
  "border-limit": [
    "bottom", 
    "corners", 
    "left", 
    "right", 
    "sides", 
    "top"
  ], 
  "border-right-style": [
    "dashed", 
    "dotted", 
    "double", 
    "groove", 
    "hidden", 
    "inset", 
    "none", 
    "outset", 
    "ridge", 
    "solid"
  ], 
  "border-right-width": [
    "medium", 
    "thick", 
    "thin"
  ], 
  "border-style": [
    "dashed", 
    "dotted", 
    "double", 
    "groove", 
    "hidden", 
    "inset", 
    "logical", 
    "none", 
    "outset", 
    "ridge", 
    "solid"
  ], 
  "border-top-style": [
    "dashed", 
    "dotted", 
    "double", 
    "groove", 
    "hidden", 
    "inset", 
    "none", 
    "outset", 
    "ridge", 
    "solid"
  ], 
  "border-top-width": [
    "medium", 
    "thick", 
    "thin"
  ], 
  "border-width": [
    "logical", 
    "medium", 
    "thick", 
    "thin"
  ], 
  "bottom": [
    "<length>", 
    "<percentage>", 
    "auto"
  ], 
  "boundary point": [
    "after", 
    "before", 
    "equal", 
    "node", 
    "offset", 
    "position"
  ], 
  "box": [
    "[[layoutChildMap]]"
  ], 
  "box-decoration-break": [
    "clone", 
    "slice"
  ], 
  "box-shadow": [
    "<color>", 
    "inset", 
    "none"
  ], 
  "box-sizing": [
    "border-box", 
    "content-box"
  ], 
  "box-snap": [
    "baseline", 
    "block-end", 
    "block-start", 
    "center", 
    "first-baseline", 
    "last-baseline", 
    "none"
  ], 
  "break-after": [
    "all", 
    "always", 
    "auto", 
    "avoid", 
    "avoid-column", 
    "avoid-page", 
    "avoid-region", 
    "column", 
    "left", 
    "page", 
    "recto", 
    "region", 
    "right", 
    "verso"
  ], 
  "break-before": [
    "all", 
    "always", 
    "auto", 
    "avoid", 
    "avoid-column", 
    "avoid-page", 
    "avoid-region", 
    "column", 
    "left", 
    "page", 
    "recto", 
    "region", 
    "right", 
    "verso"
  ], 
  "break-inside": [
    "auto", 
    "avoid", 
    "avoid-column", 
    "avoid-page", 
    "avoid-region"
  ], 
  "bucket": [
    "mode"
  ], 
  "button": [
    "button", 
    "reset", 
    "submit", 
    "type", 
    "value"
  ], 
  "byte sequence": [
    "length", 
    "starts with"
  ], 
  "cache batch operation": [
    "options", 
    "request", 
    "response", 
    "type"
  ], 
  "cache entry": [
    "credentials", 
    "header name", 
    "max-age", 
    "method", 
    "serialized origin", 
    "url"
  ], 
  "calc()": [
    "calculation"
  ], 
  "canplaytyperesult": [
    "maybe", 
    "probably"
  ], 
  "caret-color": [
    "auto"
  ], 
  "caret-shape": [
    "auto", 
    "bar", 
    "block", 
    "underscore"
  ], 
  "circle": [
    "cx", 
    "cy", 
    "r"
  ], 
  "clear": [
    "all", 
    "block-end", 
    "block-start", 
    "both", 
    "both-block", 
    "both-inline", 
    "bottom", 
    "inline-end", 
    "inline-start", 
    "left", 
    "right", 
    "top"
  ], 
  "client": [
    "endpoint-groups", 
    "origin"
  ], 
  "clip": [
    "<bottom>", 
    "<left>", 
    "<right>", 
    "<top>", 
    "rect()"
  ], 
  "clip-path": [
    "fill-box", 
    "stroke-box", 
    "view-box"
  ], 
  "clip-rule": [
    "evenodd", 
    "nonzero"
  ], 
  "clipPath": [
    "clippathunits", 
    "height", 
    "maskcontentunits", 
    "maskunits", 
    "width", 
    "x", 
    "y"
  ], 
  "clipPathUnits": [
    "objectboundingbox", 
    "userspaceonuse"
  ], 
  "col": [
    "span"
  ], 
  "colgroup": [
    "span"
  ], 
  "collection": [
    "live collection", 
    "represented by the collection", 
    "static collection"
  ], 
  "color()": [
    "a98rgb", 
    "image-p3", 
    "prophotorgb", 
    "rec2020", 
    "srgb"
  ], 
  "color-adjust": [
    "economy", 
    "exact"
  ], 
  "color-interpolation-filters": [
    "auto", 
    "linearrgb", 
    "srgb"
  ], 
  "color-profile": [
    "local", 
    "name", 
    "rendering-intent", 
    "xlink:href"
  ], 
  "color-scheme": [
    "auto", 
    "dark", 
    "light", 
    "normal", 
    "only"
  ], 
  "colorspaceconversion": [
    "none"
  ], 
  "column-count": [
    "<integer>", 
    "auto"
  ], 
  "column-fill": [
    "auto", 
    "balance", 
    "balance-all"
  ], 
  "column-gap": [
    "<length-percentage>", 
    "normal"
  ], 
  "column-rule-color": [
    "<color>"
  ], 
  "column-span": [
    "<integer>", 
    "all", 
    "auto", 
    "none"
  ], 
  "column-width": [
    "<length>", 
    "auto", 
    "fit-content(<length-percentage>)", 
    "max-content", 
    "min-content"
  ], 
  "conic-gradient()": [
    "<angle>", 
    "<position>", 
    "gradient center"
  ], 
  "connection": [
    "close pending flag", 
    "closed", 
    "connection pool", 
    "object store set", 
    "obtain a connection", 
    "version", 
    "versionchange"
  ], 
  "console": [
    "assert(condition, ...data)", 
    "clear()", 
    "count()", 
    "count(label)", 
    "countReset()", 
    "countReset(label)", 
    "debug(...data)", 
    "dir(item)", 
    "dir(item, options)", 
    "dirxml(...data)", 
    "error(...data)", 
    "group(...data)", 
    "groupCollapsed(...data)", 
    "groupEnd()", 
    "info(...data)", 
    "log(...data)", 
    "table(tabularData)", 
    "table(tabularData, properties)", 
    "time()", 
    "time(label)", 
    "timeEnd()", 
    "timeEnd(label)", 
    "timeLog(label, ...data)", 
    "trace(...data)", 
    "warn(...data)"
  ], 
  "console/assert(condition, ...data)": [
    "condition", 
    "data"
  ], 
  "console/count()": [
    "label"
  ], 
  "console/count(label)": [
    "label"
  ], 
  "console/countReset()": [
    "label"
  ], 
  "console/countReset(label)": [
    "label"
  ], 
  "console/debug(...data)": [
    "data"
  ], 
  "console/dir(item)": [
    "item", 
    "options"
  ], 
  "console/dir(item, options)": [
    "item", 
    "options"
  ], 
  "console/dirxml(...data)": [
    "data"
  ], 
  "console/error(...data)": [
    "data"
  ], 
  "console/group(...data)": [
    "data"
  ], 
  "console/groupCollapsed(...data)": [
    "data"
  ], 
  "console/info(...data)": [
    "data"
  ], 
  "console/log(...data)": [
    "data"
  ], 
  "console/table(tabularData)": [
    "properties", 
    "tabularData"
  ], 
  "console/table(tabularData, properties)": [
    "properties", 
    "tabularData"
  ], 
  "console/time()": [
    "label"
  ], 
  "console/time(label)": [
    "label"
  ], 
  "console/timeEnd()": [
    "label"
  ], 
  "console/timeEnd(label)": [
    "label"
  ], 
  "console/timeLog(label, ...data)": [
    "data", 
    "label"
  ], 
  "console/trace(...data)": [
    "data"
  ], 
  "console/warn(...data)": [
    "data"
  ], 
  "contain": [
    "content", 
    "layout", 
    "none", 
    "paint", 
    "size", 
    "strict", 
    "style"
  ], 
  "content": [
    "/ [ <string> | <counter> ]+", 
    "<content-list>", 
    "<content-replacement>", 
    "<string>", 
    "close-quote", 
    "contents", 
    "leader()", 
    "no-close-quote", 
    "no-open-quote", 
    "none", 
    "normal", 
    "open-quote"
  ], 
  "content()": [
    "after", 
    "before", 
    "first-letter", 
    "marker", 
    "text"
  ], 
  "context-2d": [
    "fillStyle", 
    "filter", 
    "font", 
    "globalAlpha", 
    "globalCompositeOperation", 
    "imageSmoothingEnabled", 
    "imageSmoothingQuality", 
    "lineCap", 
    "lineDashOffset", 
    "lineJoin", 
    "lineWidth", 
    "miterLimit", 
    "shadowBlur", 
    "shadowColor", 
    "shadowOffsetX", 
    "shadowOffsetY", 
    "strokeStyle", 
    "textAlign", 
    "textBaseline"
  ], 
  "context-2d-direction": [
    "inherit", 
    "ltr", 
    "rtl"
  ], 
  "context-2d-fillrule": [
    "evenodd", 
    "nonzero"
  ], 
  "context-2d-imagesmoothingquality": [
    "medium"
  ], 
  "context-2d-textalign": [
    "center", 
    "left", 
    "right"
  ], 
  "context-2d-textbaseline": [
    "alphabetic", 
    "bottom", 
    "hanging", 
    "ideographic", 
    "middle", 
    "top"
  ], 
  "continue": [
    "-webkit-discard", 
    "auto", 
    "discard", 
    "fragments", 
    "overflow", 
    "paginate"
  ], 
  "core-attributes": [
    "class", 
    "id", 
    "lang", 
    "style", 
    "tabindex", 
    "xml:space"
  ], 
  "corner-shape": [
    "bevel", 
    "notch", 
    "round", 
    "scoop"
  ], 
  "counter()": [
    "list-item"
  ], 
  "counter-increment": [
    "list-item"
  ], 
  "counter-reset": [
    "<custom-ident> <integer>?", 
    "list-item", 
    "none"
  ], 
  "counter-set": [
    "list-item"
  ], 
  "counter-set counter-increment": [
    "<custom-ident> <integer>?", 
    "none"
  ], 
  "counters()": [
    "list-item"
  ], 
  "credential": [
    "effective"
  ], 
  "credential id": [
    "looking up"
  ], 
  "credential store": [
    "Modify a credential", 
    "Retrieve a list of credentials", 
    "Store a credential"
  ], 
  "credentialCreationData": [
    "attestationconveyancepreferenceoption", 
    "attestationobjectresult", 
    "clientdatajsonresult", 
    "clientextensionresults"
  ], 
  "css": [
    "ignored", 
    "invalid"
  ], 
  "cssstyledeclaration": [
    "cssText"
  ], 
  "cubic-bezier-easing-function": [
    "cubic-bezier()", 
    "ease", 
    "ease-in", 
    "ease-in-out", 
    "ease-out"
  ], 
  "cursor": [
    "alias", 
    "all-scroll", 
    "auto", 
    "cell", 
    "col-resize", 
    "context-menu", 
    "copy", 
    "crosshair", 
    "default", 
    "direction", 
    "e-resize", 
    "effective key", 
    "effective object store", 
    "ew-resize", 
    "got value flag", 
    "grab", 
    "grabbing", 
    "help", 
    "key", 
    "key only flag", 
    "move", 
    "n-resize", 
    "ne-resize", 
    "nesw-resize", 
    "no-drop", 
    "none", 
    "not-allowed", 
    "ns-resize", 
    "nw-resize", 
    "nwse-resize", 
    "object store position", 
    "pointer", 
    "position", 
    "progress", 
    "range", 
    "request", 
    "row-resize", 
    "s-resize", 
    "se-resize", 
    "source", 
    "sw-resize", 
    "text", 
    "transaction", 
    "value", 
    "vertical-text", 
    "w-resize", 
    "wait", 
    "x", 
    "xlink:href", 
    "y", 
    "zoom-in", 
    "zoom-out"
  ], 
  "custom element definition": [
    "constructor", 
    "disable shadow", 
    "local name", 
    "name"
  ], 
  "data": [
    "value"
  ], 
  "data: URL struct": [
    "body", 
    "mime type"
  ], 
  "database": [
    "name", 
    "upgrade transaction", 
    "version"
  ], 
  "datatransfer-dropeffect": [
    "copy", 
    "link", 
    "move", 
    "none"
  ], 
  "datatransfer-effectallowed": [
    "all", 
    "copy", 
    "copyLink", 
    "copyMove", 
    "link", 
    "linkMove", 
    "move", 
    "none", 
    "uninitialized"
  ], 
  "del": [
    "cite", 
    "datetime"
  ], 
  "destination": [
    "translate"
  ], 
  "details": [
    "open"
  ], 
  "dfn": [
    "title"
  ], 
  "dialog": [
    "open"
  ], 
  "dictionary": [
    "inherit"
  ], 
  "dictionary member": [
    "default value", 
    "not present", 
    "present"
  ], 
  "direction": [
    "ltr", 
    "rtl"
  ], 
  "directive": [
    "initialization", 
    "inline check", 
    "name", 
    "navigation response check", 
    "post-request check", 
    "pre-navigation check", 
    "pre-request check", 
    "response check", 
    "value"
  ], 
  "discard": [
    "onbegin", 
    "onend", 
    "onrepeat"
  ], 
  "display": [
    "annotation", 
    "block", 
    "contents", 
    "flex", 
    "flow", 
    "flow-root", 
    "grid", 
    "inline", 
    "inline-block", 
    "inline-flex", 
    "inline-grid", 
    "inline-table", 
    "layout()", 
    "list-item", 
    "none", 
    "ruby", 
    "ruby annotation", 
    "ruby annotation box", 
    "ruby annotation container", 
    "ruby annotation container box", 
    "ruby base", 
    "ruby base box", 
    "ruby base container", 
    "ruby base container box", 
    "ruby container", 
    "ruby container box", 
    "ruby-base", 
    "ruby-base-container", 
    "ruby-text", 
    "ruby-text-container", 
    "run-in", 
    "table", 
    "table-caption", 
    "table-cell", 
    "table-column", 
    "table-column-group", 
    "table-footer-group", 
    "table-header-group", 
    "table-row", 
    "table-row-group"
  ], 
  "displaymodetype": [
    "browser", 
    "fullscreen", 
    "minimal-ui", 
    "standalone"
  ], 
  "document layout definition": [
    "child input properties", 
    "input properties", 
    "layout options"
  ], 
  "document paint definition": [
    "input argument syntaxes", 
    "input properties", 
    "paintrenderingcontext2dsettings object"
  ], 
  "dominant-baseline": [
    "alphabetic", 
    "auto", 
    "central", 
    "hanging", 
    "ideographic", 
    "mathematical", 
    "middle", 
    "text-bottom", 
    "text-top"
  ], 
  "easing-function": [
    "linear"
  ], 
  "edgeMode": [
    "duplicate", 
    "wrap"
  ], 
  "effective overload set tuple": [
    "callable"
  ], 
  "element": [
    "forwarded part name list", 
    "id", 
    "part name list", 
    "part name map"
  ], 
  "elementinternals": [
    "labels"
  ], 
  "ellipse": [
    "cx", 
    "cy", 
    "rx", 
    "ry"
  ], 
  "embed": [
    "src", 
    "type"
  ], 
  "encoding": [
    "label", 
    "name", 
    "process", 
    "run"
  ], 
  "endpoint": [
    "failures", 
    "pending", 
    "priority", 
    "retry_after", 
    "url", 
    "weight"
  ], 
  "endpoint group": [
    "creation", 
    "endpoints", 
    "expired", 
    "name", 
    "subdomains", 
    "ttl"
  ], 
  "env()": [
    "safe-area-inset-bottom", 
    "safe-area-inset-left", 
    "safe-area-inset-right", 
    "safe-area-inset-top"
  ], 
  "environment": [
    "active service worker", 
    "creation url", 
    "execution ready flag", 
    "id", 
    "target browsing context"
  ], 
  "environment settings object": [
    "api base url", 
    "api url character encoding", 
    "contextually secure", 
    "global object", 
    "https state", 
    "module map", 
    "origin", 
    "realm", 
    "realm execution context", 
    "referrer policy", 
    "responsible browsing context", 
    "responsible document", 
    "responsible event loop"
  ], 
  "event": [
    "bubbles", 
    "cancelable", 
    "currentTarget", 
    "isTrusted", 
    "target", 
    "type"
  ], 
  "event listener": [
    "callback", 
    "capture", 
    "once", 
    "passive", 
    "removed", 
    "type"
  ], 
  "exception": [
    "created", 
    "error name", 
    "message", 
    "throw"
  ], 
  "extended attribute": [
    "takes a named argument list", 
    "takes an argument list", 
    "takes an identifier", 
    "takes an identifier list", 
    "takes no arguments"
  ], 
  "extended attributes": [
    "applicable to types"
  ], 
  "externalapplicationresource": [
    "fingerprints", 
    "id", 
    "min_version", 
    "platform", 
    "url"
  ], 
  "feBlend": [
    "in2", 
    "mode", 
    "no-composite"
  ], 
  "feColorMatrix": [
    "type", 
    "values"
  ], 
  "feComponentTransfer": [
    "amplitude", 
    "exponent", 
    "intercept", 
    "offset", 
    "slope", 
    "tablevalues", 
    "type"
  ], 
  "feComposite": [
    "in2", 
    "k1", 
    "k2", 
    "k3", 
    "k4", 
    "operator"
  ], 
  "feConvolveMatrix": [
    "bias", 
    "divisor", 
    "edgemode", 
    "kernelmatrix", 
    "kernelunitlength", 
    "order", 
    "preservealpha", 
    "targetx", 
    "targety"
  ], 
  "feDiffuseLighting": [
    "diffuseconstant", 
    "kernelunitlength", 
    "surfacescale"
  ], 
  "feDisplacementMap": [
    "in2", 
    "scale", 
    "xchannelselector", 
    "ychannelselector"
  ], 
  "feDistantLight": [
    "azimuth", 
    "elevation"
  ], 
  "feDropShadow": [
    "dx", 
    "dy", 
    "stddeviation"
  ], 
  "feGaussianBlur": [
    "edgemode", 
    "stddeviation"
  ], 
  "feImage": [
    "crossorigin", 
    "href", 
    "preserveaspectratio", 
    "xlink:href"
  ], 
  "feMorphology": [
    "operator", 
    "radius"
  ], 
  "feOffset": [
    "dx", 
    "dy"
  ], 
  "fePointLight": [
    "x", 
    "y", 
    "z"
  ], 
  "feSpecularLighting": [
    "kernelunitlength", 
    "specularconstant", 
    "specularexponent", 
    "surfacescale"
  ], 
  "feSpotLight": [
    "limitingconeangle", 
    "pointsatx", 
    "pointsaty", 
    "pointsatz", 
    "specularexponent", 
    "x", 
    "y", 
    "z"
  ], 
  "feTurbulence": [
    "basefrequency", 
    "numoctaves", 
    "seed", 
    "stitchtiles", 
    "type"
  ], 
  "fetch": [
    "fetch group", 
    "resumed", 
    "suspend", 
    "terminated"
  ], 
  "fetch group": [
    "fetch record", 
    "terminated"
  ], 
  "fetch record": [
    "fetch", 
    "request"
  ], 
  "fetching scripts": [
    "is top-level", 
    "perform the fetch"
  ], 
  "fieldset": [
    "disabled"
  ], 
  "file": [
    "lastModified", 
    "name"
  ], 
  "fill-origin": [
    "border-box", 
    "content-box", 
    "fill-box", 
    "match-parent", 
    "padding-box", 
    "stroke-box"
  ], 
  "fill-rule": [
    "evenodd", 
    "nonzero"
  ], 
  "filter": [
    "<url>", 
    "blur()", 
    "brightness()", 
    "contrast()", 
    "drop-shadow()", 
    "filterres", 
    "filterunits", 
    "grayscale()", 
    "height", 
    "hue-rotate()", 
    "in", 
    "invert()", 
    "opacity()", 
    "primitiveunits", 
    "result", 
    "saturate()", 
    "sepia()", 
    "width", 
    "x", 
    "xlink:href", 
    "y"
  ], 
  "filter-primitive": [
    "height", 
    "in", 
    "result", 
    "width", 
    "x", 
    "y"
  ], 
  "filterUnits": [
    "objectboundingbox", 
    "userspaceonuse"
  ], 
  "fingerprint": [
    "type", 
    "value"
  ], 
  "flex": [
    "<'flex-basis'>", 
    "<'flex-grow'>", 
    "<'flex-shrink'>", 
    "flex basis", 
    "flex grow factor", 
    "flex shrink factor", 
    "none"
  ], 
  "flex-basis": [
    "auto", 
    "content"
  ], 
  "flex-direction": [
    "column", 
    "column-reverse", 
    "row", 
    "row-reverse"
  ], 
  "flex-grow": [
    "<number>"
  ], 
  "flex-shrink": [
    "<number>"
  ], 
  "flex-wrap": [
    "nowrap", 
    "wrap", 
    "wrap-reverse"
  ], 
  "float": [
    "block-end", 
    "block-start", 
    "bottom", 
    "footnote", 
    "inline-end", 
    "inline-start", 
    "left", 
    "none", 
    "right", 
    "snap-block", 
    "snap-block()", 
    "snap-inline", 
    "snap-inline()", 
    "top"
  ], 
  "float-reference": [
    "column", 
    "inline", 
    "page", 
    "region"
  ], 
  "focusevent": [
    "relatedTarget"
  ], 
  "font": [
    "caption", 
    "horiz-adv-x", 
    "horiz-origin-x", 
    "horiz-origin-y", 
    "icon", 
    "menu", 
    "message-box", 
    "small-caption", 
    "status-bar", 
    "vert-adv-y", 
    "vert-origin-x", 
    "vert-origin-y"
  ], 
  "font-face": [
    "accent-height", 
    "alphabetic", 
    "ascent", 
    "bbox", 
    "cap-height", 
    "descent", 
    "font-family", 
    "font-size", 
    "font-stretch", 
    "font-style", 
    "font-variant", 
    "font-weight", 
    "hanging", 
    "ideographic", 
    "mathematical", 
    "overline-position", 
    "overline-thickness", 
    "panose-1", 
    "slope", 
    "stemh", 
    "stemv", 
    "strikethrough-position", 
    "strikethrough-thickness", 
    "underline-position", 
    "underline-thickness", 
    "unicode-range", 
    "units-per-em", 
    "v-alphabetic", 
    "v-hanging", 
    "v-ideographic", 
    "v-mathematical", 
    "widths", 
    "x-height"
  ], 
  "font-face-name": [
    "name"
  ], 
  "font-face-uri": [
    "string", 
    "xlink:href"
  ], 
  "font-family": [
    "cursive", 
    "emoji", 
    "fangsong", 
    "fantasy", 
    "math", 
    "monospace", 
    "sans-serif", 
    "serif", 
    "system-ui"
  ], 
  "font-feature-settings": [
    "<feature-tag-value>", 
    "normal"
  ], 
  "font-kerning": [
    "auto", 
    "none", 
    "normal"
  ], 
  "font-language override": [
    "normal"
  ], 
  "font-language-override": [
    "<string>"
  ], 
  "font-optical-sizing": [
    "auto", 
    "none"
  ], 
  "font-palette": [
    "<palette-identifier>", 
    "dark", 
    "light", 
    "normal"
  ], 
  "font-size": [
    "<absolute-size>", 
    "<length-percentage>", 
    "<relative-size>"
  ], 
  "font-size-adjust": [
    "<number>", 
    "none"
  ], 
  "font-stretch": [
    "<percentage>", 
    "condensed", 
    "expanded", 
    "extra-condensed", 
    "extra-expanded", 
    "normal", 
    "semi-condensed", 
    "semi-expanded", 
    "ultra-condensed", 
    "ultra-expanded"
  ], 
  "font-style": [
    "italic", 
    "normal", 
    "oblique <angle>?"
  ], 
  "font-synthesis-small-caps": [
    "auto", 
    "none"
  ], 
  "font-synthesis-style": [
    "auto", 
    "none"
  ], 
  "font-synthesis-weight": [
    "auto", 
    "none"
  ], 
  "font-variant": [
    "none", 
    "normal"
  ], 
  "font-variant-alternates": [
    "annotation(<feature-value-name>)", 
    "character-variant(<feature-value-name>#)", 
    "historical-forms", 
    "normal", 
    "ornaments(<feature-value-name>)", 
    "styleset(<feature-value-name>#)", 
    "stylistic(<feature-value-name>)", 
    "swash(<feature-value-name>)"
  ], 
  "font-variant-caps": [
    "all-petite-caps", 
    "all-small-caps", 
    "normal", 
    "petite-caps", 
    "small-caps", 
    "titling-caps", 
    "unicase"
  ], 
  "font-variant-east-asian": [
    "full-width", 
    "jis04", 
    "jis78", 
    "jis83", 
    "jis90", 
    "normal", 
    "proportional-width", 
    "ruby", 
    "simplified", 
    "traditional"
  ], 
  "font-variant-emoji": [
    "auto", 
    "emoji", 
    "text", 
    "unicode"
  ], 
  "font-variant-ligatures": [
    "common-ligatures", 
    "contextual", 
    "discretionary-ligatures", 
    "historical-ligatures", 
    "no-common-ligatures", 
    "no-contextual", 
    "no-discretionary-ligatures", 
    "no-historical-ligatures", 
    "none", 
    "normal"
  ], 
  "font-variant-numeric": [
    "diagonal-fractions", 
    "lining-nums", 
    "normal", 
    "oldstyle-nums", 
    "ordinal", 
    "proportional-nums", 
    "slashed-zero", 
    "stacked-fractions", 
    "tabular-nums"
  ], 
  "font-variant-position": [
    "normal", 
    "sub", 
    "super"
  ], 
  "font-weight": [
    "<number>", 
    "bold", 
    "bolder", 
    "lighter", 
    "normal"
  ], 
  "footnote-display": [
    "block", 
    "compact", 
    "inline"
  ], 
  "footnote-policy": [
    "auto", 
    "block", 
    "line"
  ], 
  "forced-color-adjust": [
    "auto", 
    "none"
  ], 
  "foreignObject": [
    "height", 
    "width", 
    "x", 
    "y"
  ], 
  "form": [
    "accept-charset", 
    "autocomplete", 
    "name", 
    "off", 
    "on", 
    "rel"
  ], 
  "gap": [
    "normal"
  ], 
  "global object": [
    "csp list", 
    "realm"
  ], 
  "glyph": [
    "arabic-form", 
    "d", 
    "glyph-name", 
    "horiz-adv-x", 
    "lang", 
    "orientation", 
    "unicode", 
    "vert-adv-y", 
    "vert-origin-x", 
    "vert-origin-y"
  ], 
  "grid": [
    "<'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>?", 
    "[ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>"
  ], 
  "grid-auto-flow": [
    "column", 
    "dense", 
    "row"
  ], 
  "grid-column-end": [
    "<grid-line>"
  ], 
  "grid-column-start": [
    "<grid-line>"
  ], 
  "grid-row-end": [
    "<grid-line>"
  ], 
  "grid-row-start": [
    "<grid-line>"
  ], 
  "grid-template": [
    "<'grid-template-rows'> / <'grid-template-columns'>", 
    "[ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?", 
    "none"
  ], 
  "grid-template-areas": [
    "<string>+", 
    "named cell token", 
    "none", 
    "null cell token", 
    "trash token"
  ], 
  "grid-template-columns": [
    "<flex>", 
    "<length-percentage>", 
    "<track-list> | <auto-track-list>", 
    "auto", 
    "fit-content()", 
    "flex factor", 
    "max-content", 
    "min-content", 
    "minmax()", 
    "none", 
    "sizing function", 
    "subgrid", 
    "subgrid <line-name-list>?", 
    "track sizing function"
  ], 
  "grid-template-rows": [
    "<flex>", 
    "<length-percentage>", 
    "<track-list> | <auto-track-list>", 
    "auto", 
    "fit-content()", 
    "flex factor", 
    "max-content", 
    "min-content", 
    "minmax()", 
    "none", 
    "sizing function", 
    "subgrid", 
    "subgrid <line-name-list>?", 
    "track sizing function"
  ], 
  "hanging-punctuation": [
    "allow-end", 
    "first", 
    "force-end", 
    "last", 
    "none"
  ], 
  "head": [
    "profile"
  ], 
  "header": [
    "name", 
    "value"
  ], 
  "header list": [
    "append", 
    "combine", 
    "contains", 
    "delete", 
    "does not contain", 
    "extract a mime type", 
    "extracting a mime type", 
    "get", 
    "get, decode, and split", 
    "getting, decoding, and splitting", 
    "set", 
    "sort and combine"
  ], 
  "header/value": [
    "normalize"
  ], 
  "height": [
    "<length-percentage>", 
    "auto", 
    "fit-content(<length-percentage>)", 
    "max-content", 
    "min-content"
  ], 
  "hkern": [
    "g1", 
    "g2", 
    "k", 
    "u1", 
    "u2"
  ], 
  "host": [
    "equal", 
    "public suffix", 
    "registrable domain", 
    "same site"
  ], 
  "html": [
    "manifest"
  ], 
  "html-global": [
    "exportparts", 
    "part"
  ], 
  "htmlsvg-global": [
    "nonce"
  ], 
  "hyperlink": [
    "hash", 
    "host", 
    "hostname", 
    "password", 
    "pathname", 
    "port", 
    "protocol", 
    "search", 
    "username"
  ], 
  "hyphenate-character": [
    "<string>", 
    "auto"
  ], 
  "hyphenate-limit-chars": [
    "auto"
  ], 
  "hyphenate-limit-lines": [
    "always", 
    "column", 
    "none", 
    "page", 
    "spread"
  ], 
  "hyphens": [
    "auto", 
    "manual", 
    "none"
  ], 
  "iframe": [
    "allow", 
    "allowfullscreen", 
    "allowpaymentrequest", 
    "name", 
    "policy object", 
    "referrerpolicy", 
    "sandbox", 
    "src", 
    "srcdoc"
  ], 
  "iframe/sandbox": [
    "allow-secure-context"
  ], 
  "image": [
    "crossorigin", 
    "height", 
    "href", 
    "preserveaspectratio", 
    "width", 
    "x", 
    "xlink:href", 
    "xlink:title", 
    "y"
  ], 
  "image-orientation": [
    "<angle>", 
    "<angle>? flip", 
    "from-image", 
    "none"
  ], 
  "image-rendering": [
    "auto", 
    "crisp-edges", 
    "high-quality", 
    "pixelated", 
    "smooth"
  ], 
  "image-resolution": [
    "<resolution>", 
    "from-image", 
    "snap"
  ], 
  "imageorientation": [
    "flipY", 
    "none"
  ], 
  "imageresource": [
    "platform", 
    "processing the sizes member of an image", 
    "purpose", 
    "sizes", 
    "src", 
    "type"
  ], 
  "img": [
    "alt", 
    "crossorigin", 
    "decoding", 
    "ismap", 
    "referrerpolicy", 
    "sizes", 
    "src", 
    "srcset"
  ], 
  "in": [
    "backgroundalpha", 
    "backgroundimage", 
    "fillpaint", 
    "sourcealpha", 
    "sourcegraphic", 
    "strokepaint"
  ], 
  "index": [
    "key path", 
    "keys", 
    "list of records", 
    "multientry flag", 
    "name", 
    "records", 
    "referenced", 
    "referenced value", 
    "references", 
    "unique flag", 
    "values"
  ], 
  "index-handle": [
    "index", 
    "name", 
    "object store handle", 
    "transaction"
  ], 
  "initial-letters": [
    "<integer>", 
    "<number>", 
    "drop", 
    "initial letter sink", 
    "initial letter size", 
    "normal", 
    "raise"
  ], 
  "initial-letters-align": [
    "alphabetic", 
    "border-box", 
    "hanging", 
    "hebrew", 
    "ideographic"
  ], 
  "initial-letters-wrap": [
    "<length>", 
    "<percentage>", 
    "all", 
    "first", 
    "grid", 
    "none"
  ], 
  "inline-sizing": [
    "normal", 
    "stretch"
  ], 
  "input": [
    "accept", 
    "alt", 
    "checked", 
    "list", 
    "max", 
    "maxlength", 
    "min", 
    "minlength", 
    "multiple", 
    "pattern", 
    "placeholder", 
    "readonly", 
    "required", 
    "size", 
    "src", 
    "step", 
    "title", 
    "type", 
    "value"
  ], 
  "input-value": [
    "filename"
  ], 
  "insecure requests policy": [
    "do not upgrade", 
    "upgrade"
  ], 
  "interface": [
    "include", 
    "inclusive inherited interfaces", 
    "inherit"
  ], 
  "internal": [
    "internal response"
  ], 
  "iteration": [
    "break", 
    "continue", 
    "while"
  ], 
  "job": [
    "client", 
    "containing job queue", 
    "force bypass cache flag", 
    "job promise", 
    "job type", 
    "list of equivalent jobs", 
    "referrer", 
    "scope url", 
    "script url", 
    "update via cache mode", 
    "worker type"
  ], 
  "justify-content": [
    "<aspect-ratio>", 
    "<transfer-ratio>", 
    "center", 
    "flex-end", 
    "flex-start", 
    "left", 
    "normal", 
    "right", 
    "space-around", 
    "space-between", 
    "space-evenly", 
    "stretch"
  ], 
  "justify-items": [
    "baseline", 
    "first", 
    "first baseline", 
    "last", 
    "last baseline", 
    "left", 
    "legacy", 
    "right"
  ], 
  "justify-self": [
    "auto", 
    "baseline", 
    "first", 
    "first baseline", 
    "last", 
    "last baseline", 
    "left", 
    "normal", 
    "right", 
    "stretch"
  ], 
  "kana": [
    "full-size", 
    "full-size kana", 
    "small", 
    "small kana"
  ], 
  "key": [
    "type", 
    "value"
  ], 
  "key generator": [
    "current number"
  ], 
  "label": [
    "for"
  ], 
  "layout API context": [
    "mode", 
    "unique id", 
    "work queue"
  ], 
  "layout api work task": [
    "child break token", 
    "layout child", 
    "layout constraints", 
    "promise", 
    "task type"
  ], 
  "layout definition": [
    "child input properties", 
    "class constructor", 
    "constructor valid flag", 
    "input properties", 
    "intrinsic sizes function", 
    "intrinsic sizes generator function", 
    "layout function", 
    "layout generator function", 
    "layout options"
  ], 
  "leader()": [
    "<string>", 
    "dotted", 
    "solid", 
    "space"
  ], 
  "leading-trim": [
    "cap", 
    "ex", 
    "ideographic", 
    "ideographic-ink", 
    "normal", 
    "text"
  ], 
  "leading-trim-over": [
    "cap", 
    "ex", 
    "ideographic", 
    "ideographic-ink", 
    "normal", 
    "text"
  ], 
  "leading-trim-under": [
    "alphabetic", 
    "ideographic", 
    "ideographic-ink", 
    "normal", 
    "text"
  ], 
  "left": [
    "<length>", 
    "<percentage>", 
    "auto"
  ], 
  "legacy platform object": [
    "getownproperty"
  ], 
  "letter-spacing": [
    "<length>", 
    "normal"
  ], 
  "lfe": [
    "labels"
  ], 
  "li": [
    "value"
  ], 
  "line": [
    "x1", 
    "x2", 
    "y1", 
    "y2"
  ], 
  "line-break": [
    "anywhere", 
    "auto", 
    "loose", 
    "normal", 
    "strict"
  ], 
  "line-clamp": [
    "<integer>", 
    "none"
  ], 
  "line-grid": [
    "create", 
    "match-parent"
  ], 
  "line-height": [
    "<length-percentage>", 
    "<number>", 
    "normal"
  ], 
  "line-sizing": [
    "legacy", 
    "normal"
  ], 
  "line-snap": [
    "baseline", 
    "contain", 
    "none"
  ], 
  "linearGradient": [
    "xlink:href", 
    "xlink:title"
  ], 
  "link": [
    "as", 
    "charset", 
    "color", 
    "content language state", 
    "crossorigin", 
    "default style state", 
    "encoding declaration state", 
    "href", 
    "hreflang", 
    "imagesizes", 
    "imagesrcset", 
    "integrity", 
    "media", 
    "name", 
    "referrerpolicy", 
    "refresh state", 
    "rel", 
    "set-cookie state", 
    "sizes", 
    "title", 
    "type", 
    "x-ua-compatible state"
  ], 
  "list": [
    "append", 
    "clone", 
    "contain", 
    "empty", 
    "exist", 
    "extend", 
    "for each", 
    "insert", 
    "is empty", 
    "is not empty", 
    "item", 
    "iterate", 
    "prepend", 
    "remove", 
    "replace", 
    "size", 
    "sort", 
    "sort in ascending order", 
    "sort in descending order", 
    "sorting", 
    "sorting in ascending order", 
    "sorting in descending order"
  ], 
  "list-style-image": [
    "<image>", 
    "none"
  ], 
  "list-style-position": [
    "inside", 
    "outside"
  ], 
  "list-style-type": [
    "<counter-style>", 
    "<string>", 
    "none"
  ], 
  "live range": [
    "clone the contents", 
    "cloning the contents", 
    "contained", 
    "extract", 
    "insert", 
    "partially contained", 
    "root"
  ], 
  "logical-page": [
    "recto", 
    "verso"
  ], 
  "logical-page-selector": [
    ":recto", 
    ":verso"
  ], 
  "main": [
    "main fetch"
  ], 
  "map": [
    "contain", 
    "entry", 
    "exist", 
    "for each", 
    "get", 
    "get the keys", 
    "get the value", 
    "get the values", 
    "getting the keys", 
    "getting the values", 
    "is empty", 
    "is not empty", 
    "iterate", 
    "key", 
    "name", 
    "remove", 
    "set", 
    "set the value", 
    "size", 
    "sort", 
    "sort in ascending order", 
    "sort in descending order", 
    "sorting", 
    "sorting in ascending order", 
    "sorting in descending order", 
    "value"
  ], 
  "margin": [
    "logical"
  ], 
  "margin-break": [
    "auto", 
    "discard", 
    "keep"
  ], 
  "margin-trim": [
    "all", 
    "in-flow", 
    "none"
  ], 
  "marker": [
    "markerheight", 
    "markerunits", 
    "markerwidth", 
    "orient", 
    "refx", 
    "refy"
  ], 
  "marker-side": [
    "match-parent", 
    "match-self"
  ], 
  "marquee": [
    "alternate", 
    "behavior", 
    "direction", 
    "down", 
    "left", 
    "loop", 
    "right", 
    "scroll", 
    "slide", 
    "truespeed", 
    "up"
  ], 
  "mask": [
    "height", 
    "maskcontentunits", 
    "maskunits", 
    "width", 
    "x", 
    "y"
  ], 
  "mask-border-mode": [
    "alpha", 
    "luminance"
  ], 
  "mask-border-slice": [
    "fill"
  ], 
  "mask-clip": [
    "border-box", 
    "content-box", 
    "fill-box", 
    "margin-box", 
    "no-clip", 
    "padding-box", 
    "stroke-box", 
    "view-box"
  ], 
  "mask-composite": [
    "add", 
    "exclude", 
    "intersect", 
    "subtract"
  ], 
  "mask-image": [
    "<url>"
  ], 
  "mask-mode": [
    "alpha", 
    "auto", 
    "luminance", 
    "match-source"
  ], 
  "mask-origin": [
    "border-box", 
    "content-box", 
    "fill-box", 
    "margin-box", 
    "padding-box", 
    "stroke-box", 
    "view-box"
  ], 
  "mask-type": [
    "alpha", 
    "luminance"
  ], 
  "maskContentUnits": [
    "objectboundingbox", 
    "userspaceonuse"
  ], 
  "maskUnits": [
    "objectboundingbox", 
    "userspaceonuse"
  ], 
  "math function": [
    "serialize a summation", 
    "serialize the summation", 
    "simplify a calculation", 
    "simplify an expression", 
    "simplify the calculation", 
    "simplify the expression"
  ], 
  "matrix": [
    "is 2d", 
    "m11 element", 
    "m12 element", 
    "m13 element", 
    "m14 element", 
    "m21 element", 
    "m22 element", 
    "m23 element", 
    "m24 element", 
    "m31 element", 
    "m32 element", 
    "m33 element", 
    "m34 element", 
    "m41 element", 
    "m42 element", 
    "m43 element", 
    "m44 element", 
    "validate and fixup", 
    "validate and fixup (2d)"
  ], 
  "max-height": [
    "<length-percentage>", 
    "fit-content(<length-percentage>)", 
    "max-content", 
    "min-content", 
    "none"
  ], 
  "max-lines": [
    "<integer>", 
    "none"
  ], 
  "max-width": [
    "<length-percentage>", 
    "fit-content(<length-percentage>)", 
    "max-content", 
    "min-content", 
    "none"
  ], 
  "media": [
    "seek"
  ], 
  "meta": [
    "content", 
    "http-equiv"
  ], 
  "metadata": [
    "role"
  ], 
  "meter": [
    "high", 
    "low", 
    "max", 
    "min", 
    "optimum", 
    "value"
  ], 
  "method": [
    "normalize"
  ], 
  "min-height": [
    "<length-percentage>", 
    "auto", 
    "fit-content(<length-percentage>)", 
    "max-content", 
    "min-content"
  ], 
  "min-width": [
    "<length-percentage>", 
    "auto", 
    "fit-content(<length-percentage>)", 
    "max-content", 
    "min-content"
  ], 
  "mouseevent": [
    "relatedTarget"
  ], 
  "no-composite": [
    "no-composite"
  ], 
  "nullable types": [
    "inner type"
  ], 
  "object": [
    "data", 
    "name", 
    "type"
  ], 
  "object-fit": [
    "contain", 
    "cover", 
    "fill", 
    "none", 
    "scale-down"
  ], 
  "object-store": [
    "in-line keys", 
    "key path", 
    "list of records", 
    "name", 
    "out-of-line keys", 
    "record"
  ], 
  "object-store-handle": [
    "index set", 
    "name", 
    "object store", 
    "transaction"
  ], 
  "offset-after": [
    "<length>", 
    "<percentage>", 
    "auto"
  ], 
  "offset-before": [
    "<length>", 
    "<percentage>", 
    "auto"
  ], 
  "offset-end": [
    "<length>", 
    "<percentage>", 
    "auto"
  ], 
  "offset-rotate": [
    "auto", 
    "reverse"
  ], 
  "offset-start": [
    "<length>", 
    "<percentage>", 
    "auto"
  ], 
  "offsetpath": [
    "<size>", 
    "contain", 
    "initial direction", 
    "initial position", 
    "none", 
    "path()", 
    "ray()"
  ], 
  "ol": [
    "reversed", 
    "start", 
    "type"
  ], 
  "operator": [
    "arithmetic", 
    "atop", 
    "in", 
    "lighter", 
    "out", 
    "over", 
    "xor"
  ], 
  "optgroup": [
    "disabled", 
    "label"
  ], 
  "option": [
    "disabled", 
    "label", 
    "selected", 
    "value"
  ], 
  "optional argument": [
    "default value"
  ], 
  "order": [
    "<integer>"
  ], 
  "orientation": [
    "auto", 
    "landscape", 
    "portrait"
  ], 
  "orientationlocktype": [
    "any", 
    "landscape", 
    "landscape-primary", 
    "landscape-secondary", 
    "natural", 
    "portrait", 
    "portrait-primary", 
    "portrait-secondary"
  ], 
  "orientationtype": [
    "landscape-primary", 
    "landscape-secondary", 
    "portrait-primary", 
    "portrait-secondary"
  ], 
  "origin": [
    "domain", 
    "host", 
    "port", 
    "prevent silent access flag", 
    "requires user mediation", 
    "scheme"
  ], 
  "outline-color": [
    "invert"
  ], 
  "output": [
    "for"
  ], 
  "overflow": [
    "auto", 
    "clip", 
    "hidden", 
    "scroll", 
    "visible"
  ], 
  "overflow-anchor": [
    "auto", 
    "none"
  ], 
  "overflow-wrap": [
    "anywhere", 
    "break-word", 
    "normal"
  ], 
  "overflow-x": [
    "auto", 
    "clip", 
    "hidden", 
    "scroll", 
    "visible"
  ], 
  "overflow-y": [
    "auto", 
    "clip", 
    "hidden", 
    "scroll", 
    "visible"
  ], 
  "overscroll-behavior": [
    "auto", 
    "contain", 
    "none"
  ], 
  "overscroll-behavior-block": [
    "auto", 
    "contain", 
    "none"
  ], 
  "overscroll-behavior-inline": [
    "auto", 
    "contain", 
    "none"
  ], 
  "overscroll-behavior-x": [
    "auto", 
    "contain", 
    "none"
  ], 
  "overscroll-behavior-y": [
    "auto", 
    "contain", 
    "none"
  ], 
  "padding": [
    "logical"
  ], 
  "page-break-inside": [
    "auto", 
    "avoid", 
    "avoid-column", 
    "avoid-page", 
    "avoid-region"
  ], 
  "paint definition": [
    "class constructor", 
    "constructor valid flag", 
    "input properties", 
    "paint function", 
    "paintrenderingcontext2dsettings object"
  ], 
  "pair": [
    "item", 
    "name"
  ], 
  "parallel queue": [
    "enqueue steps", 
    "enqueue the following steps"
  ], 
  "param": [
    "name", 
    "value"
  ], 
  "path": [
    "d", 
    "pathlength"
  ], 
  "path()": [
    "<fill-rule>", 
    "<string>", 
    "evenodd", 
    "nonzero"
  ], 
  "pattern": [
    "xlink:href", 
    "xlink:title"
  ], 
  "pending tasks struct": [
    "counter"
  ], 
  "performance": [
    "now", 
    "now()", 
    "timeorigin", 
    "tojson", 
    "tojson()"
  ], 
  "perspective": [
    "<length>", 
    "none"
  ], 
  "perspective-origin": [
    "<length>", 
    "<percentage>", 
    "bottom", 
    "center", 
    "left", 
    "right", 
    "top"
  ], 
  "platform object": [
    "[[Detached]]"
  ], 
  "point": [
    "w perspective", 
    "x coordinate", 
    "y coordinate", 
    "z coordinate"
  ], 
  "policy": [
    "directive set", 
    "disposition", 
    "self-origin", 
    "source"
  ], 
  "polygon": [
    "points"
  ], 
  "polyline": [
    "points"
  ], 
  "position": [
    "absolute", 
    "fixed", 
    "relative", 
    "static", 
    "sticky"
  ], 
  "premultiplyalpha": [
    "none", 
    "premultiply"
  ], 
  "primitiveUnits": [
    "objectboundingbox", 
    "userspaceonuse"
  ], 
  "progress": [
    "max", 
    "value"
  ], 
  "promptresponseobject": [
    "userchoice"
  ], 
  "propdef-footnote-display": [
    "block", 
    "compact", 
    "inline"
  ], 
  "property": [
    "scoped", 
    "scoped properties", 
    "scoped property", 
    "scoped to a sub-tree", 
    "scoped to an element", 
    "scoped to an element's sub-tree", 
    "scoped to the element", 
    "scoped to the element's sub-tree", 
    "scoped to the sub-tree"
  ], 
  "public key credential source": [
    "id", 
    "managing authenticator", 
    "otherui", 
    "privatekey", 
    "rpid", 
    "type", 
    "userhandle"
  ], 
  "q": [
    "cite"
  ], 
  "quadrilateral": [
    "point 1", 
    "point 2", 
    "point 3", 
    "point 4"
  ], 
  "queue": [
    "clone", 
    "contain", 
    "dequeue", 
    "empty", 
    "enqueue", 
    "exist", 
    "is empty", 
    "is not empty", 
    "item", 
    "size", 
    "sort", 
    "sort in ascending order", 
    "sort in descending order", 
    "sorting", 
    "sorting in ascending order", 
    "sorting in descending order"
  ], 
  "queuing strategy": [
    "highwatermark", 
    "size(chunk)"
  ], 
  "quotes": [
    "none"
  ], 
  "radial-gradient()": [
    "<ending-shape>", 
    "<position>", 
    "<size>", 
    "gradient center"
  ], 
  "radialGradient": [
    "xlink:href", 
    "xlink:title"
  ], 
  "range": [
    "collapsed", 
    "end", 
    "end node", 
    "end offset", 
    "select", 
    "start", 
    "start node", 
    "start offset"
  ], 
  "rect": [
    "height", 
    "rx", 
    "ry", 
    "width", 
    "x", 
    "y"
  ], 
  "rectangle": [
    "height dimension", 
    "origin", 
    "width dimension", 
    "x coordinate", 
    "y coordinate"
  ], 
  "registered observer": [
    "observer", 
    "options"
  ], 
  "repeat()": [
    "auto-fill", 
    "auto-fit"
  ], 
  "repeating-conic-gradient()": [
    "<angle>", 
    "<position>", 
    "gradient center"
  ], 
  "repeating-radial-gradient()": [
    "<ending-shape>", 
    "<position>", 
    "<size>", 
    "gradient center"
  ], 
  "report": [
    "attempts", 
    "body", 
    "group", 
    "timestamp", 
    "type", 
    "url", 
    "user agent"
  ], 
  "request": [
    "add a range header", 
    "blocked", 
    "body", 
    "cache mode", 
    "client", 
    "clone", 
    "connection queue", 
    "credentials mode", 
    "cryptographic nonce metadata", 
    "current url", 
    "destination", 
    "done flag", 
    "effective directive", 
    "error", 
    "header list", 
    "history-navigation flag", 
    "initiator", 
    "integrity metadata", 
    "keepalive flag", 
    "method", 
    "mode", 
    "open request", 
    "origin", 
    "parser metadata", 
    "placed", 
    "prevent no-cache cache-control header modification flag", 
    "priority", 
    "processed", 
    "processed flag", 
    "redirect count", 
    "redirect mode", 
    "referrer", 
    "referrer policy", 
    "reload-navigation flag", 
    "replaces client id", 
    "reserved client", 
    "response tainting", 
    "result", 
    "service-workers mode", 
    "source", 
    "success", 
    "synchronous flag", 
    "tainted origin flag", 
    "transaction", 
    "transmit body", 
    "unsafe-request flag", 
    "upgradeneeded", 
    "url", 
    "url list", 
    "use-cors-preflight flag", 
    "use-url-credentials flag", 
    "window"
  ], 
  "request/destination": [
    "script-like"
  ], 
  "resizequality": [
    "medium", 
    "pixelated"
  ], 
  "response": [
    "aborted flag", 
    "body", 
    "cache state", 
    "clone", 
    "cors-exposed header-name list", 
    "csp list", 
    "header list", 
    "https state", 
    "location url", 
    "range-requested flag", 
    "status", 
    "status message", 
    "trailer", 
    "trailer failed flag", 
    "type", 
    "url", 
    "url list"
  ], 
  "result": [
    "<filter-primitive-reference>"
  ], 
  "right": [
    "<length>", 
    "<percentage>", 
    "auto"
  ], 
  "rotate": [
    "none", 
    "x", 
    "y", 
    "z"
  ], 
  "row-gap": [
    "normal"
  ], 
  "ruby-align": [
    "center", 
    "ruby-align:center", 
    "ruby-align:space-around", 
    "ruby-align:space-between", 
    "ruby-align:start", 
    "space-around", 
    "space-between", 
    "start"
  ], 
  "ruby-merge": [
    "auto", 
    "collapse", 
    "ruby-merge:auto", 
    "ruby-merge:collapse", 
    "ruby-merge:separate", 
    "separate"
  ], 
  "ruby-position": [
    "inter-character", 
    "left", 
    "over", 
    "right", 
    "under"
  ], 
  "scale": [
    "none"
  ], 
  "screen": [
    "orientation", 
    "screen.orientation"
  ], 
  "screenorientation": [
    "angle", 
    "lock", 
    "lock()", 
    "onchange", 
    "screenorientation.angle", 
    "screenorientation.lock", 
    "screenorientation.lock()", 
    "screenorientation.onchange", 
    "screenorientation.type", 
    "screenorientation.unlock", 
    "screenorientation.unlock()", 
    "type", 
    "unlock", 
    "unlock()"
  ], 
  "script": [
    "\"parser-inserted\"", 
    "base url", 
    "crossorigin", 
    "error to rethrow", 
    "fetch options", 
    "href", 
    "integrity", 
    "onabort", 
    "onactivate", 
    "onbegin", 
    "onclick", 
    "onend", 
    "onerror", 
    "onfocusin", 
    "onfocusout", 
    "onload", 
    "onmousedown", 
    "onmousemove", 
    "onmouseout", 
    "onmouseover", 
    "onmouseup", 
    "onrepeat", 
    "onresize", 
    "onscroll", 
    "onunload", 
    "onzoom", 
    "parse error", 
    "record", 
    "settings object", 
    "src", 
    "type", 
    "xlink:href", 
    "xlink:title"
  ], 
  "script resource": [
    "has ever been evaluated flag", 
    "https state", 
    "referrer policy"
  ], 
  "scroll-anchoring": [
    "anchor node"
  ], 
  "scroll-behavior": [
    "auto", 
    "smooth"
  ], 
  "scroll-padding": [
    "<length-percentage>", 
    "auto"
  ], 
  "scroll-padding-block": [
    "<length-percentage>", 
    "auto"
  ], 
  "scroll-padding-block-end": [
    "<length-percentage>", 
    "auto"
  ], 
  "scroll-padding-block-start": [
    "<length-percentage>", 
    "auto"
  ], 
  "scroll-padding-inline": [
    "<length-percentage>", 
    "auto"
  ], 
  "scroll-padding-inline-end": [
    "<length-percentage>", 
    "auto"
  ], 
  "scroll-padding-inline-start": [
    "<length-percentage>", 
    "auto"
  ], 
  "scroll-snap-align": [
    "center", 
    "end", 
    "none", 
    "start"
  ], 
  "scroll-snap-stop": [
    "always", 
    "normal"
  ], 
  "scroll-snap-type": [
    "block", 
    "both", 
    "inline", 
    "mandatory", 
    "none", 
    "proximity", 
    "x", 
    "y"
  ], 
  "scrollbar-color": [
    "<color>", 
    "auto", 
    "dark", 
    "light"
  ], 
  "scrollbar-gutter": [
    "always", 
    "auto", 
    "both", 
    "force", 
    "stable"
  ], 
  "scrollbar-width": [
    "<length>", 
    "auto", 
    "none", 
    "thin"
  ], 
  "scrollrestoration": [
    "auto", 
    "manual"
  ], 
  "select": [
    "drop-down box", 
    "list box", 
    "multiple", 
    "required", 
    "size"
  ], 
  "selectionmode": [
    "preserve"
  ], 
  "selector": [
    "combinator", 
    "subject", 
    "subject of a selector"
  ], 
  "service worker": [
    "classic scripts imported flag", 
    "containing service worker registration", 
    "functional events", 
    "global object", 
    "id", 
    "imported scripts updated flag", 
    "lifecycle events", 
    "registration", 
    "script resource", 
    "script resource map", 
    "script url", 
    "set of event types to handle", 
    "set of extended events", 
    "set of used scripts", 
    "skip waiting flag", 
    "state", 
    "type"
  ], 
  "service worker client": [
    "dedicated worker client", 
    "discarded flag", 
    "origin", 
    "shared worker client", 
    "window client", 
    "worker client"
  ], 
  "service worker registration": [
    "active worker", 
    "installing worker", 
    "last update check time", 
    "navigation preload enabled flag", 
    "navigation preload header value", 
    "navigationpreloadmanager", 
    "scope url", 
    "task queues", 
    "uninstalling flag", 
    "update via cache mode", 
    "waiting worker"
  ], 
  "serviceworkerregistrationobject": [
    "scope", 
    "src", 
    "type", 
    "update_via_cache"
  ], 
  "set": [
    "append", 
    "clone", 
    "contain", 
    "empty", 
    "exist", 
    "for each", 
    "insert", 
    "intersection", 
    "is empty", 
    "is not empty", 
    "item", 
    "iterate", 
    "onbegin", 
    "onend", 
    "onrepeat", 
    "prepend", 
    "remove", 
    "replace", 
    "replacing", 
    "size", 
    "sort", 
    "sort in ascending order", 
    "sort in descending order", 
    "sorting", 
    "sorting in ascending order", 
    "sorting in descending order", 
    "subset", 
    "superset", 
    "to", 
    "union"
  ], 
  "shadow root": [
    "part element map"
  ], 
  "shape-image-threshold": [
    "<number>"
  ], 
  "shape-inside": [
    "auto", 
    "display", 
    "outside-shape"
  ], 
  "shape-margin": [
    "<length-percentage>", 
    "<length>", 
    "<percentage>"
  ], 
  "shape-outside": [
    "<basic-shape>", 
    "<image>", 
    "border-box", 
    "content-box", 
    "margin-box", 
    "none", 
    "padding-box"
  ], 
  "slot": [
    "assigned nodes", 
    "name"
  ], 
  "slotable": [
    "assigned", 
    "assigned slot", 
    "name"
  ], 
  "source": [
    "media", 
    "sizes", 
    "src", 
    "srcset", 
    "type"
  ], 
  "source list": [
    "allows all inline behavior"
  ], 
  "spatial-navigation-action": [
    "auto", 
    "focus", 
    "scroll"
  ], 
  "spatial-navigation-contain": [
    "auto", 
    "contain"
  ], 
  "stack": [
    "clone", 
    "contain", 
    "empty", 
    "exist", 
    "is empty", 
    "is not empty", 
    "item", 
    "pop", 
    "push", 
    "size", 
    "sort", 
    "sort in ascending order", 
    "sort in descending order", 
    "sorting", 
    "sorting in ascending order", 
    "sorting in descending order"
  ], 
  "step-easing-function": [
    "step-end", 
    "step-start", 
    "steps()"
  ], 
  "steps()": [
    "end", 
    "jump-both", 
    "jump-end", 
    "jump-none", 
    "jump-start", 
    "start"
  ], 
  "stream": [
    "prepended", 
    "pushed", 
    "read"
  ], 
  "string": [
    "concatenate", 
    "concatenation", 
    "length", 
    "position variable"
  ], 
  "string()": [
    "first", 
    "first-except", 
    "last", 
    "start"
  ], 
  "string-set": [
    "none"
  ], 
  "stroke-align": [
    "center", 
    "inset", 
    "outset"
  ], 
  "stroke-dash-corner": [
    "none"
  ], 
  "stroke-dash-justify": [
    "compress", 
    "dashes", 
    "gaps", 
    "none", 
    "stretch"
  ], 
  "stroke-dasharray": [
    "<length-percentage>+#", 
    "none"
  ], 
  "stroke-linecap": [
    "butt", 
    "round", 
    "square"
  ], 
  "stroke-linejoin": [
    "arcs", 
    "bevel", 
    "crop", 
    "fallback", 
    "miter", 
    "round"
  ], 
  "stroke-miterlimit": [
    "<number>"
  ], 
  "stroke-origin": [
    "border-box", 
    "content-box", 
    "fill-box", 
    "match-parent", 
    "padding-box", 
    "stroke-box"
  ], 
  "struct": [
    "item", 
    "name"
  ], 
  "style": [
    "contentstyletype", 
    "media", 
    "title", 
    "type"
  ], 
  "sum value": [
    "unit map", 
    "value"
  ], 
  "supported open() feature name": [
    "height", 
    "left", 
    "top", 
    "width"
  ], 
  "svg": [
    "baseprofile", 
    "contentscripttype", 
    "contentstyletype", 
    "height", 
    "preserveaspectratio", 
    "version", 
    "viewbox", 
    "width", 
    "x", 
    "y", 
    "zoomandpan"
  ], 
  "switch": [
    "externalresourcesrequired", 
    "id", 
    "requiredextensions", 
    "requiredfeatures", 
    "xml:base", 
    "xml:lang", 
    "xml:space"
  ], 
  "symbol": [
    "refx", 
    "refy"
  ], 
  "system": [
    "symbolic"
  ], 
  "text": [
    "dx", 
    "dy", 
    "lengthadjust", 
    "rotate", 
    "textlength", 
    "x", 
    "y"
  ], 
  "text-align": [
    "<string>", 
    "alignment character", 
    "center", 
    "end", 
    "justify", 
    "justify-all", 
    "left", 
    "match-parent", 
    "right", 
    "start"
  ], 
  "text-align-last": [
    "auto"
  ], 
  "text-combine-upright": [
    "all", 
    "digits <integer>?", 
    "none"
  ], 
  "text-decoration-line": [
    "blink", 
    "grammar-error", 
    "line-through", 
    "none", 
    "overline", 
    "underline"
  ], 
  "text-decoration-skip": [
    "box-decoration", 
    "edges", 
    "none", 
    "objects", 
    "spaces"
  ], 
  "text-decoration-skip-ink": [
    "auto", 
    "none"
  ], 
  "text-decoration-width": [
    "<length>", 
    "auto", 
    "from-font"
  ], 
  "text-group-align": [
    "center", 
    "end", 
    "left", 
    "none", 
    "right", 
    "start"
  ], 
  "text-indent": [
    "<length>", 
    "<percentage>", 
    "each-line", 
    "hanging"
  ], 
  "text-justify": [
    "auto", 
    "distribute", 
    "inter-character", 
    "inter-word", 
    "none"
  ], 
  "text-orientation": [
    "mixed", 
    "sideways", 
    "sideways-right", 
    "upright"
  ], 
  "text-overflow": [
    "clip", 
    "ellipsis", 
    "fade", 
    "fade()"
  ], 
  "text-size-adjust": [
    "<percentage>", 
    "auto", 
    "none"
  ], 
  "text-space-collapse": [
    "collapse", 
    "discard", 
    "preserve", 
    "preserve-breaks", 
    "preserve-spaces"
  ], 
  "text-space-trim": [
    "discard-after", 
    "discard-before", 
    "trim-inner"
  ], 
  "text-spacing": [
    "allow-end", 
    "ideograph-alpha", 
    "ideograph-numeric", 
    "no-compress", 
    "none", 
    "normal", 
    "punctuation", 
    "space-adjacent", 
    "space-end", 
    "space-first", 
    "space-start", 
    "trim-adjacent", 
    "trim-end", 
    "trim-start"
  ], 
  "text-tecoration-line": [
    "spelling-error"
  ], 
  "text-text-emphasis": [
    "open"
  ], 
  "text-text-emphasis-position": [
    "left", 
    "over", 
    "right", 
    "under"
  ], 
  "text-text-emphasis-style": [
    "<string>", 
    "circle", 
    "dot", 
    "double-circle", 
    "filled", 
    "none", 
    "sesame", 
    "triangle"
  ], 
  "text-transform": [
    "capitalize", 
    "full-size-kana", 
    "full-width", 
    "lowercase", 
    "none", 
    "uppercase"
  ], 
  "text-underline-offset": [
    "<length>", 
    "auto", 
    "from-font"
  ], 
  "text-underline-position": [
    "auto", 
    "left", 
    "right", 
    "under"
  ], 
  "text-wrap": [
    "balance", 
    "nowrap", 
    "pretty", 
    "stable", 
    "wrap"
  ], 
  "textPath": [
    "href", 
    "method", 
    "path", 
    "side", 
    "spacing", 
    "startoffset", 
    "xlink:href", 
    "xlink:title"
  ], 
  "textarea": [
    "character height", 
    "character width", 
    "cols", 
    "hard", 
    "maxlength", 
    "minlength", 
    "placeholder", 
    "readonly", 
    "required", 
    "rows", 
    "soft", 
    "wrap"
  ], 
  "textdirectiontype": [
    "auto", 
    "ltr", 
    "rtl"
  ], 
  "texttrack": [
    "disabled", 
    "showing"
  ], 
  "texttrack-kind": [
    "captions", 
    "chapters", 
    "descriptions", 
    "metadata", 
    "subtitles"
  ], 
  "th": [
    "abbr", 
    "auto", 
    "col", 
    "colgroup", 
    "colspan", 
    "headers", 
    "row", 
    "rowgroup", 
    "rowspan", 
    "scope"
  ], 
  "time": [
    "datetime"
  ], 
  "top": [
    "<length>", 
    "<percentage>", 
    "auto"
  ], 
  "top layer": [
    "add"
  ], 
  "track": [
    "auto", 
    "autoplay", 
    "captions", 
    "chapters metadata", 
    "controls", 
    "crossorigin", 
    "default", 
    "descriptions", 
    "kind", 
    "label", 
    "loop", 
    "metadata", 
    "muted", 
    "none", 
    "preload", 
    "src", 
    "srclang", 
    "subtitles"
  ], 
  "transaction": [
    "abort", 
    "aborted", 
    "aborting", 
    "active", 
    "cleanup event loop", 
    "cleanup indexed database transactions", 
    "commit", 
    "committed", 
    "committing", 
    "complete", 
    "connection", 
    "created", 
    "error", 
    "finished", 
    "inactive", 
    "lifetime", 
    "mode", 
    "read-only transaction", 
    "read/write transaction", 
    "request list", 
    "scope", 
    "start", 
    "started", 
    "state"
  ], 
  "transform": [
    "matrix()", 
    "rotate()", 
    "scale()", 
    "scalex()", 
    "scaley()", 
    "skew()", 
    "skewx()", 
    "skewy()", 
    "translate()", 
    "translatex()", 
    "translatey()"
  ], 
  "transform-box": [
    "border-box", 
    "content-box", 
    "fill-box", 
    "stroke-box", 
    "view-box"
  ], 
  "transform-origin": [
    "bottom", 
    "center", 
    "left", 
    "right", 
    "top"
  ], 
  "transformer": [
    "flush(controller)", 
    "start(controller)", 
    "transform(chunk, controller)"
  ], 
  "transient registered observer": [
    "source"
  ], 
  "transition": [
    "cancel", 
    "combined duration", 
    "complete", 
    "end time", 
    "end value", 
    "reversing shortening factor", 
    "reversing-adjusted start value", 
    "start time", 
    "start value"
  ], 
  "transition-property": [
    "all", 
    "none"
  ], 
  "transitionevent": [
    "transitioncancel", 
    "transitionend", 
    "transitionrun", 
    "transitionstart"
  ], 
  "translate": [
    "none"
  ], 
  "traversal": [
    "active flag", 
    "filter", 
    "root", 
    "whattoshow"
  ], 
  "tree": [
    "ancestor", 
    "child", 
    "children", 
    "descendant", 
    "first child", 
    "following", 
    "inclusive ancestor", 
    "inclusive descendant", 
    "inclusive sibling", 
    "index", 
    "last child", 
    "next sibling", 
    "parent", 
    "participate", 
    "participate in a tree", 
    "participates in a tree", 
    "preceding", 
    "previous sibling", 
    "root", 
    "sibling"
  ], 
  "tref": [
    "xlink:href"
  ], 
  "tspan": [
    "dx", 
    "dy", 
    "rotate", 
    "textlength", 
    "x", 
    "y"
  ], 
  "tuple": [
    "item", 
    "name"
  ], 
  "txAuthGenericArg": [
    "content", 
    "contentType"
  ], 
  "type": [
    "discrete", 
    "gamma", 
    "huerotate", 
    "identity", 
    "linear", 
    "luminancetoalpha", 
    "matrix", 
    "saturate", 
    "table"
  ], 
  "uievent": [
    "view"
  ], 
  "underlying sink": [
    "abort(reason)", 
    "close()", 
    "start(controller)", 
    "write(chunk, controller)"
  ], 
  "underlying source": [
    "autoallocatechunksize", 
    "cancel(reason)", 
    "pull(controller)", 
    "start(controller)", 
    "type"
  ], 
  "unicode-bidi": [
    "bidi-override", 
    "embed", 
    "isolate", 
    "isolate-override", 
    "normal", 
    "plaintext"
  ], 
  "unicode-range": [
    "<urange>"
  ], 
  "union": [
    "flattened member types", 
    "member types"
  ], 
  "url": [
    "blob url entry", 
    "cannot-be-a-base-url flag", 
    "equal", 
    "fragment", 
    "host", 
    "origin", 
    "password", 
    "path", 
    "port", 
    "query", 
    "scheme", 
    "set the password", 
    "set the username", 
    "username"
  ], 
  "url()": [
    "local url flag"
  ], 
  "use": [
    "height", 
    "width", 
    "x", 
    "xlink:href", 
    "xlink:title", 
    "y"
  ], 
  "user-select": [
    "all", 
    "auto", 
    "contain", 
    "none", 
    "text"
  ], 
  "user-zoom": [
    "fixed", 
    "zoom"
  ], 
  "view": [
    "viewtarget"
  ], 
  "viewport-fit": [
    "auto", 
    "contain", 
    "cover"
  ], 
  "viewport-length": [
    "<length>", 
    "<percentage>", 
    "auto"
  ], 
  "violation": [
    "column number", 
    "disposition", 
    "effective directive", 
    "element", 
    "global object", 
    "line number", 
    "policy", 
    "referrer", 
    "resource", 
    "sample", 
    "source file", 
    "status", 
    "url"
  ], 
  "webappmanifest": [
    "background_color", 
    "categories", 
    "description", 
    "dir", 
    "display", 
    "iarc_rating_id", 
    "icons", 
    "lang", 
    "name", 
    "orientation", 
    "prefer_related_applications", 
    "related_applications", 
    "scope", 
    "screenshots", 
    "serviceworker", 
    "short_name", 
    "start_url", 
    "theme_color"
  ], 
  "white-space": [
    "break-spaces", 
    "normal", 
    "nowrap", 
    "pre", 
    "pre-line", 
    "pre-wrap"
  ], 
  "width": [
    "<length-percentage>", 
    "auto", 
    "fit-content(<length-percentage>)", 
    "max-content", 
    "min-content"
  ], 
  "will-change": [
    "<custom-ident>", 
    "auto", 
    "contents", 
    "scroll-position"
  ], 
  "window": [
    "customElements", 
    "onappinstalled", 
    "onbeforeinstallprompt", 
    "window.onappinstalled", 
    "window.onbeforeinstallprompt"
  ], 
  "windoworworkerglobalscope": [
    "performance"
  ], 
  "word-break": [
    "break-all", 
    "break-word", 
    "keep-all", 
    "normal"
  ], 
  "word-spacing": [
    "<length>", 
    "normal"
  ], 
  "wrap-after": [
    "auto", 
    "avoid", 
    "avoid-flex", 
    "avoid-line", 
    "flex", 
    "line"
  ], 
  "wrap-before": [
    "auto", 
    "avoid", 
    "avoid-flex", 
    "avoid-line", 
    "flex", 
    "line"
  ], 
  "wrap-flow": [
    "'auto'", 
    "'both'", 
    "'clear'", 
    "'end'", 
    "'maximum'", 
    "'minimum'", 
    "'start'", 
    "'wrap-flow'!!'auto'", 
    "'wrap-flow'!!'both'", 
    "'wrap-flow'!!'clear'", 
    "'wrap-flow'!!'end'", 
    "'wrap-flow'!!'maximum'", 
    "'wrap-flow'!!'minimum'", 
    "'wrap-flow'!!'start'", 
    "auto", 
    "both", 
    "clear", 
    "end", 
    "maximum", 
    "minimum", 
    "start"
  ], 
  "wrap-inside": [
    "auto", 
    "avoid"
  ], 
  "wrap-through": [
    "'none'", 
    "'wrap'", 
    "'wrap-through'!!'none'", 
    "'wrap-through'!!'wrap'", 
    "none", 
    "wrap"
  ], 
  "writing-mode": [
    "horizontal-tb", 
    "sideways-lr", 
    "sideways-rl", 
    "vertical-lr", 
    "vertical-rl"
  ], 
  "writing-system": [
    "chinese", 
    "japanese", 
    "known", 
    "korean", 
    "unknown"
  ], 
  "z-index": [
    "<integer>", 
    "auto"
  ], 
  "zoom": [
    "auto"
  ]
}
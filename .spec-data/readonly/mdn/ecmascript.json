{
    "sec-array-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "Array",
            "slug": "JavaScript/Reference/Global_Objects/Array/Array",
            "summary": "The Array() constructor is used to create Array objects.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array() constructor"
        }
    ],
    "sec-array.prototype.concat": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "concat",
            "slug": "JavaScript/Reference/Global_Objects/Array/concat",
            "summary": "The concat() method is used to merge two or more arrays. This method does not change the existing arrays, but instead returns a new array.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.concat()"
        }
    ],
    "sec-array.prototype.copywithin": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "copyWithin",
            "slug": "JavaScript/Reference/Global_Objects/Array/copyWithin",
            "summary": "The copyWithin() method shallow copies part of an array to another location in the same array and returns it without modifying its length.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "32"
                },
                "firefox_android": {
                    "version_added": "32"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.copyWithin()"
        }
    ],
    "sec-array.prototype.entries": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "entries",
            "slug": "JavaScript/Reference/Global_Objects/Array/entries",
            "summary": "The entries() method returns a new Array Iterator object that contains the key/value pairs for each index in the array.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "28"
                },
                "firefox_android": {
                    "version_added": "28"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.entries()"
        }
    ],
    "sec-array.prototype.every": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "every",
            "slug": "JavaScript/Reference/Global_Objects/Array/every",
            "summary": "The every() method tests whether all elements in the array pass the test implemented by the provided function. It returns a Boolean value.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "9.5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.every()"
        }
    ],
    "sec-array.prototype.fill": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "fill",
            "slug": "JavaScript/Reference/Global_Objects/Array/fill",
            "summary": "The fill() method changes all elements in an array to a static value, from a start index (default 0) to an end index (default array.length). It returns the modified array.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "31"
                },
                "firefox_android": {
                    "version_added": "31"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "4.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.fill()"
        }
    ],
    "sec-array.prototype.filter": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "filter",
            "slug": "JavaScript/Reference/Global_Objects/Array/filter",
            "summary": "The filter() method creates a new array with all elements that pass the test implemented by the provided function.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "9.5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.filter()"
        }
    ],
    "sec-array.prototype.find": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "find",
            "slug": "JavaScript/Reference/Global_Objects/Array/find",
            "summary": "The find() method returns the value of the first element in the provided array that satisfies the provided testing function.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "4.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "array-find",
                "title": "Array.prototype.find"
            },
            "title": "Array.prototype.find()"
        }
    ],
    "sec-array.prototype.findindex": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "findIndex",
            "slug": "JavaScript/Reference/Global_Objects/Array/findIndex",
            "summary": "The findIndex() method returns the index of the first element in the array that satisfies the provided testing function. Otherwise, it returns -1, indicating that no element passed the test.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "4.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "array-find-index",
                "title": "Array.prototype.findIndex"
            },
            "title": "Array.prototype.findIndex()"
        }
    ],
    "sec-array.prototype.flat": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "flat",
            "slug": "JavaScript/Reference/Global_Objects/Array/flat",
            "summary": "The flat() method creates a new array with all sub-array elements concatenated into it recursively up to the specified depth.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "62"
                },
                "firefox_android": {
                    "version_added": "62"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "11.0.0"
                },
                "opera": {
                    "version_added": "56"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": "12"
                },
                "safari_ios": {
                    "version_added": "12"
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "array-flat",
                "title": "flat & flatMap array methods"
            },
            "title": "Array.prototype.flat()"
        }
    ],
    "sec-array.prototype.flatmap": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "flatMap",
            "slug": "JavaScript/Reference/Global_Objects/Array/flatMap",
            "summary": "The flatMap() method returns a new array formed by applying a given callback function to each element of the array, and then flattening the result by one level. It is identical to a map() followed by a flat() of depth 1, but slightly more efficient than calling those two methods separately.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "62"
                },
                "firefox_android": {
                    "version_added": "62"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "11.0.0"
                },
                "opera": {
                    "version_added": "56"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": "12"
                },
                "safari_ios": {
                    "version_added": "12"
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.flatMap()"
        }
    ],
    "sec-array.prototype.foreach": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "forEach",
            "slug": "JavaScript/Reference/Global_Objects/Array/forEach",
            "summary": "The forEach() method executes a provided function once for each array element.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "9.5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.forEach()"
        }
    ],
    "sec-array.from": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "from",
            "slug": "JavaScript/Reference/Global_Objects/Array/from",
            "summary": "The Array.from() static method creates a new, shallow-copied Array instance from an array-like or iterable object.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "32"
                },
                "firefox_android": {
                    "version_added": "32"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.from()"
        }
    ],
    "sec-array.prototype.includes": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "includes",
            "slug": "JavaScript/Reference/Global_Objects/Array/includes",
            "summary": "The includes() method determines whether an array includes a certain value among its entries, returning true or false as appropriate.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": {
                    "version_added": "47"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "43"
                },
                "firefox_android": {
                    "version_added": "43"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.0.0"
                    },
                    {
                        "version_added": "5.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "34"
                },
                "opera_android": {
                    "version_added": "34"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "47"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "array-includes",
                "title": "Array.prototype.includes"
            },
            "title": "Array.prototype.includes()"
        }
    ],
    "sec-array.prototype.indexof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "indexOf",
            "slug": "JavaScript/Reference/Global_Objects/Array/indexOf",
            "summary": "The indexOf() method returns the first index at which a given element can be found in the array, or -1 if it is not present.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "9.5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.indexOf()"
        }
    ],
    "sec-array.isarray": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "isArray",
            "slug": "JavaScript/Reference/Global_Objects/Array/isArray",
            "summary": "The Array.isArray() method determines whether the passed value is an Array.",
            "support": {
                "chrome": {
                    "version_added": "5"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "10.5"
                },
                "opera_android": {
                    "version_added": "14"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "5"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.isArray()"
        }
    ],
    "sec-array.prototype.join": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "join",
            "slug": "JavaScript/Reference/Global_Objects/Array/join",
            "summary": "The join() method creates and returns a new string by concatenating all of the elements in an array (or an array-like object), separated by commas or a specified separator string. If the array has only one item, then that item will be returned without using the separator.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.join()"
        }
    ],
    "sec-array.prototype.keys": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "keys",
            "slug": "JavaScript/Reference/Global_Objects/Array/keys",
            "summary": "The keys() method returns a new Array Iterator object that contains the keys for each index in the array.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "28"
                },
                "firefox_android": {
                    "version_added": "28"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.keys()"
        }
    ],
    "sec-array.prototype.lastindexof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "lastIndexOf",
            "slug": "JavaScript/Reference/Global_Objects/Array/lastIndexOf",
            "summary": "The lastIndexOf() method returns the last index at which a given element can be found in the array, or -1 if it is not present. The array is searched backwards, starting at fromIndex.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "9.5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.lastIndexOf()"
        }
    ],
    "sec-properties-of-array-instances-length": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "length",
            "slug": "JavaScript/Reference/Global_Objects/Array/length",
            "summary": "The length property of an object which is an instance of type Array sets or returns the number of elements in that array. The value is an unsigned, 32-bit integer that is always numerically greater than the highest index in the array.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.length"
        }
    ],
    "sec-array.prototype.map": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "map",
            "slug": "JavaScript/Reference/Global_Objects/Array/map",
            "summary": "The map() method creates a new array populated with the results of calling a provided function on every element in the calling array.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "9.5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.map()"
        }
    ],
    "sec-array.of": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "of",
            "slug": "JavaScript/Reference/Global_Objects/Array/of",
            "summary": "The Array.of() method creates a new Array instance from a variable number of arguments, regardless of number or type of the arguments.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "39"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "26"
                },
                "opera_android": {
                    "version_added": "26"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "39"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.of()"
        }
    ],
    "sec-array.prototype.pop": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "pop",
            "slug": "JavaScript/Reference/Global_Objects/Array/pop",
            "summary": "The pop() method removes the last element from an array and returns that element. This method changes the length of the array.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.pop()"
        }
    ],
    "sec-array.prototype.push": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "push",
            "slug": "JavaScript/Reference/Global_Objects/Array/push",
            "summary": "The push() method adds one or more elements to the end of an array and returns the new length of the array.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.push()"
        }
    ],
    "sec-array.prototype.reduce": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "reduce",
            "slug": "JavaScript/Reference/Global_Objects/Array/reduce",
            "summary": "The reduce() method executes a reducer function (that you provide) on each element of the array, resulting in single output value.",
            "support": {
                "chrome": {
                    "version_added": "3"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "10.5"
                },
                "opera_android": {
                    "version_added": "14"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "4"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.reduce()"
        }
    ],
    "sec-array.prototype.reduceright": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "reduceRight",
            "slug": "JavaScript/Reference/Global_Objects/Array/reduceRight",
            "summary": "The reduceRight() method applies a function against an accumulator and each value of the array (from right-to-left) to reduce it to a single value.",
            "support": {
                "chrome": {
                    "version_added": "3"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "10.5"
                },
                "opera_android": {
                    "version_added": "14"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "4"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.reduceRight()"
        }
    ],
    "sec-array.prototype.reverse": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "reverse",
            "slug": "JavaScript/Reference/Global_Objects/Array/reverse",
            "summary": "The reverse() method reverses an array in place. The first array element becomes the last, and the last array element becomes the first.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.reverse()"
        }
    ],
    "sec-array.prototype.shift": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "shift",
            "slug": "JavaScript/Reference/Global_Objects/Array/shift",
            "summary": "The shift() method removes the first element from an array and returns that removed element. This method changes the length of the array.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.shift()"
        }
    ],
    "sec-array.prototype.slice": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "slice",
            "slug": "JavaScript/Reference/Global_Objects/Array/slice",
            "summary": "The slice() method returns a shallow copy of a portion of an array into a new array object selected from start to end (end not included) where start and end represent the index of items in that array. The original array will not be modified.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.slice()"
        }
    ],
    "sec-array.prototype.some": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "some",
            "slug": "JavaScript/Reference/Global_Objects/Array/some",
            "summary": "The some() method tests whether at least one element in the array passes the test implemented by the provided function. It returns a Boolean value. ",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "9.5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.some()"
        }
    ],
    "sec-array.prototype.sort": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "sort",
            "slug": "JavaScript/Reference/Global_Objects/Array/sort",
            "summary": "The sort() method sorts the elements of an array in place and returns the sorted array. The default sort order is ascending, built upon converting the elements into strings, then comparing their sequences of UTF-16 code units values.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.sort()"
        }
    ],
    "sec-array.prototype.splice": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "splice",
            "slug": "JavaScript/Reference/Global_Objects/Array/splice",
            "summary": "The splice() method changes the contents of an array by removing or replacing existing elements and/or adding new elements in place.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5",
                    "notes": "From Internet Explorer 5.5 through 8, all elements of the array will not be deleted if <code>deleteCount</code> is omitted. This behavior was fixed in Internet Explorer 9."
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.splice()"
        }
    ],
    "sec-array.prototype.tolocalestring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "toLocaleString",
            "slug": "JavaScript/Reference/Global_Objects/Array/toLocaleString",
            "summary": "The toLocaleString() method returns a string representing the elements of the array. The elements are converted to Strings using their toLocaleString methods and these Strings are separated by a locale-specific String (such as a comma “,”).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.toLocaleString()"
        }
    ],
    "sec-array.prototype.tostring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "toString",
            "slug": "JavaScript/Reference/Global_Objects/Array/toString",
            "summary": "The toString() method returns a string representing the specified array and its elements.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.toString()"
        }
    ],
    "sec-array.prototype.unshift": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "unshift",
            "slug": "JavaScript/Reference/Global_Objects/Array/unshift",
            "summary": "The unshift() method adds one or more elements to the beginning of an array and returns the new length of the array.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.unshift()"
        }
    ],
    "sec-array.prototype.values": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "values",
            "slug": "JavaScript/Reference/Global_Objects/Array/values",
            "summary": "The values() method returns a new Array Iterator object that contains the values for each index in the array.",
            "support": {
                "chrome": {
                    "version_added": "66"
                },
                "chrome_android": {
                    "version_added": "66"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "60"
                },
                "firefox_android": {
                    "version_added": "60"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "10.9.0"
                    },
                    {
                        "version_added": "6.5.0",
                        "notes": "The <code>--harmony-array-prototype-values</code> flag is required; the <code>--harmony</code> flag is not sufficient in this case.",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony-array-prototype-values"
                            }
                        ]
                    },
                    {
                        "version_added": "0.12",
                        "version_removed": "4.0.0"
                    }
                ],
                "opera": {
                    "version_added": "53"
                },
                "opera_android": {
                    "version_added": "47"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "66"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype.values()"
        }
    ],
    "sec-array.prototype-@@iterator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "@@iterator",
            "slug": "JavaScript/Reference/Global_Objects/Array/@@iterator",
            "summary": "The @@iterator method is part of The iterable protocol, that defines how to synchronously iterate over a sequence of values.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "36"
                    },
                    {
                        "alternative_name": "@@iterator",
                        "version_added": "27",
                        "version_removed": "36",
                        "notes": "A placeholder property named <code>@@iterator</code> is used."
                    },
                    {
                        "alternative_name": "iterator",
                        "version_added": "17",
                        "version_removed": "27",
                        "notes": "A placeholder property named <code>iterator</code> is used."
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "36"
                    },
                    {
                        "alternative_name": "@@iterator",
                        "version_added": "27",
                        "version_removed": "36",
                        "notes": "A placeholder property named <code>@@iterator</code> is used."
                    },
                    {
                        "alternative_name": "iterator",
                        "version_added": "17",
                        "version_removed": "27",
                        "notes": "A placeholder property named <code>iterator</code> is used."
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype[@@iterator]()"
        }
    ],
    "sec-get-array-@@species": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "@@species",
            "slug": "JavaScript/Reference/Global_Objects/Array/@@species",
            "summary": "The Array[@@species] accessor property returns the Array constructor.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": {
                    "version_added": "48"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.5.0"
                    },
                    {
                        "version_added": "6.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "38"
                },
                "opera_android": {
                    "version_added": "41"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "get Array[@@species]"
        }
    ],
    "sec-array.prototype-@@unscopables": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "@@unscopables",
            "slug": "JavaScript/Reference/Global_Objects/Array/@@unscopables",
            "summary": "The @@unscopable symbol property contains property names that were not included in the ECMAScript standard prior to the ES2015 version. These properties are excluded from with statement bindings.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": {
                    "version_added": "48"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array.prototype[@@unscopables]"
        }
    ],
    "sec-array-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Array.json",
            "name": "Array",
            "slug": "JavaScript/Reference/Global_Objects/Array",
            "summary": "The JavaScript Array class is a global object that is used in the construction of arrays; which are high-level, list-like objects.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Array"
        }
    ],
    "sec-arraybuffer-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/ArrayBuffer.json",
            "name": "ArrayBuffer",
            "slug": "JavaScript/Reference/Global_Objects/ArrayBuffer/ArrayBuffer",
            "summary": "The ArrayBuffer() constructor is used to create ArrayBuffer objects.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ArrayBuffer() constructor"
        }
    ],
    "sec-get-arraybuffer.prototype.bytelength": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/ArrayBuffer.json",
            "name": "byteLength",
            "slug": "JavaScript/Reference/Global_Objects/ArrayBuffer/byteLength",
            "summary": "The byteLength accessor property represents the length of an ArrayBuffer in bytes.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ArrayBuffer.prototype.byteLength"
        }
    ],
    "sec-arraybuffer.isview": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/ArrayBuffer.json",
            "name": "isView",
            "slug": "JavaScript/Reference/Global_Objects/ArrayBuffer/isView",
            "summary": "The ArrayBuffer.isView() method determines whether the passed value is one of the ArrayBuffer views, such as typed array objects or a DataView.",
            "support": {
                "chrome": {
                    "version_added": "32"
                },
                "chrome_android": {
                    "version_added": "32"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "29"
                },
                "firefox_android": {
                    "version_added": "29"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "19"
                },
                "opera_android": {
                    "version_added": "19"
                },
                "safari": {
                    "version_added": "7"
                },
                "safari_ios": {
                    "version_added": "7"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ArrayBuffer.isView()"
        }
    ],
    "sec-arraybuffer.prototype.slice": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/ArrayBuffer.json",
            "name": "slice",
            "slug": "JavaScript/Reference/Global_Objects/ArrayBuffer/slice",
            "summary": "The slice() method returns a new ArrayBuffer whose contents are a copy of this ArrayBuffer's bytes from begin, inclusive, up to end, exclusive.",
            "support": {
                "chrome": {
                    "version_added": "17"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "12",
                    "notes": "The non-standard <code>ArrayBuffer.slice()</code> method has been removed in Firefox 53 (but the standardized version <code>ArrayBuffer.prototype.slice()</code> is kept."
                },
                "firefox_android": {
                    "version_added": "14",
                    "notes": "The non-standard <code>ArrayBuffer.slice()</code> method has been removed in Firefox 53 (but the standardized version <code>ArrayBuffer.prototype.slice()</code> is kept."
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "6"
                },
                "safari_ios": {
                    "version_added": "6"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ArrayBuffer.prototype.slice()"
        }
    ],
    "sec-get-arraybuffer-@@species": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/ArrayBuffer.json",
            "name": "@@species",
            "slug": "JavaScript/Reference/Global_Objects/ArrayBuffer/@@species",
            "summary": "The ArrayBuffer[@@species] accessor property returns the ArrayBuffer constructor.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": {
                    "version_added": "48"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.5.0"
                    },
                    {
                        "version_added": "6.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "38"
                },
                "opera_android": {
                    "version_added": "41"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "get ArrayBuffer[@@species]"
        }
    ],
    "sec-arraybuffer-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/ArrayBuffer.json",
            "name": "ArrayBuffer",
            "slug": "JavaScript/Reference/Global_Objects/ArrayBuffer",
            "summary": "The ArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ArrayBuffer"
        }
    ],
    "sec-async-function-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/AsyncFunction.json",
            "name": "AsyncFunction",
            "slug": "JavaScript/Reference/Global_Objects/AsyncFunction",
            "summary": "The AsyncFunction constructor creates a new async function object. In JavaScript, every asynchronous function is actually an AsyncFunction object.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "7.6.0"
                    },
                    {
                        "version_added": "7.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": {
                    "version_added": "10.3"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "AsyncFunction"
        }
    ],
    "sec-atomics.add": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "javascript/builtins/Atomics.json",
            "name": "add",
            "slug": "JavaScript/Reference/Global_Objects/Atomics/add",
            "summary": "The static Atomics.add() method adds a given value at a given position in the array and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "78"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11.1"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "Atomics.add()"
        }
    ],
    "sec-atomics.and": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "javascript/builtins/Atomics.json",
            "name": "and",
            "slug": "JavaScript/Reference/Global_Objects/Atomics/and",
            "summary": "The static Atomics.and() method computes a bitwise AND with a given value at a given position in the array, and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "78"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11.1"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "Atomics.and()"
        }
    ],
    "sec-atomics.compareexchange": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "javascript/builtins/Atomics.json",
            "name": "compareExchange",
            "slug": "JavaScript/Reference/Global_Objects/Atomics/compareExchange",
            "summary": "The static Atomics.compareExchange() method exchanges a given replacement value at a given position in the array, if a given expected value equals the old value.  It returns the old value at that position whether it was equal to the expected value or not. This atomic operation guarantees that no other write happens until the modified value is written back.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "78"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11.1"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "Atomics.compareExchange()"
        }
    ],
    "sec-atomics.exchange": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "javascript/builtins/Atomics.json",
            "name": "exchange",
            "slug": "JavaScript/Reference/Global_Objects/Atomics/exchange",
            "summary": "The static Atomics.exchange() method stores a given value at a given position in the array and returns the old value at that position. This atomic operation guarantees that no other write happens between the read of the old value and the write of the new value.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "78"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11.1"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "Atomics.exchange()"
        }
    ],
    "sec-atomics.islockfree": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "javascript/builtins/Atomics.json",
            "name": "isLockFree",
            "slug": "JavaScript/Reference/Global_Objects/Atomics/isLockFree",
            "summary": "The static Atomics.isLockFree() method is used to determine whether to use locks or atomic operations. It returns true, if the given size is one of the BYTES_PER_ELEMENT property of integer TypedArray types.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "78"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11.1"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "Atomics.isLockFree()"
        }
    ],
    "sec-atomics.load": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "javascript/builtins/Atomics.json",
            "name": "load",
            "slug": "JavaScript/Reference/Global_Objects/Atomics/load",
            "summary": "The static Atomics.load() method returns a value at a given position in the array.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "78"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11.1"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "Atomics.load()"
        }
    ],
    "sec-atomics.notify": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "javascript/builtins/Atomics.json",
            "name": "notify",
            "slug": "JavaScript/Reference/Global_Objects/Atomics/notify",
            "summary": "The static Atomics.notify() method notifies up some agents that are sleeping in the wait queue.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "alternative_name": "wake",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "alternative_name": "wake",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "78"
                    },
                    {
                        "version_added": "63",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "57",
                        "alternative_name": "wake",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "48",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    },
                    {
                        "version_added": "46",
                        "version_removed": "48",
                        "alternative_name": "futexWake",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "The <code>count</code> parameter defaults to <code>0</code> instead of the later-specified <code>+Infinity</code>."
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "63",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "57",
                        "alternative_name": "wake",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "48",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    },
                    {
                        "version_added": "46",
                        "version_removed": "48",
                        "alternative_name": "futexWake",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "The <code>count</code> parameter defaults to <code>0</code> instead of the later-specified <code>+Infinity</code>."
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0",
                    "alternative_name": "wake"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11.1",
                    "alternative_name": "wake"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "alternative_name": "wake",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "alternative_name": "wake",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "alternative_name": "wake",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "Atomics.notify()"
        }
    ],
    "sec-atomics.or": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "javascript/builtins/Atomics.json",
            "name": "or",
            "slug": "JavaScript/Reference/Global_Objects/Atomics/or",
            "summary": "The static Atomics.or() method computes a bitwise OR with a given value at a given position in the array, and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "78"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11.1"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "Atomics.or()"
        }
    ],
    "sec-atomics.store": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "javascript/builtins/Atomics.json",
            "name": "store",
            "slug": "JavaScript/Reference/Global_Objects/Atomics/store",
            "summary": "The static Atomics.store() method stores a given value at the given position in the array and returns that value.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "78"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11.1"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "Atomics.store()"
        }
    ],
    "sec-atomics.sub": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "javascript/builtins/Atomics.json",
            "name": "sub",
            "slug": "JavaScript/Reference/Global_Objects/Atomics/sub",
            "summary": "The static Atomics.sub() method substracts a given value at a given position in the array and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "78"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11.1"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "Atomics.sub()"
        }
    ],
    "sec-atomics.wait": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "javascript/builtins/Atomics.json",
            "name": "wait",
            "slug": "JavaScript/Reference/Global_Objects/Atomics/wait",
            "summary": "The static Atomics.wait() method verifies that a given position in an Int32Array still contains a given value and if so sleeps, awaiting a wakeup or a timeout. It returns a string which is either \"ok\", \"not-equal\", or \"timed-out\".",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "78"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "48",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    },
                    {
                        "version_added": "46",
                        "version_removed": "48",
                        "alternative_name": "futexWait",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "The method returns values <code>Atomics.OK</code>, <code>Atomics.TIMEDOUT</code>, and <code>Atomics.NOTEQUAL</code>, instead of the later-specified strings."
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "48",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    },
                    {
                        "version_added": "46",
                        "version_removed": "48",
                        "alternative_name": "futexWait",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "The method returns values <code>Atomics.OK</code>, <code>Atomics.TIMEDOUT</code>, and <code>Atomics.NOTEQUAL</code>, instead of the later-specified strings."
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11.1"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "Atomics.wait()"
        }
    ],
    "sec-atomics.xor": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "javascript/builtins/Atomics.json",
            "name": "xor",
            "slug": "JavaScript/Reference/Global_Objects/Atomics/xor",
            "summary": "The static Atomics.xor() method computes a bitwise XOR with a given value at a given position in the array, and returns the old value at that position. This atomic operation guarantees that no other write happens until the modified value is written back.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "78"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11.1"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "Atomics.xor()"
        }
    ],
    "sec-atomics-object": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "javascript/builtins/Atomics.json",
            "name": "Atomics",
            "slug": "JavaScript/Reference/Global_Objects/Atomics",
            "summary": "The Atomics object provides atomic operations as static methods. They are used with SharedArrayBuffer and ArrayBuffer objects.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "78"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11.1"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled <code>SharedArrayBuffer</code> on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "Atomics"
        }
    ],
    "sec-bigint-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/BigInt.json",
            "name": "BigInt",
            "slug": "JavaScript/Reference/Global_Objects/BigInt/BigInt",
            "summary": "The BigInt() constructor returns a value of type bigint.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.4.0"
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": {
                    "version_added": "14"
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "BigInt() constructor"
        }
    ],
    "sec-bigint.asintn": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/BigInt.json",
            "name": "asIntN",
            "slug": "JavaScript/Reference/Global_Objects/BigInt/asIntN",
            "summary": "The BigInt.asIntN static method is used to wrap a BigInt value to a signed integer between -2width-1 and 2width-1-1.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.4.0"
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": {
                    "version_added": "14"
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "BigInt.asIntN()"
        }
    ],
    "sec-bigint.asuintn": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/BigInt.json",
            "name": "asUintN",
            "slug": "JavaScript/Reference/Global_Objects/BigInt/asUintN",
            "summary": "The BigInt.asUintN static method is used to wrap a BigInt value to an unsigned integer between 0 and 2width-1.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.4.0"
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": {
                    "version_added": "14"
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "BigInt.asUintN()"
        }
    ],
    "sec-bigint.prototype.tostring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/BigInt.json",
            "name": "toString",
            "slug": "JavaScript/Reference/Global_Objects/BigInt/toString",
            "summary": "The toString() method returns a string representing the specified BigInt object. The trailing \"n\" is not part of the string.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.4.0"
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": {
                    "version_added": "14"
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "BigInt.prototype.toString()"
        }
    ],
    "sec-bigint.prototype.valueof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/BigInt.json",
            "name": "valueOf",
            "slug": "JavaScript/Reference/Global_Objects/BigInt/valueOf",
            "summary": "The valueOf() method returns the wrapped primitive value of a BigInt object.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.4.0"
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": {
                    "version_added": "14"
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "BigInt.prototype.valueOf()"
        }
    ],
    "sec-bigint-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/BigInt.json",
            "name": "BigInt",
            "slug": "JavaScript/Reference/Global_Objects/BigInt",
            "summary": "BigInt is a built-in object that provides a way to represent whole numbers larger than 253 - 1, which is the largest number JavaScript can reliably represent with the Number primitive and represented by the Number.MAX_SAFE_INTEGER constant. BigInt can be used for arbitrarily large integers.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.4.0"
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": {
                    "version_added": "14"
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "bigint",
                "title": "BigInt"
            },
            "title": "BigInt"
        }
    ],
    "sec-typedarray-constructors": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "javascript/builtins/BigInt64Array.json",
            "name": "BigInt64Array",
            "slug": "JavaScript/Reference/Global_Objects/BigInt64Array/BigInt64Array",
            "summary": "The BigInt64Array() typed array constructor creates a new BigInt64Array object, which is, an array of 64-bit signed integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0n. Once established, you can reference elements in the array using the object's methods, or by using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.4.0"
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "BigInt64Array() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "javascript/builtins/BigUint64Array.json",
            "name": "BigUint64Array",
            "slug": "JavaScript/Reference/Global_Objects/BigUint64Array/BigUint64Array",
            "summary": "The BigUint64Array() typed array constructor creates a new BigUint64Array object, which is, an array of 64-bit unsigned integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0n. Once established, you can reference elements in the array using the object's methods, or by using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.4.0"
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "BigUint64Array() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Float32Array.json",
            "name": "Float32Array",
            "slug": "JavaScript/Reference/Global_Objects/Float32Array/Float32Array",
            "summary": "The Float32Array() typed array constructor creates a new Float32Array object, which is, an array of 32-bit floating point numbers (corresponding to the C float data type) in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Float32Array() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Float64Array.json",
            "name": "Float64Array",
            "slug": "JavaScript/Reference/Global_Objects/Float64Array/Float64Array",
            "summary": "The Float64Array() typed array constructor creates a new Float64Array object, which is, an array of 64-bit floating point numbers (corresponding to the C double data type) in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Float64Array() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Int16Array.json",
            "name": "Int16Array",
            "slug": "JavaScript/Reference/Global_Objects/Int16Array/Int16Array",
            "summary": "The Int16Array() typed array constructor creates an array of twos-complement 16-bit signed integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Int16Array() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Int32Array.json",
            "name": "Int32Array",
            "slug": "JavaScript/Reference/Global_Objects/Int32Array/Int32Array",
            "summary": "The Int32Array() typed array constructor creates an array of twos-complement 32-bit signed integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Int32Array() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Int8Array.json",
            "name": "Int8Array",
            "slug": "JavaScript/Reference/Global_Objects/Int8Array/Int8Array",
            "summary": "The Int8Array() constructor creates a typed array of twos-complement 8-bit signed integers. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Int8Array() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Uint16Array.json",
            "name": "Uint16Array",
            "slug": "JavaScript/Reference/Global_Objects/Uint16Array/Uint16Array",
            "summary": "The Uint16Array() typed array constructor creates an array of 16-bit unsigned integers in the platform byte order.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Uint16Array() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Uint32Array.json",
            "name": "Uint32Array",
            "slug": "JavaScript/Reference/Global_Objects/Uint32Array/Uint32Array",
            "summary": "The Uint32Array() typed array constructor creates an array of 32-bit unsigned integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Uint32Array() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Uint8Array.json",
            "name": "Uint8Array",
            "slug": "JavaScript/Reference/Global_Objects/Uint8Array/Uint8Array",
            "summary": "The Uint8Array() constructor creates a typed array of 8-bit unsigned integers. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Uint8Array() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Uint8ClampedArray.json",
            "name": "Uint8ClampedArray",
            "slug": "JavaScript/Reference/Global_Objects/Uint8ClampedArray/Uint8ClampedArray",
            "summary": "The Uint8ClampedArray() constructor creates a typed array of 8-bit unsigned integers clamped to 0-255; if you specified a value that is out of the range of [0,255], 0 or 255 will be set instead; if you specify a non-integer, the nearest integer will be set. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Uint8ClampedArray() constructor"
        }
    ],
    "sec-typedarray-objects": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "javascript/builtins/BigInt64Array.json",
            "name": "BigInt64Array",
            "slug": "JavaScript/Reference/Global_Objects/BigInt64Array",
            "summary": "The BigInt64Array typed array represents an array of 64-bit signed integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0n. Once established, you can reference elements in the array using the object's methods, or by using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.4.0"
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "typedarrays",
                "title": "Typed Arrays"
            },
            "title": "BigInt64Array"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "javascript/builtins/BigUint64Array.json",
            "name": "BigUint64Array",
            "slug": "JavaScript/Reference/Global_Objects/BigUint64Array",
            "summary": "The BigUint64Array typed array represents an array of 64-bit unsigned integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0n. Once established, you can reference elements in the array using the object's methods, or by using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.4.0"
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "typedarrays",
                "title": "Typed Arrays"
            },
            "title": "BigUint64Array"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "TypedArray",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray",
            "summary": "A TypedArray object describes an array-like view of an underlying binary data buffer. There is no global property named TypedArray, nor is there a directly visible TypedArray constructor.  Instead, there are a number of different global properties, whose values are typed array constructors for specific element types, listed below. On the following pages you will find common properties and methods that can be used with any typed array containing elements of any type.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "typedarrays",
                "title": "Typed Arrays"
            },
            "title": "TypedArray"
        }
    ],
    "sec-boolean-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Boolean.json",
            "name": "Boolean",
            "slug": "JavaScript/Reference/Global_Objects/Boolean/Boolean",
            "summary": "The Boolean() constructor is used to create Boolean objects.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Boolean() constructor"
        }
    ],
    "sec-boolean.prototype.tostring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Boolean.json",
            "name": "toString",
            "slug": "JavaScript/Reference/Global_Objects/Boolean/toString",
            "summary": "The toString() method returns a string representing the specified Boolean object.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Boolean.prototype.toString()"
        }
    ],
    "sec-boolean.prototype.valueof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Boolean.json",
            "name": "valueOf",
            "slug": "JavaScript/Reference/Global_Objects/Boolean/valueOf",
            "summary": "The valueOf() method returns the primitive value of a Boolean object.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Boolean.prototype.valueOf()"
        }
    ],
    "sec-boolean-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Boolean.json",
            "name": "Boolean",
            "slug": "JavaScript/Reference/Global_Objects/Boolean",
            "summary": "The Boolean object is an object wrapper for a boolean value.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Boolean"
        }
    ],
    "sec-dataview-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "DataView",
            "slug": "JavaScript/Reference/Global_Objects/DataView/DataView",
            "summary": "The DataView() constructor is used to create DataView objects.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView() constructor"
        }
    ],
    "sec-get-dataview.prototype.buffer": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "buffer",
            "slug": "JavaScript/Reference/Global_Objects/DataView/buffer",
            "summary": "The buffer accessor property represents the ArrayBuffer or SharedArrayBuffer referenced by the DataView at construction time.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.buffer"
        }
    ],
    "sec-get-dataview.prototype.bytelength": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "byteLength",
            "slug": "JavaScript/Reference/Global_Objects/DataView/byteLength",
            "summary": "The byteLength accessor property represents the length (in bytes) of this view from the start of its ArrayBuffer or SharedArrayBuffer.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.byteLength"
        }
    ],
    "sec-get-dataview.prototype.byteoffset": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "byteOffset",
            "slug": "JavaScript/Reference/Global_Objects/DataView/byteOffset",
            "summary": "The byteOffset accessor property represents the offset (in bytes) of this view from the start of its ArrayBuffer or SharedArrayBuffer.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.byteOffset"
        }
    ],
    "sec-dataview.prototype.getbigint64": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "getBigInt64",
            "slug": "JavaScript/Reference/Global_Objects/DataView/getBigInt64",
            "summary": "The getBigInt64() method gets a signed 64-bit integer (long long) at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.4.0"
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.getBigInt64()"
        }
    ],
    "sec-dataview.prototype.getbiguint64": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "getBigUint64",
            "slug": "JavaScript/Reference/Global_Objects/DataView/getBigUint64",
            "summary": "The getBigUint64() method gets an unsigned 64-bit integer (unsigned long long) at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.4.0"
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.getBigUint64()"
        }
    ],
    "sec-dataview.prototype.getfloat32": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "getFloat32",
            "slug": "JavaScript/Reference/Global_Objects/DataView/getFloat32",
            "summary": "The getFloat32() method gets a signed 32-bit float (float) at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.getFloat32()"
        }
    ],
    "sec-dataview.prototype.getfloat64": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "getFloat64",
            "slug": "JavaScript/Reference/Global_Objects/DataView/getFloat64",
            "summary": "The getFloat64() method gets a signed 64-bit float (double) at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.getFloat64()"
        }
    ],
    "sec-dataview.prototype.getint16": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "getInt16",
            "slug": "JavaScript/Reference/Global_Objects/DataView/getInt16",
            "summary": "The getInt16() method gets a signed 16-bit integer (short) at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.getInt16()"
        }
    ],
    "sec-dataview.prototype.getint32": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "getInt32",
            "slug": "JavaScript/Reference/Global_Objects/DataView/getInt32",
            "summary": "The getInt32() method gets a signed 32-bit integer (long) at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.getInt32()"
        }
    ],
    "sec-dataview.prototype.getint8": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "getInt8",
            "slug": "JavaScript/Reference/Global_Objects/DataView/getInt8",
            "summary": "The getInt8() method gets a signed 8-bit integer (byte) at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.getInt8()"
        }
    ],
    "sec-dataview.prototype.getuint16": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "getUint16",
            "slug": "JavaScript/Reference/Global_Objects/DataView/getUint16",
            "summary": "The getUint16() method gets an unsigned 16-bit integer (unsigned short) at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.getUint16()"
        }
    ],
    "sec-dataview.prototype.getuint32": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "getUint32",
            "slug": "JavaScript/Reference/Global_Objects/DataView/getUint32",
            "summary": "The getUint32() method gets an unsigned 32-bit integer (unsigned long) at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.getUint32()"
        }
    ],
    "sec-dataview.prototype.getuint8": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "getUint8",
            "slug": "JavaScript/Reference/Global_Objects/DataView/getUint8",
            "summary": "The getUint8() method gets an unsigned 8-bit integer (unsigned byte) at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.getUint8()"
        }
    ],
    "sec-dataview.prototype.setbigint64": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "setBigInt64",
            "slug": "JavaScript/Reference/Global_Objects/DataView/setBigInt64",
            "summary": "The setBigInt64() method stores a signed 64-bit integer (long long) value at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.4.0"
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.setBigInt64()"
        }
    ],
    "sec-dataview.prototype.setbiguint64": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "setBigUint64",
            "slug": "JavaScript/Reference/Global_Objects/DataView/setBigUint64",
            "summary": "The setBigUint64() method stores an unsigned 64-bit integer (unsigned long long) value at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.4.0"
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.setBigUint64()"
        }
    ],
    "sec-dataview.prototype.setfloat32": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "setFloat32",
            "slug": "JavaScript/Reference/Global_Objects/DataView/setFloat32",
            "summary": "The setFloat32() method stores a signed 32-bit float (float) value at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.setFloat32()"
        }
    ],
    "sec-dataview.prototype.setfloat64": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "setFloat64",
            "slug": "JavaScript/Reference/Global_Objects/DataView/setFloat64",
            "summary": "The setFloat64() method stores a signed 64-bit float (double) value at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.setFloat64()"
        }
    ],
    "sec-dataview.prototype.setint16": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "setInt16",
            "slug": "JavaScript/Reference/Global_Objects/DataView/setInt16",
            "summary": "The setInt16() method stores a signed 16-bit integer (short) value at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.setInt16()"
        }
    ],
    "sec-dataview.prototype.setint32": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "setInt32",
            "slug": "JavaScript/Reference/Global_Objects/DataView/setInt32",
            "summary": "The setInt32() method stores a signed 32-bit integer (long) value at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.setInt32()"
        }
    ],
    "sec-dataview.prototype.setint8": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "setInt8",
            "slug": "JavaScript/Reference/Global_Objects/DataView/setInt8",
            "summary": "The setInt8() method stores a signed 8-bit integer (byte) value at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.setInt8()"
        }
    ],
    "sec-dataview.prototype.setuint16": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "setUint16",
            "slug": "JavaScript/Reference/Global_Objects/DataView/setUint16",
            "summary": "The setUint16() method stores an unsigned 16-bit integer (unsigned short) value at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.setUint16()"
        }
    ],
    "sec-dataview.prototype.setuint32": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "setUint32",
            "slug": "JavaScript/Reference/Global_Objects/DataView/setUint32",
            "summary": "The setUint32() method stores an unsigned 32-bit integer (unsigned long) value at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.setUint32()"
        }
    ],
    "sec-dataview.prototype.setuint8": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "setUint8",
            "slug": "JavaScript/Reference/Global_Objects/DataView/setUint8",
            "summary": "The setUint8() method stores an unsigned 8-bit integer (byte) value at the specified byte offset from the start of the DataView.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView.prototype.setUint8()"
        }
    ],
    "sec-dataview-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/DataView.json",
            "name": "DataView",
            "slug": "JavaScript/Reference/Global_Objects/DataView",
            "summary": "The DataView view provides a low-level interface for reading and writing multiple number types in a binary ArrayBuffer, without having to care about the platform's endianness.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "DataView"
        }
    ],
    "sec-date-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "Date",
            "slug": "JavaScript/Reference/Global_Objects/Date/Date",
            "summary": "Creates a JavaScript Date instance that represents a single moment in time in a platform-independent format.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date() constructor"
        }
    ],
    "sec-date.utc": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "UTC",
            "slug": "JavaScript/Reference/Global_Objects/Date/UTC",
            "summary": "The Date.UTC() method accepts parameters similar to the Date constructor, but treats them as UTC. It returns the number of milliseconds since January 1, 1970, 00:00:00 UTC.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.UTC()"
        }
    ],
    "sec-date.prototype.getdate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getDate",
            "slug": "JavaScript/Reference/Global_Objects/Date/getDate",
            "summary": "The getDate() method returns the day of the month for the specified date according to local time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getDate()"
        }
    ],
    "sec-date.prototype.getday": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getDay",
            "slug": "JavaScript/Reference/Global_Objects/Date/getDay",
            "summary": "The getDay() method returns the day of the week for the specified date according to local time, where 0 represents Sunday.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getDay()"
        }
    ],
    "sec-date.prototype.getfullyear": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getFullYear",
            "slug": "JavaScript/Reference/Global_Objects/Date/getFullYear",
            "summary": "The getFullYear() method returns the year of the specified date according to local time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getFullYear()"
        }
    ],
    "sec-date.prototype.gethours": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getHours",
            "slug": "JavaScript/Reference/Global_Objects/Date/getHours",
            "summary": "The getHours() method returns the hour for the specified date, according to local time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getHours()"
        }
    ],
    "sec-date.prototype.getmilliseconds": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getMilliseconds",
            "slug": "JavaScript/Reference/Global_Objects/Date/getMilliseconds",
            "summary": "The getMilliseconds() method returns the milliseconds in the specified date according to local time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getMilliseconds()"
        }
    ],
    "sec-date.prototype.getminutes": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getMinutes",
            "slug": "JavaScript/Reference/Global_Objects/Date/getMinutes",
            "summary": "The getMinutes() method returns the minutes in the specified date according to local time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getMinutes()"
        }
    ],
    "sec-date.prototype.getmonth": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getMonth",
            "slug": "JavaScript/Reference/Global_Objects/Date/getMonth",
            "summary": "The getMonth() method returns the month in the specified date according to local time, as a zero-based value (where zero indicates the first month of the year).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getMonth()"
        }
    ],
    "sec-date.prototype.getseconds": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getSeconds",
            "slug": "JavaScript/Reference/Global_Objects/Date/getSeconds",
            "summary": "The getSeconds() method returns the seconds in the specified date according to local time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getSeconds()"
        }
    ],
    "sec-date.prototype.gettime": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getTime",
            "slug": "JavaScript/Reference/Global_Objects/Date/getTime",
            "summary": "The getTime() method returns the number of milliseconds* since the Unix Epoch.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getTime()"
        }
    ],
    "sec-date.prototype.gettimezoneoffset": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getTimezoneOffset",
            "slug": "JavaScript/Reference/Global_Objects/Date/getTimezoneOffset",
            "summary": "The getTimezoneOffset() method returns the time zone difference, in minutes, from current locale (host system settings) to UTC.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getTimezoneOffset()"
        }
    ],
    "sec-date.prototype.getutcdate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getUTCDate",
            "slug": "JavaScript/Reference/Global_Objects/Date/getUTCDate",
            "summary": "The getUTCDate() method returns the day (date) of the month in the specified date according to universal time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getUTCDate()"
        }
    ],
    "sec-date.prototype.getutcday": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getUTCDay",
            "slug": "JavaScript/Reference/Global_Objects/Date/getUTCDay",
            "summary": "The getUTCDay() method returns the day of the week in the specified date according to universal time, where 0 represents Sunday.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getUTCDay()"
        }
    ],
    "sec-date.prototype.getutcfullyear": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getUTCFullYear",
            "slug": "JavaScript/Reference/Global_Objects/Date/getUTCFullYear",
            "summary": "The getUTCFullYear() method returns the year in the specified date according to universal time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getUTCFullYear()"
        }
    ],
    "sec-date.prototype.getutchours": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getUTCHours",
            "slug": "JavaScript/Reference/Global_Objects/Date/getUTCHours",
            "summary": "The getUTCHours() method returns the hours in the specified date according to universal time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getUTCHours()"
        }
    ],
    "sec-date.prototype.getutcmilliseconds": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getUTCMilliseconds",
            "slug": "JavaScript/Reference/Global_Objects/Date/getUTCMilliseconds",
            "summary": "The getUTCMilliseconds() method returns the milliseconds portion of the time object's value.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getUTCMilliseconds()"
        }
    ],
    "sec-date.prototype.getutcminutes": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getUTCMinutes",
            "slug": "JavaScript/Reference/Global_Objects/Date/getUTCMinutes",
            "summary": "The getUTCMinutes() method returns the minutes in the specified date according to universal time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getUTCMinutes()"
        }
    ],
    "sec-date.prototype.getutcmonth": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getUTCMonth",
            "slug": "JavaScript/Reference/Global_Objects/Date/getUTCMonth",
            "summary": "The getUTCMonth() returns the month of the specified date according to universal time, as a zero-based value (where zero indicates the first month of the year).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getUTCMonth()"
        }
    ],
    "sec-date.prototype.getutcseconds": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "getUTCSeconds",
            "slug": "JavaScript/Reference/Global_Objects/Date/getUTCSeconds",
            "summary": "The getUTCSeconds() method returns the seconds in the specified date according to universal time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.getUTCSeconds()"
        }
    ],
    "sec-date.now": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "now",
            "slug": "JavaScript/Reference/Global_Objects/Date/now",
            "summary": "The static Date.now() method returns the number of milliseconds elapsed since January 1, 1970 00:00:00 UTC.",
            "support": {
                "chrome": {
                    "version_added": "5"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "10.5"
                },
                "opera_android": {
                    "version_added": "14"
                },
                "safari": {
                    "version_added": "4"
                },
                "safari_ios": {
                    "version_added": "4"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.now()"
        }
    ],
    "sec-date.parse": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "parse",
            "slug": "JavaScript/Reference/Global_Objects/Date/parse",
            "summary": "The Date.parse() method parses a string representation of a date, and returns the number of milliseconds since January 1, 1970, 00:00:00 UTC or NaN if the string is unrecognized or, in some cases, contains illegal date values (e.g. 2015-02-31).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.parse()"
        }
    ],
    "sec-date.prototype.setdate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setDate",
            "slug": "JavaScript/Reference/Global_Objects/Date/setDate",
            "summary": "The setDate() method sets the day of the Date object relative to the beginning of the currently set month.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setDate()"
        }
    ],
    "sec-date.prototype.setfullyear": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setFullYear",
            "slug": "JavaScript/Reference/Global_Objects/Date/setFullYear",
            "summary": "The setFullYear() method sets the full year for a specified date according to local time. Returns new timestamp.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setFullYear()"
        }
    ],
    "sec-date.prototype.sethours": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setHours",
            "slug": "JavaScript/Reference/Global_Objects/Date/setHours",
            "summary": "The setHours() method sets the hours for a specified date according to local time, and returns the number of milliseconds since January 1, 1970 00:00:00 UTC until the time represented by the updated Date instance.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setHours()"
        }
    ],
    "sec-date.prototype.setmilliseconds": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setMilliseconds",
            "slug": "JavaScript/Reference/Global_Objects/Date/setMilliseconds",
            "summary": "The setMilliseconds() method sets the milliseconds for a specified date according to local time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setMilliseconds()"
        }
    ],
    "sec-date.prototype.setminutes": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setMinutes",
            "slug": "JavaScript/Reference/Global_Objects/Date/setMinutes",
            "summary": "The setMinutes() method sets the minutes for a specified date according to local time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setMinutes()"
        }
    ],
    "sec-date.prototype.setmonth": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setMonth",
            "slug": "JavaScript/Reference/Global_Objects/Date/setMonth",
            "summary": "The setMonth() method sets the month for a specified date according to the currently set year.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setMonth()"
        }
    ],
    "sec-date.prototype.setseconds": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setSeconds",
            "slug": "JavaScript/Reference/Global_Objects/Date/setSeconds",
            "summary": "The setSeconds() method sets the seconds for a specified date according to local time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setSeconds()"
        }
    ],
    "sec-date.prototype.settime": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setTime",
            "slug": "JavaScript/Reference/Global_Objects/Date/setTime",
            "summary": "The setTime() method sets the Date object to the time represented by a number of milliseconds since January 1, 1970, 00:00:00 UTC.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setTime()"
        }
    ],
    "sec-date.prototype.setutcdate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setUTCDate",
            "slug": "JavaScript/Reference/Global_Objects/Date/setUTCDate",
            "summary": "The setUTCDate() method sets the day of the month for a specified date according to universal time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setUTCDate()"
        }
    ],
    "sec-date.prototype.setutcfullyear": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setUTCFullYear",
            "slug": "JavaScript/Reference/Global_Objects/Date/setUTCFullYear",
            "summary": "The setUTCFullYear() method sets the full year for a specified date according to universal time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setUTCFullYear()"
        }
    ],
    "sec-date.prototype.setutchours": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setUTCHours",
            "slug": "JavaScript/Reference/Global_Objects/Date/setUTCHours",
            "summary": "The setUTCHours() method sets the hour for a specified date according to universal time, and returns the number of milliseconds since  January 1, 1970 00:00:00 UTC until the time represented by the updated Date instance.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setUTCHours()"
        }
    ],
    "sec-date.prototype.setutcmilliseconds": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setUTCMilliseconds",
            "slug": "JavaScript/Reference/Global_Objects/Date/setUTCMilliseconds",
            "summary": "The setUTCMilliseconds() method sets the milliseconds for a specified date according to universal time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setUTCMilliseconds()"
        }
    ],
    "sec-date.prototype.setutcminutes": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setUTCMinutes",
            "slug": "JavaScript/Reference/Global_Objects/Date/setUTCMinutes",
            "summary": "The setUTCMinutes() method sets the minutes for a specified date according to universal time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setUTCMinutes()"
        }
    ],
    "sec-date.prototype.setutcmonth": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setUTCMonth",
            "slug": "JavaScript/Reference/Global_Objects/Date/setUTCMonth",
            "summary": "The setUTCMonth() method sets the month for a specified date according to universal time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setUTCMonth()"
        }
    ],
    "sec-date.prototype.setutcseconds": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "setUTCSeconds",
            "slug": "JavaScript/Reference/Global_Objects/Date/setUTCSeconds",
            "summary": "The setUTCSeconds() method sets the seconds for a specified date according to universal time.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.setUTCSeconds()"
        }
    ],
    "sec-date.prototype.todatestring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "toDateString",
            "slug": "JavaScript/Reference/Global_Objects/Date/toDateString",
            "summary": "The toDateString() method returns the date portion of a Date object in English in the following format separated by spaces:",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.toDateString()"
        }
    ],
    "sec-date.prototype.toisostring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "toISOString",
            "slug": "JavaScript/Reference/Global_Objects/Date/toISOString",
            "summary": "The toISOString() method returns a string in simplified extended ISO format (ISO 8601), which is always 24 or 27 characters long (YYYY-MM-DDTHH:mm:ss.sssZ or ±YYYYYY-MM-DDTHH:mm:ss.sssZ, respectively). The timezone is always zero UTC offset, as denoted by the suffix \"Z\".",
            "support": {
                "chrome": {
                    "version_added": "3"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "10.5"
                },
                "opera_android": {
                    "version_added": "11"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.toISOString()"
        }
    ],
    "sec-date.prototype.tojson": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "toJSON",
            "slug": "JavaScript/Reference/Global_Objects/Date/toJSON",
            "summary": "The toJSON() method returns a string representation of the Date object.",
            "support": {
                "chrome": {
                    "version_added": "3"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "8"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "10.5"
                },
                "opera_android": {
                    "version_added": "11"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.toJSON()"
        }
    ],
    "sec-date.prototype.tolocaledatestring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "toLocaleDateString",
            "slug": "JavaScript/Reference/Global_Objects/Date/toLocaleDateString",
            "summary": "The toLocaleDateString() method returns a string with a language sensitive representation of the date portion of this date. The new locales and options arguments let applications specify the language whose formatting conventions should be used and allow to customize the behavior of the function. In older implementations, which ignore the locales and options arguments, the locale used and the form of the string returned are entirely implementation dependent.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.toLocaleDateString()"
        }
    ],
    "sec-date.prototype.tolocalestring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "toLocaleString",
            "slug": "JavaScript/Reference/Global_Objects/Date/toLocaleString",
            "summary": "The toLocaleString() method returns a string with a language sensitive representation of this date.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.toLocaleString()"
        }
    ],
    "sec-date.prototype.tolocaletimestring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "toLocaleTimeString",
            "slug": "JavaScript/Reference/Global_Objects/Date/toLocaleTimeString",
            "summary": "The toLocaleTimeString() method returns a string with a language sensitive representation of the time portion of this date. The new locales and options arguments let applications specify the language whose formatting conventions should be used and customize the behavior of the function. In older implementations, which ignore the locales and options arguments, the locale used and the form of the string returned are entirely implementation dependent.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.toLocaleTimeString()"
        }
    ],
    "sec-date.prototype.tostring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "toString",
            "slug": "JavaScript/Reference/Global_Objects/Date/toString",
            "summary": "The toString() method returns a string representing the specified Date object.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.toString()"
        }
    ],
    "sec-date.prototype.totimestring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "toTimeString",
            "slug": "JavaScript/Reference/Global_Objects/Date/toTimeString",
            "summary": "The toTimeString() method returns the time portion of a Date object in human readable form in English.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.toTimeString()"
        }
    ],
    "sec-date.prototype.toutcstring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "toUTCString",
            "slug": "JavaScript/Reference/Global_Objects/Date/toUTCString",
            "summary": "The toUTCString() method converts a date to a string, using the UTC time zone.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.toUTCString()"
        }
    ],
    "sec-date.prototype.valueof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "valueOf",
            "slug": "JavaScript/Reference/Global_Objects/Date/valueOf",
            "summary": "The valueOf() method returns the primitive value of a Date object.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype.valueOf()"
        }
    ],
    "sec-date.prototype-@@toprimitive": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "@@toPrimitive",
            "slug": "JavaScript/Reference/Global_Objects/Date/@@toPrimitive",
            "summary": "The [@@toPrimitive]() method converts a Date object to a primitive value.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": {
                    "version_added": "47"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "44"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "34"
                },
                "opera_android": {
                    "version_added": "34"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "47"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date.prototype[@@toPrimitive]"
        }
    ],
    "sec-date-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Date.json",
            "name": "Date",
            "slug": "JavaScript/Reference/Global_Objects/Date",
            "summary": "JavaScript Date objects represent a single moment in time in a platform-independent format.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3",
                    "notes": "The <a href='https://en.wikipedia.org/wiki/ISO_8601'>ISO8601 Date Format</a> is not supported in Internet Explorer 8 or earlier."
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Date"
        }
    ],
    "sec-error-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Error.json",
            "name": "Error",
            "slug": "JavaScript/Reference/Global_Objects/Error/Error",
            "summary": "The Error constructor creates an error object.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "6"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Error() constructor"
        }
    ],
    "sec-error.prototype.message": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Error.json",
            "name": "message",
            "slug": "JavaScript/Reference/Global_Objects/Error/message",
            "summary": "The message property is a human-readable description of the error.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "6"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Error.prototype.message"
        }
    ],
    "sec-error.prototype.name": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Error.json",
            "name": "name",
            "slug": "JavaScript/Reference/Global_Objects/Error/name",
            "summary": "The name property represents a name for the type of error. The initial value is \"Error\".",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "6"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Error.prototype.name"
        }
    ],
    "sec-error.prototype.tostring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Error.json",
            "name": "toString",
            "slug": "JavaScript/Reference/Global_Objects/Error/toString",
            "summary": "The toString() method returns a string representing the specified Error object.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "6"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Error.prototype.toString()"
        }
    ],
    "sec-error-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Error.json",
            "name": "Error",
            "slug": "JavaScript/Reference/Global_Objects/Error",
            "summary": "Error objects are thrown when runtime errors occur. The Error object can also be used as a base object for user-defined exceptions. See below for standard built-in error types.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "6"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Error"
        }
    ],
    "sec-nativeerror-constructors": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/EvalError.json",
            "name": "EvalError",
            "slug": "JavaScript/Reference/Global_Objects/EvalError/EvalError",
            "summary": "The EvalError constructor creates a new error regarding the global eval() function. This exception is not thrown by JavaScript anymore, however the EvalError object remains for compatibility.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "EvalError() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RangeError.json",
            "name": "RangeError",
            "slug": "JavaScript/Reference/Global_Objects/RangeError/RangeError",
            "summary": "The RangeError() constructor creates an error when a value is not in the set or range of allowed values.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RangeError() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/ReferenceError.json",
            "name": "ReferenceError",
            "slug": "JavaScript/Reference/Global_Objects/ReferenceError/ReferenceError",
            "summary": "The ReferenceError object represents an error when a non-existent variable is referenced.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReferenceError() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/SyntaxError.json",
            "name": "SyntaxError",
            "slug": "JavaScript/Reference/Global_Objects/SyntaxError/SyntaxError",
            "summary": "The SyntaxError constructor creates a new error object that represents an error when trying to interpret syntactically invalid code.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "SyntaxError() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypeError.json",
            "name": "TypeError",
            "slug": "JavaScript/Reference/Global_Objects/TypeError/TypeError",
            "summary": "The TypeError() constructor creates a new error when an operation could not be performed, typically (but not exclusively) when a value is not of the expected type.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypeError() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/URIError.json",
            "name": "URIError",
            "slug": "JavaScript/Reference/Global_Objects/URIError/URIError",
            "summary": "The URIError() constructor creates an error when a global URI handling function was used in a wrong way.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "URIError() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/webassembly/CompileError.json",
            "name": "CompileError",
            "slug": "JavaScript/Reference/Global_Objects/WebAssembly/CompileError/CompileError",
            "summary": "The WebAssembly.CompileError() constructor creates a new WebAssembly CompileError object, which indicates an error during WebAssembly decoding or validation.",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": "57"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "52",
                    "notes": "Disabled in the Firefox 52 Extended Support Release (ESR)."
                },
                "firefox_android": {
                    "version_added": "52",
                    "notes": "Disabled in the Firefox 52 Extended Support Release (ESR)."
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.0.0"
                },
                "opera": {
                    "version_added": "44"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "57"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebAssembly.CompileError() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/webassembly/LinkError.json",
            "name": "LinkError",
            "slug": "JavaScript/Reference/Global_Objects/WebAssembly/LinkError/LinkError",
            "summary": "The WebAssembly.LinkError() constructor creates a new WebAssembly LinkError object, which indicates an error during module instantiation (besides traps from the start function).",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": "57"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "52",
                    "notes": "Disabled in the Firefox 52 Extended Support Release (ESR)."
                },
                "firefox_android": {
                    "version_added": "52",
                    "notes": "Disabled in the Firefox 52 Extended Support Release (ESR)."
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.0.0"
                },
                "opera": {
                    "version_added": "44"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "57"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebAssembly.LinkError() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/webassembly/RunTimeError.json",
            "name": "RuntimeError",
            "slug": "JavaScript/Reference/Global_Objects/WebAssembly/RuntimeError/RuntimeError",
            "summary": "The WebAssembly.RuntimeError() constructor creates a new WebAssembly RuntimeError object — the type that is thrown whenever WebAssembly specifies a trap.",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": "57"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "52",
                    "notes": "Disabled in the Firefox 52 Extended Support Release (ESR)."
                },
                "firefox_android": {
                    "version_added": "52",
                    "notes": "Disabled in the Firefox 52 Extended Support Release (ESR)."
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.0.0"
                },
                "opera": {
                    "version_added": "44"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "57"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebAssembly.RuntimeError() constructor"
        }
    ],
    "sec-native-error-types-used-in-this-standard-evalerror": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/EvalError.json",
            "name": "EvalError",
            "slug": "JavaScript/Reference/Global_Objects/EvalError",
            "summary": "The EvalError object indicates an error regarding the global eval() function. This exception is not thrown by JavaScript anymore, however the EvalError object remains for compatibility.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "EvalError"
        }
    ],
    "table-49": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Float32Array.json",
            "name": "Float32Array",
            "slug": "JavaScript/Reference/Global_Objects/Float32Array",
            "summary": "The Float32Array typed array represents an array of 32-bit floating point numbers (corresponding to the C float data type) in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Float32Array"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Float64Array.json",
            "name": "Float64Array",
            "slug": "JavaScript/Reference/Global_Objects/Float64Array",
            "summary": "The Float64Array typed array represents an array of 64-bit floating point numbers (corresponding to the C double data type) in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Float64Array"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Int16Array.json",
            "name": "Int16Array",
            "slug": "JavaScript/Reference/Global_Objects/Int16Array",
            "summary": "The Int16Array typed array represents an array of twos-complement 16-bit signed integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Int16Array"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Int32Array.json",
            "name": "Int32Array",
            "slug": "JavaScript/Reference/Global_Objects/Int32Array",
            "summary": "The Int32Array typed array represents an array of twos-complement 32-bit signed integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Int32Array"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Int8Array.json",
            "name": "Int8Array",
            "slug": "JavaScript/Reference/Global_Objects/Int8Array",
            "summary": "The Int8Array typed array represents an array of twos-complement 8-bit signed integers. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Int8Array"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Uint16Array.json",
            "name": "Uint16Array",
            "slug": "JavaScript/Reference/Global_Objects/Uint16Array",
            "summary": "The Uint16Array typed array represents an array of 16-bit unsigned integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Uint16Array"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Uint32Array.json",
            "name": "Uint32Array",
            "slug": "JavaScript/Reference/Global_Objects/Uint32Array",
            "summary": "The Uint32Array typed array represents an array of 32-bit unsigned integers in the platform byte order. If control over byte order is needed, use DataView instead. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Uint32Array"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Uint8Array.json",
            "name": "Uint8Array",
            "slug": "JavaScript/Reference/Global_Objects/Uint8Array",
            "summary": "The Uint8Array typed array represents an array of 8-bit unsigned integers. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Uint8Array"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Uint8ClampedArray.json",
            "name": "Uint8ClampedArray",
            "slug": "JavaScript/Reference/Global_Objects/Uint8ClampedArray",
            "summary": "The Uint8ClampedArray typed array represents an array of 8-bit unsigned integers clamped to 0-255; if you specified a value that is out of the range of [0,255], 0 or 255 will be set instead; if you specify a non-integer, the nearest integer will be set. The contents are initialized to 0. Once established, you can reference elements in the array using the object's methods, or using standard array index syntax (that is, using bracket notation).",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Uint8ClampedArray"
        }
    ],
    "sec-function-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Function.json",
            "name": "Function",
            "slug": "JavaScript/Reference/Global_Objects/Function/Function",
            "summary": "The Function constructor creates a new Function object. Calling the constructor directly can create functions dynamically, but suffers from security and similar (but far less significant) performance issues to eval. However, unlike eval, the Function constructor creates functions which execute in the global scope only.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Function() constructor"
        }
    ],
    "sec-function.prototype.apply": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Function.json",
            "name": "apply",
            "slug": "JavaScript/Reference/Global_Objects/Function/apply",
            "summary": "The apply() method calls a function with a given this value, and arguments provided as an array (or an array-like object).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Function.prototype.apply()"
        }
    ],
    "sec-function.prototype.bind": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Function.json",
            "name": "bind",
            "slug": "JavaScript/Reference/Global_Objects/Function/bind",
            "summary": "The bind() method creates a new function that, when called, has its this keyword set to the provided value, with a given sequence of arguments preceding any provided when the new function is called.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "6"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Function.prototype.bind()"
        }
    ],
    "sec-function.prototype.call": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Function.json",
            "name": "call",
            "slug": "JavaScript/Reference/Global_Objects/Function/call",
            "summary": "The call() method calls a function with a given this value and arguments provided individually.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Function.prototype.call()"
        }
    ],
    "sec-function-instances-length": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Function.json",
            "name": "length",
            "slug": "JavaScript/Reference/Global_Objects/Function/length",
            "summary": "The length property indicates the number of parameters expected by the function.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Function.length"
        }
    ],
    "sec-function-instances-name": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Function.json",
            "name": "name",
            "slug": "JavaScript/Reference/Global_Objects/Function/name",
            "summary": "A Function object's read-only name property indicates the function's name as specified when it was created, or it may be either anonymous or '' (an empty string) for functions created anonymously.",
            "support": {
                "chrome": {
                    "version_added": "15"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "10.5"
                },
                "opera_android": {
                    "version_added": "11"
                },
                "safari": {
                    "version_added": "6"
                },
                "safari_ios": {
                    "version_added": "6"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Function.name"
        }
    ],
    "sec-function.prototype.tostring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Function.json",
            "name": "toString",
            "slug": "JavaScript/Reference/Global_Objects/Function/toString",
            "summary": "The toString() method returns a string representing the source code of the function.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Function.prototype.toString()"
        }
    ],
    "sec-function-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Function.json",
            "name": "Function",
            "slug": "JavaScript/Reference/Global_Objects/Function",
            "summary": "Every JavaScript function is actually a Function object. This can be seen with the code (function(){}).constructor === Function, which returns true.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Function"
        }
    ],
    "sec-generator.prototype.next": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Generator.json",
            "name": "next",
            "slug": "JavaScript/Reference/Global_Objects/Generator/next",
            "summary": "The next() method returns an object with two properties done and value. You can also provide a parameter to the next method to send a value to the generator.",
            "support": {
                "chrome": {
                    "version_added": "39"
                },
                "chrome_android": {
                    "version_added": "39"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "26"
                },
                "firefox_android": {
                    "version_added": "26"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "26"
                },
                "opera_android": {
                    "version_added": "26"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "39"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Generator.prototype.next()"
        }
    ],
    "sec-generator.prototype.return": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Generator.json",
            "name": "return",
            "slug": "JavaScript/Reference/Global_Objects/Generator/return",
            "summary": "The return() method returns the given value and finishes the generator.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Generator.prototype.return()"
        }
    ],
    "sec-generator.prototype.throw": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Generator.json",
            "name": "throw",
            "slug": "JavaScript/Reference/Global_Objects/Generator/throw",
            "summary": "The throw() method resumes the execution of a generator by throwing an error into it and returns an object with two properties done and value.",
            "support": {
                "chrome": {
                    "version_added": "39"
                },
                "chrome_android": {
                    "version_added": "39"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "26"
                },
                "firefox_android": {
                    "version_added": "26"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "4.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "26"
                },
                "opera_android": {
                    "version_added": "26"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "39"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Generator.prototype.throw()"
        }
    ],
    "sec-generator-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Generator.json",
            "name": "Generator",
            "slug": "JavaScript/Reference/Global_Objects/Generator",
            "summary": "The Generator object is returned by a generator function and it conforms to both the iterable protocol and the iterator protocol.",
            "support": {
                "chrome": {
                    "version_added": "39"
                },
                "chrome_android": {
                    "version_added": "39"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "26"
                },
                "firefox_android": {
                    "version_added": "26"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "4.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "26"
                },
                "opera_android": {
                    "version_added": "26"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "39"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Generator"
        }
    ],
    "sec-generatorfunction-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/GeneratorFunction.json",
            "name": "GeneratorFunction",
            "slug": "JavaScript/Reference/Global_Objects/GeneratorFunction",
            "summary": "The GeneratorFunction constructor creates a new generator function object. In JavaScript, every generator function is actually a GeneratorFunction object.",
            "support": {
                "chrome": {
                    "version_added": "39"
                },
                "chrome_android": {
                    "version_added": "39"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "26"
                },
                "firefox_android": {
                    "version_added": "26"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "26"
                },
                "opera_android": {
                    "version_added": "26"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "39"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "GeneratorFunction"
        }
    ],
    "sec-json.parse": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/JSON.json",
            "name": "parse",
            "slug": "JavaScript/Reference/Global_Objects/JSON/parse",
            "summary": "The JSON.parse() method parses a JSON string, constructing the JavaScript value or object described by the string. An optional reviver function can be provided to perform a transformation on the resulting object before it is returned.",
            "support": {
                "chrome": {
                    "version_added": "3"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "8"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "10.5"
                },
                "opera_android": {
                    "version_added": "11"
                },
                "safari": {
                    "version_added": "4"
                },
                "safari_ios": {
                    "version_added": "4"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "JSON.parse()"
        }
    ],
    "sec-json.stringify": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/JSON.json",
            "name": "stringify",
            "slug": "JavaScript/Reference/Global_Objects/JSON/stringify",
            "summary": "The JSON.stringify() method converts a JavaScript object or value to a JSON string, optionally replacing values if a replacer function is specified or optionally including only the specified properties if a replacer array is specified.",
            "support": {
                "chrome": {
                    "version_added": "3"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "8"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "10.5"
                },
                "opera_android": {
                    "version_added": "11"
                },
                "safari": {
                    "version_added": "4"
                },
                "safari_ios": {
                    "version_added": "4"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "JSON.stringify()"
        }
    ],
    "sec-json-object": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/JSON.json",
            "name": "JSON",
            "slug": "JavaScript/Reference/Global_Objects/JSON",
            "summary": "The JSON object contains methods for parsing JavaScript Object Notation (JSON) and converting values to JSON. It can't be called or constructed, and aside from its two method properties, it has no interesting functionality of its own.",
            "support": {
                "chrome": {
                    "version_added": "3"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "8"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "10.5"
                },
                "opera_android": {
                    "version_added": "11"
                },
                "safari": {
                    "version_added": "4"
                },
                "safari_ios": {
                    "version_added": "4"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "json",
                "title": "JSON parsing"
            },
            "title": "JSON"
        }
    ],
    "sec-map-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "Map",
            "slug": "JavaScript/Reference/Global_Objects/Map/Map",
            "summary": "The Map() constructor creates Map objects.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "13"
                },
                "firefox_android": {
                    "version_added": "14"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Map() constructor"
        }
    ],
    "sec-map.prototype.clear": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "clear",
            "slug": "JavaScript/Reference/Global_Objects/Map/clear",
            "summary": "The clear() method removes all elements from a Map object.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "19"
                },
                "firefox_android": {
                    "version_added": "19"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Map.prototype.clear()"
        }
    ],
    "sec-map.prototype.delete": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "delete",
            "slug": "JavaScript/Reference/Global_Objects/Map/delete",
            "summary": "The delete() method removes the specified element from a Map object by key.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "13"
                },
                "firefox_android": {
                    "version_added": "14"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Map.prototype.delete()"
        }
    ],
    "sec-map.prototype.entries": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "entries",
            "slug": "JavaScript/Reference/Global_Objects/Map/entries",
            "summary": "The entries() method returns a new Iterator object that contains the [key, value] pairs for each element in the Map object in insertion order.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "20"
                },
                "firefox_android": {
                    "version_added": "20"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Map.prototype.entries()"
        }
    ],
    "sec-map.prototype.foreach": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "forEach",
            "slug": "JavaScript/Reference/Global_Objects/Map/forEach",
            "summary": "The forEach() method executes a provided function once per each key/value pair in the Map object, in insertion order.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Map.prototype.forEach()"
        }
    ],
    "sec-map.prototype.get": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "get",
            "slug": "JavaScript/Reference/Global_Objects/Map/get",
            "summary": "The get() method returns a specified element from a Map object. If the value that is associated to the provided key is an object, then you will get a reference to that object and any change made to that object will effectively modify it inside the Map object.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "13"
                },
                "firefox_android": {
                    "version_added": "14"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Map.prototype.get()"
        }
    ],
    "sec-map.prototype.has": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "has",
            "slug": "JavaScript/Reference/Global_Objects/Map/has",
            "summary": "The has() method returns a boolean indicating whether an element with the specified key exists or not.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "13"
                },
                "firefox_android": {
                    "version_added": "14"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Map.prototype.has()"
        }
    ],
    "sec-map.prototype.keys": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "keys",
            "slug": "JavaScript/Reference/Global_Objects/Map/keys",
            "summary": "The keys() method returns a new Iterator object that contains the keys for each element in the Map object in insertion order.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "20"
                },
                "firefox_android": {
                    "version_added": "20"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Map.prototype.keys()"
        }
    ],
    "sec-map.prototype.set": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "set",
            "slug": "JavaScript/Reference/Global_Objects/Map/set",
            "summary": "The set() method adds or updates an element with a specified key and a value to a Map object.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "13"
                },
                "firefox_android": {
                    "version_added": "14"
                },
                "ie": {
                    "version_added": "11",
                    "partial_implementation": true,
                    "notes": "Returns 'undefined' instead of the 'Map' object."
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Map.prototype.set()"
        }
    ],
    "sec-get-map.prototype.size": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "size",
            "slug": "JavaScript/Reference/Global_Objects/Map/size",
            "summary": "The size accessor property returns the number of elements in a Map object.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "19",
                    "notes": "From Firefox 13 to Firefox 18, the <code>size</code> property was implemented as a <code>Map.prototype.size()</code> method, this has been changed to a property in later versions conform to the ECMAScript 2015 specification."
                },
                "firefox_android": {
                    "version_added": "19",
                    "notes": "From Firefox 13 to Firefox 18, the <code>size</code> property was implemented as a <code>Map.prototype.size()</code> method, this has been changed to a property in later versions conform to the ECMAScript 2015 specification."
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Map.prototype.size"
        }
    ],
    "sec-map.prototype.values": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "values",
            "slug": "JavaScript/Reference/Global_Objects/Map/values",
            "summary": "The values() method returns a new Iterator object that contains the values for each element in the Map object in insertion order.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "20"
                },
                "firefox_android": {
                    "version_added": "20"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Map.prototype.values()"
        }
    ],
    "sec-map.prototype-@@iterator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "@@iterator",
            "slug": "JavaScript/Reference/Global_Objects/Map/@@iterator",
            "summary": "The initial value of the @@iterator property is the same function object as the initial value of the entries method.",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": {
                    "version_added": "43"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "36"
                    },
                    {
                        "alternative_name": "@@iterator",
                        "version_added": "27",
                        "version_removed": "36",
                        "notes": "A placeholder property named <code>@@iterator</code> is used."
                    },
                    {
                        "alternative_name": "iterator",
                        "version_added": "17",
                        "version_removed": "27",
                        "notes": "A placeholder property named <code>iterator</code> is used."
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "36"
                    },
                    {
                        "alternative_name": "@@iterator",
                        "version_added": "27",
                        "version_removed": "36",
                        "notes": "A placeholder property named <code>@@iterator</code> is used."
                    },
                    {
                        "alternative_name": "iterator",
                        "version_added": "17",
                        "version_removed": "27",
                        "notes": "A placeholder property named <code>iterator</code> is used."
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "30"
                },
                "opera_android": {
                    "version_added": "30"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Map.prototype[@@iterator]()"
        }
    ],
    "sec-get-map-@@species": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "@@species",
            "slug": "JavaScript/Reference/Global_Objects/Map/@@species",
            "summary": "The Map[@@species] accessor property returns the Map constructor.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "41"
                },
                "firefox_android": {
                    "version_added": "41"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.5.0"
                    },
                    {
                        "version_added": "6.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "38"
                },
                "opera_android": {
                    "version_added": "41"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "get Map[@@species]"
        }
    ],
    "sec-map.prototype-@@tostringtag": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "@@toStringTag",
            "slug": "JavaScript/Reference/Global_Objects/Map/@@toStringTag",
            "summary": "The Map[@@toStringTag] property has an initial value of \"Map\".",
            "support": {
                "chrome": {
                    "version_added": "44"
                },
                "chrome_android": {
                    "version_added": "44"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": {
                    "version_added": "51"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "9.1"
                },
                "safari_ios": {
                    "version_added": "9.3"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "44"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Map.prototype[@@toStringTag]"
        }
    ],
    "sec-map-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Map.json",
            "name": "Map",
            "slug": "JavaScript/Reference/Global_Objects/Map",
            "summary": "The Map object holds key-value pairs and remembers the original insertion order of the keys.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "13"
                },
                "firefox_android": {
                    "version_added": "14"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Map"
        }
    ],
    "sec-math.e": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "E",
            "slug": "JavaScript/Reference/Global_Objects/Math/E",
            "summary": "The Math.E property represents the base of natural logarithms, e, approximately 2.718.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.E"
        }
    ],
    "sec-math.ln2": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "LN2",
            "slug": "JavaScript/Reference/Global_Objects/Math/LN2",
            "summary": "The Math.LN2 property represents the natural logarithm of 2, approximately 0.693:",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.LN2"
        }
    ],
    "sec-math.ln10": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "LN10",
            "slug": "JavaScript/Reference/Global_Objects/Math/LN10",
            "summary": "The Math.LN10 property represents the natural logarithm of 10, approximately 2.302:",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.LN10"
        }
    ],
    "sec-math.log2e": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "LOG2E",
            "slug": "JavaScript/Reference/Global_Objects/Math/LOG2E",
            "summary": "The Math.LOG2E property represents the base 2 logarithm of e, approximately 1.442:",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.LOG2E"
        }
    ],
    "sec-math.log10e": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "LOG10E",
            "slug": "JavaScript/Reference/Global_Objects/Math/LOG10E",
            "summary": "The Math.LOG10E property represents the base 10 logarithm of e, approximately 0.434:",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.LOG10E"
        }
    ],
    "sec-math.pi": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "PI",
            "slug": "JavaScript/Reference/Global_Objects/Math/PI",
            "summary": "The Math.PI property represents the ratio of the circumference of a circle to its diameter, approximately 3.14159:",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.PI"
        }
    ],
    "sec-math.sqrt1_2": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "SQRT1_2",
            "slug": "JavaScript/Reference/Global_Objects/Math/SQRT1_2",
            "summary": "The Math.SQRT1_2 property represents the square root of 1/2 which is approximately 0.707:",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.SQRT1_2"
        }
    ],
    "sec-math.sqrt2": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "SQRT2",
            "slug": "JavaScript/Reference/Global_Objects/Math/SQRT2",
            "summary": "The Math.SQRT2 property represents the square root of 2, approximately 1.414:",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.SQRT2"
        }
    ],
    "sec-math.abs": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "abs",
            "slug": "JavaScript/Reference/Global_Objects/Math/abs",
            "summary": "The Math.abs() function returns the absolute value of a number",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.abs()"
        }
    ],
    "sec-math.acos": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "acos",
            "slug": "JavaScript/Reference/Global_Objects/Math/acos",
            "summary": "The Math.acos() function returns the arccosine (in radians) of a number, that is",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.acos()"
        }
    ],
    "sec-math.acosh": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "acosh",
            "slug": "JavaScript/Reference/Global_Objects/Math/acosh",
            "summary": "The Math.acosh() function returns the hyperbolic arc-cosine of a number, that is",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.acosh()"
        }
    ],
    "sec-math.asin": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "asin",
            "slug": "JavaScript/Reference/Global_Objects/Math/asin",
            "summary": "The Math.asin() function returns the arcsine (in radians) of a number, that is",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.asin()"
        }
    ],
    "sec-math.asinh": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "asinh",
            "slug": "JavaScript/Reference/Global_Objects/Math/asinh",
            "summary": "The Math.asinh() function returns the hyperbolic arcsine of a number, that is",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.asinh()"
        }
    ],
    "sec-math.atan": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "atan",
            "slug": "JavaScript/Reference/Global_Objects/Math/atan",
            "summary": "The Math.atan() function returns the arctangent (in radians) of a number, that is",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.atan()"
        }
    ],
    "sec-math.atan2": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "atan2",
            "slug": "JavaScript/Reference/Global_Objects/Math/atan2",
            "summary": "The Math.atan2() function returns the angle in the plane (in radians) between the positive x-axis and the ray from (0,0) to the point (x,y), for Math.atan2(y,x).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.atan2()"
        }
    ],
    "sec-math.atanh": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "atanh",
            "slug": "JavaScript/Reference/Global_Objects/Math/atanh",
            "summary": "The Math.atanh() function returns the hyperbolic arctangent of a number, that is",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.atanh()"
        }
    ],
    "sec-math.cbrt": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "cbrt",
            "slug": "JavaScript/Reference/Global_Objects/Math/cbrt",
            "summary": "The Math.cbrt() function returns the cube root of a number, that is",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.cbrt()"
        }
    ],
    "sec-math.ceil": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "ceil",
            "slug": "JavaScript/Reference/Global_Objects/Math/ceil",
            "summary": "The Math.ceil() function always rounds a number up to the next largest integer.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.ceil()"
        }
    ],
    "sec-math.clz32": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "clz32",
            "slug": "JavaScript/Reference/Global_Objects/Math/clz32",
            "summary": "The Math.clz32() function returns the number of leading zero bits in the 32-bit binary representation of a number.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "31"
                },
                "firefox_android": {
                    "version_added": "31"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "7"
                },
                "safari_ios": {
                    "version_added": "7"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.clz32()"
        }
    ],
    "sec-math.cos": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "cos",
            "slug": "JavaScript/Reference/Global_Objects/Math/cos",
            "summary": "The Math.cos() static function returns the cosine of the specified angle, which must be specified in radians. This value is ",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.cos()"
        }
    ],
    "sec-math.cosh": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "cosh",
            "slug": "JavaScript/Reference/Global_Objects/Math/cosh",
            "summary": "The Math.cosh() function returns the hyperbolic cosine of a number, that can be expressed using the constant e:",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.cosh()"
        }
    ],
    "sec-math.exp": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "exp",
            "slug": "JavaScript/Reference/Global_Objects/Math/exp",
            "summary": "The Math.exp() function returns ex, where x is the argument, and e is Euler's number (also known as Napier's constant), the base of the natural logarithms.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.exp()"
        }
    ],
    "sec-math.expm1": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "expm1",
            "slug": "JavaScript/Reference/Global_Objects/Math/expm1",
            "summary": "The Math.expm1() function returns ex - 1, where x is the argument, and e the base of the natural logarithms.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.expm1()"
        }
    ],
    "sec-math.floor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "floor",
            "slug": "JavaScript/Reference/Global_Objects/Math/floor",
            "summary": "The Math.floor() function returns the largest integer less than or equal to a given number.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.floor()"
        }
    ],
    "sec-math.fround": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "fround",
            "slug": "JavaScript/Reference/Global_Objects/Math/fround",
            "summary": "The Math.fround() function returns the nearest 32-bit single precision float representation of a Number.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "26"
                },
                "firefox_android": {
                    "version_added": "26"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.fround()"
        }
    ],
    "sec-math.hypot": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "hypot",
            "slug": "JavaScript/Reference/Global_Objects/Math/hypot",
            "summary": "The Math.hypot() function returns the square root of the sum of squares of its arguments, that is:",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "27"
                },
                "firefox_android": {
                    "version_added": "27"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.hypot()"
        }
    ],
    "sec-math.imul": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "imul",
            "slug": "JavaScript/Reference/Global_Objects/Math/imul",
            "summary": "The Math.imul() function returns the result of the C-like 32-bit multiplication of the two parameters.",
            "support": {
                "chrome": {
                    "version_added": "28"
                },
                "chrome_android": {
                    "version_added": "28"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "20"
                },
                "firefox_android": {
                    "version_added": "20"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "16"
                },
                "opera_android": {
                    "version_added": "15"
                },
                "safari": {
                    "version_added": "7"
                },
                "safari_ios": {
                    "version_added": "7"
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.imul()"
        }
    ],
    "sec-math.log": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "log",
            "slug": "JavaScript/Reference/Global_Objects/Math/log",
            "summary": "The Math.log() function returns the natural logarithm (base e) of a number, that is",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.log()"
        }
    ],
    "sec-math.log1p": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "log1p",
            "slug": "JavaScript/Reference/Global_Objects/Math/log1p",
            "summary": "The Math.log1p() function returns the natural logarithm (base e) of 1 + a number, that is",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.log1p()"
        }
    ],
    "sec-math.log2": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "log2",
            "slug": "JavaScript/Reference/Global_Objects/Math/log2",
            "summary": "The Math.log2() function returns the base 2 logarithm of a number, that is",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.log2()"
        }
    ],
    "sec-math.log10": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "log10",
            "slug": "JavaScript/Reference/Global_Objects/Math/log10",
            "summary": "The Math.log10() function returns the base 10 logarithm of a number, that is",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.log10()"
        }
    ],
    "sec-math.max": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "max",
            "slug": "JavaScript/Reference/Global_Objects/Math/max",
            "summary": "The Math.max() function returns the largest of the zero or more numbers given as input parameters.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.max()"
        }
    ],
    "sec-math.min": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "min",
            "slug": "JavaScript/Reference/Global_Objects/Math/min",
            "summary": "The static function Math.min() returns the lowest-valued number passed into it, or NaN if any parameter isn't a number and can't be converted into one.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.min()"
        }
    ],
    "sec-math.pow": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "pow",
            "slug": "JavaScript/Reference/Global_Objects/Math/pow",
            "summary": "The Math.pow() function returns the base to the exponent power, that is, baseexponent.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.pow()"
        }
    ],
    "sec-math.random": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "random",
            "slug": "JavaScript/Reference/Global_Objects/Math/random",
            "summary": "The Math.random() function returns a floating-point, pseudo-random number in the range 0 to less than 1 (inclusive of 0, but not 1) with approximately uniform distribution over that range — which you can then scale to your desired range. The implementation selects the initial seed to the random number generation algorithm; it cannot be chosen or reset by the user.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.random()"
        }
    ],
    "sec-math.round": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "round",
            "slug": "JavaScript/Reference/Global_Objects/Math/round",
            "summary": "The Math.round() function returns the value of a number rounded to the nearest integer.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.round()"
        }
    ],
    "sec-math.sign": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "sign",
            "slug": "JavaScript/Reference/Global_Objects/Math/sign",
            "summary": "The Math.sign() function returns either a positive or negative +/- 1, indicating the sign of a number passed into the argument. If the number passed into Math.sign() is 0, it will return a +/- 0. Note that if the number is positive, an explicit (+) will not be returned.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.sign()"
        }
    ],
    "sec-math.sin": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "sin",
            "slug": "JavaScript/Reference/Global_Objects/Math/sin",
            "summary": "The Math.sin() function returns the sine of a number.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.sin()"
        }
    ],
    "sec-math.sinh": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "sinh",
            "slug": "JavaScript/Reference/Global_Objects/Math/sinh",
            "summary": "The Math.sinh() function returns the hyperbolic sine of a number, that can be expressed using the constant e:",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.sinh()"
        }
    ],
    "sec-math.sqrt": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "sqrt",
            "slug": "JavaScript/Reference/Global_Objects/Math/sqrt",
            "summary": "The Math.sqrt() function returns the square root of a number, that is",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.sqrt()"
        }
    ],
    "sec-math.tan": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "tan",
            "slug": "JavaScript/Reference/Global_Objects/Math/tan",
            "summary": "The Math.tan() function returns the tangent of a number.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.tan()"
        }
    ],
    "sec-math.tanh": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "tanh",
            "slug": "JavaScript/Reference/Global_Objects/Math/tanh",
            "summary": "The Math.tanh() function returns the hyperbolic tangent of a number, that is",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.tanh()"
        }
    ],
    "sec-math.trunc": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Math.json",
            "name": "trunc",
            "slug": "JavaScript/Reference/Global_Objects/Math/trunc",
            "summary": "The Math.trunc() function returns the integer part of a number by removing any fractional digits.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Math.trunc()"
        }
    ],
    "sec-number.epsilon": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "EPSILON",
            "slug": "JavaScript/Reference/Global_Objects/Number/EPSILON",
            "summary": "The Number.EPSILON property represents the difference between 1 and the smallest floating point number greater than 1.",
            "support": {
                "chrome": {
                    "version_added": "34"
                },
                "chrome_android": {
                    "version_added": "34"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "21"
                },
                "opera_android": {
                    "version_added": "21"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.EPSILON"
        }
    ],
    "sec-number.max_safe_integer": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "MAX_SAFE_INTEGER",
            "slug": "JavaScript/Reference/Global_Objects/Number/MAX_SAFE_INTEGER",
            "summary": "The Number.MAX_SAFE_INTEGER constant represents the maximum safe integer in JavaScript (253 - 1).",
            "support": {
                "chrome": {
                    "version_added": "34"
                },
                "chrome_android": {
                    "version_added": "34"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "31"
                },
                "firefox_android": {
                    "version_added": "31"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "21"
                },
                "opera_android": {
                    "version_added": "21"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.MAX_SAFE_INTEGER"
        }
    ],
    "sec-number.max_value": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "MAX_VALUE",
            "slug": "JavaScript/Reference/Global_Objects/Number/MAX_VALUE",
            "summary": "The Number.MAX_VALUE property represents the maximum numeric value representable in JavaScript.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.MAX_VALUE"
        }
    ],
    "sec-number.min_safe_integer": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "MIN_SAFE_INTEGER",
            "slug": "JavaScript/Reference/Global_Objects/Number/MIN_SAFE_INTEGER",
            "summary": "The Number.MIN_SAFE_INTEGER constant represents the minimum safe integer in JavaScript (-(253 - 1)).",
            "support": {
                "chrome": {
                    "version_added": "34"
                },
                "chrome_android": {
                    "version_added": "34"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "31"
                },
                "firefox_android": {
                    "version_added": "31"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "21"
                },
                "opera_android": {
                    "version_added": "21"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.MIN_SAFE_INTEGER"
        }
    ],
    "sec-number.min_value": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "MIN_VALUE",
            "slug": "JavaScript/Reference/Global_Objects/Number/MIN_VALUE",
            "summary": "The Number.MIN_VALUE property represents the smallest positive numeric value representable in JavaScript.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.MIN_VALUE"
        }
    ],
    "sec-number.nan": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "NaN",
            "slug": "JavaScript/Reference/Global_Objects/Number/NaN",
            "summary": "The Number.NaN property represents Not-A-Number. Equivalent of NaN.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.NaN"
        }
    ],
    "sec-number.negative_infinity": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "NEGATIVE_INFINITY",
            "slug": "JavaScript/Reference/Global_Objects/Number/NEGATIVE_INFINITY",
            "summary": "The Number.NEGATIVE_INFINITY property represents the negative Infinity value.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.NEGATIVE_INFINITY"
        }
    ],
    "sec-number-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "Number",
            "slug": "JavaScript/Reference/Global_Objects/Number/Number",
            "summary": "The Number() constructor creates a Number object.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number() constructor"
        }
    ],
    "sec-number.positive_infinity": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "POSITIVE_INFINITY",
            "slug": "JavaScript/Reference/Global_Objects/Number/POSITIVE_INFINITY",
            "summary": "The Number.POSITIVE_INFINITY property represents the positive Infinity value.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.POSITIVE_INFINITY"
        }
    ],
    "sec-number.isfinite": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "isFinite",
            "slug": "JavaScript/Reference/Global_Objects/Number/isFinite",
            "summary": "The Number.isFinite() method determines whether the passed value is a finite number.",
            "support": {
                "chrome": {
                    "version_added": "19"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "16"
                },
                "firefox_android": {
                    "version_added": "16"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "15"
                },
                "opera_android": {
                    "version_added": "14"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.isFinite()"
        }
    ],
    "sec-number.isinteger": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "isInteger",
            "slug": "JavaScript/Reference/Global_Objects/Number/isInteger",
            "summary": "The Number.isInteger() method determines whether the passed value is an integer.",
            "support": {
                "chrome": {
                    "version_added": "34"
                },
                "chrome_android": {
                    "version_added": "34"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "16"
                },
                "firefox_android": {
                    "version_added": "16"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "21"
                },
                "opera_android": {
                    "version_added": "21"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.isInteger()"
        }
    ],
    "sec-number.isnan": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "isNaN",
            "slug": "JavaScript/Reference/Global_Objects/Number/isNaN",
            "summary": "The Number.isNaN() method determines whether the passed value is NaN and its type is Number. It is a more robust version of the original, global isNaN().",
            "support": {
                "chrome": {
                    "version_added": "25"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "15"
                },
                "opera_android": {
                    "version_added": "14"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.isNaN()"
        }
    ],
    "sec-number.issafeinteger": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "isSafeInteger",
            "slug": "JavaScript/Reference/Global_Objects/Number/isSafeInteger",
            "summary": "The Number.isSafeInteger() method determines whether the provided value is a number that is a safe integer.",
            "support": {
                "chrome": {
                    "version_added": "34"
                },
                "chrome_android": {
                    "version_added": "34"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "32"
                },
                "firefox_android": {
                    "version_added": "32"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "21"
                },
                "opera_android": {
                    "version_added": "21"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.isSafeInteger()"
        }
    ],
    "sec-number.parsefloat": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "parseFloat",
            "slug": "JavaScript/Reference/Global_Objects/Number/parseFloat",
            "summary": "The Number.parseFloat() method parses an argument and returns a floating point number. If a number cannot be parsed from the argument, it returns NaN.",
            "support": {
                "chrome": {
                    "version_added": "34"
                },
                "chrome_android": {
                    "version_added": "34"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "21"
                },
                "opera_android": {
                    "version_added": "21"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.parseFloat()"
        }
    ],
    "sec-number.parseint": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "parseInt",
            "slug": "JavaScript/Reference/Global_Objects/Number/parseInt",
            "summary": "The Number.parseInt() method parses a string argument and returns an integer of the specified radix or base.",
            "support": {
                "chrome": {
                    "version_added": "34"
                },
                "chrome_android": {
                    "version_added": "34"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "21"
                },
                "opera_android": {
                    "version_added": "21"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.parseInt()"
        }
    ],
    "sec-number.prototype.toexponential": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "toExponential",
            "slug": "JavaScript/Reference/Global_Objects/Number/toExponential",
            "summary": "The toExponential() method returns a string representing the Number object in exponential notation.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "7"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "2"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.prototype.toExponential()"
        }
    ],
    "sec-number.prototype.tofixed": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "toFixed",
            "slug": "JavaScript/Reference/Global_Objects/Number/toFixed",
            "summary": "The toFixed() method formats a number using fixed-point notation.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "7"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "2"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.prototype.toFixed()"
        }
    ],
    "sec-number.prototype.tolocalestring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "toLocaleString",
            "slug": "JavaScript/Reference/Global_Objects/Number/toLocaleString",
            "summary": "The toLocaleString() method returns a string with a language-sensitive representation of this number.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5",
                    "notes": "In Internet Explorer 11, numbers are rounded to 15 decimal digits. For example, <code>(1000000000000005).toLocaleString('en-US')</code> returns <code>\"1,000,000,000,000,010\"</code>."
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.prototype.toLocaleString()"
        }
    ],
    "sec-number.prototype.toprecision": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "toPrecision",
            "slug": "JavaScript/Reference/Global_Objects/Number/toPrecision",
            "summary": "The toPrecision() method returns a string representing the Number object to the specified precision.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "7"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "2"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.prototype.toPrecision()"
        }
    ],
    "sec-number.prototype.tostring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "toString",
            "slug": "JavaScript/Reference/Global_Objects/Number/toString",
            "summary": "The toString() method returns a string representing the specified Number object.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.prototype.toString()"
        }
    ],
    "sec-number.prototype.valueof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "valueOf",
            "slug": "JavaScript/Reference/Global_Objects/Number/valueOf",
            "summary": "The valueOf() method returns the wrapped primitive value of a Number object.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Number.prototype.valueOf()"
        }
    ],
    "sec-number-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Number.json",
            "name": "Number",
            "slug": "JavaScript/Reference/Global_Objects/Number",
            "summary": "The Number constructor contains constants and methods for working with numbers. Values of other types can be converted to numbers using the Number() function.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "es6-number",
                "title": "ES6 Number"
            },
            "title": "Number"
        }
    ],
    "sec-object-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "Object",
            "slug": "JavaScript/Reference/Global_Objects/Object/Object",
            "summary": "The Object constructor creates an object wrapper for the given value.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object() constructor"
        }
    ],
    "sec-object.assign": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "assign",
            "slug": "JavaScript/Reference/Global_Objects/Object/assign",
            "summary": "The Object.assign() method copies all enumerable own properties from one or more source objects to a target object. It returns the target object.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": {
                    "version_added": "34"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.assign()"
        }
    ],
    "sec-object.prototype.constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "constructor",
            "slug": "JavaScript/Reference/Global_Objects/Object/constructor",
            "summary": "The constructor property returns a reference to the Object constructor function that created the instance object. Note that the value of this property is a reference to the function itself, not a string containing the function's name.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.prototype.constructor"
        }
    ],
    "sec-object.create": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "create",
            "slug": "JavaScript/Reference/Global_Objects/Object/create",
            "summary": "The Object.create() method creates a new object, using an existing object as the prototype of the newly created object.",
            "support": {
                "chrome": {
                    "version_added": "5"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "5"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.create()"
        }
    ],
    "sec-object.defineproperties": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "defineProperties",
            "slug": "JavaScript/Reference/Global_Objects/Object/defineProperties",
            "summary": "The Object.defineProperties() method defines new or modifies existing properties directly on an object, returning the object.",
            "support": {
                "chrome": {
                    "version_added": "5"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "5"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.defineProperties()"
        }
    ],
    "sec-object.defineproperty": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "defineProperty",
            "slug": "JavaScript/Reference/Global_Objects/Object/defineProperty",
            "summary": "The static method Object.defineProperty() defines a new property directly on an object, or modifies an existing property on an object, and returns the object.",
            "support": {
                "chrome": {
                    "version_added": "5"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": [
                    {
                        "version_added": "9"
                    },
                    {
                        "version_added": "8",
                        "partial_implementation": true,
                        "notes": "In Internet Explorer 8, this was only supported on DOM objects and with some non-standard behaviors.  This was later fixed in Internet Explorer 9."
                    }
                ],
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1",
                    "notes": "Also supported in Safari 5, but not on DOM objects."
                },
                "safari_ios": {
                    "version_added": "6",
                    "notes": "Also supported in Safari for iOS 4.2, but not on DOM objects."
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.defineProperty()"
        }
    ],
    "sec-object.entries": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "entries",
            "slug": "JavaScript/Reference/Global_Objects/Object/entries",
            "summary": "The Object.entries() method returns an array of a given object's own enumerable string-keyed property [key, value] pairs, in the same order as that provided by a for...in loop. (The only important difference is that a for...in loop enumerates properties in the prototype chain as well).",
            "support": {
                "chrome": {
                    "version_added": "54"
                },
                "chrome_android": {
                    "version_added": "54"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "47"
                },
                "firefox_android": {
                    "version_added": "47"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "7.0.0"
                    },
                    {
                        "version_added": "6.5.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "41"
                },
                "opera_android": {
                    "version_added": "41"
                },
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": {
                    "version_added": "10.3"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "54"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "object-entries",
                "title": "Object.entries"
            },
            "title": "Object.entries()"
        }
    ],
    "sec-object.freeze": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "freeze",
            "slug": "JavaScript/Reference/Global_Objects/Object/freeze",
            "summary": "The Object.freeze() method freezes an object. A frozen object can no longer be changed; freezing an object prevents new properties from being added to it, existing properties from being removed, prevents changing the enumerability, configurability, or writability of existing properties, and prevents the values of existing properties from being changed. In addition, freezing an object also prevents its prototype from being changed. freeze() returns the same object that was passed in.",
            "support": {
                "chrome": {
                    "version_added": "6"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "6"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.freeze()"
        }
    ],
    "sec-object.fromentries": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "fromEntries",
            "slug": "JavaScript/Reference/Global_Objects/Object/fromEntries",
            "summary": "The Object.fromEntries() method transforms a list of key-value pairs into an object.",
            "support": {
                "chrome": {
                    "version_added": "73"
                },
                "chrome_android": {
                    "version_added": "73"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "63"
                },
                "firefox_android": {
                    "version_added": "63"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "12.0.0"
                },
                "opera": {
                    "version_added": "60"
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": "73"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.fromEntries()"
        }
    ],
    "sec-object.getownpropertydescriptor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "getOwnPropertyDescriptor",
            "slug": "JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptor",
            "summary": "The Object.getOwnPropertyDescriptor() method returns an object describing the configuration of a specific property on a given object (that is, one directly present on an object and not in the object's prototype chain). The object returned is mutable but mutating it has no effect on the original property's configuration.",
            "support": {
                "chrome": {
                    "version_added": "5"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": [
                    {
                        "version_added": "9"
                    },
                    {
                        "version_added": "8",
                        "partial_implementation": true,
                        "notes": "In Internet Explorer 8, this was only supported on DOM objects and with some non-standard behaviors.  This was later fixed in Internet Explorer 9."
                    }
                ],
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "5"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.getOwnPropertyDescriptor()"
        }
    ],
    "sec-object.getownpropertydescriptors": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "getOwnPropertyDescriptors",
            "slug": "JavaScript/Reference/Global_Objects/Object/getOwnPropertyDescriptors",
            "summary": "The Object.getOwnPropertyDescriptors() method returns all own property descriptors of a given object.",
            "support": {
                "chrome": {
                    "version_added": "54"
                },
                "chrome_android": {
                    "version_added": "54"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": {
                    "version_added": "50"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "7.0.0"
                    },
                    {
                        "version_added": "6.5.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "41"
                },
                "opera_android": {
                    "version_added": "41"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "54"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.getOwnPropertyDescriptors()"
        }
    ],
    "sec-object.getownpropertynames": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "getOwnPropertyNames",
            "slug": "JavaScript/Reference/Global_Objects/Object/getOwnPropertyNames",
            "summary": "The Object.getOwnPropertyNames() method returns an array of all properties (including non-enumerable properties except for those which use Symbol) found directly in a given object.",
            "support": {
                "chrome": {
                    "version_added": "5"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "5"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.getOwnPropertyNames()"
        }
    ],
    "sec-object.getownpropertysymbols": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "getOwnPropertySymbols",
            "slug": "JavaScript/Reference/Global_Objects/Object/getOwnPropertySymbols",
            "summary": "The Object.getOwnPropertySymbols() method returns an array of all symbol properties found directly upon a given object.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": {
                    "version_added": "36"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.getOwnPropertySymbols()"
        }
    ],
    "sec-object.getprototypeof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "getPrototypeOf",
            "slug": "JavaScript/Reference/Global_Objects/Object/getPrototypeOf",
            "summary": "The Object.getPrototypeOf() method returns the prototype (i.e. the value of the internal [[Prototype]] property) of the specified object.",
            "support": {
                "chrome": {
                    "version_added": "5"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "5"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.getPrototypeOf()"
        }
    ],
    "sec-object.prototype.hasownproperty": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "hasOwnProperty",
            "slug": "JavaScript/Reference/Global_Objects/Object/hasOwnProperty",
            "summary": "The hasOwnProperty() method returns a boolean indicating whether the object has the specified property as its own property (as opposed to inheriting it).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.prototype.hasOwnProperty()"
        }
    ],
    "sec-object.is": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "is",
            "slug": "JavaScript/Reference/Global_Objects/Object/is",
            "summary": "The Object.is() method determines whether two values are the same value.",
            "support": {
                "chrome": {
                    "version_added": "30"
                },
                "chrome_android": {
                    "version_added": "30"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "22"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "17"
                },
                "opera_android": {
                    "version_added": "18"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.is()"
        }
    ],
    "sec-object.isextensible": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "isExtensible",
            "slug": "JavaScript/Reference/Global_Objects/Object/isExtensible",
            "summary": "The Object.isExtensible() method determines if an object is extensible (whether it can have new properties added to it).",
            "support": {
                "chrome": {
                    "version_added": "6"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "6"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.isExtensible()"
        }
    ],
    "sec-object.isfrozen": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "isFrozen",
            "slug": "JavaScript/Reference/Global_Objects/Object/isFrozen",
            "summary": "The Object.isFrozen() determines if an object is frozen.",
            "support": {
                "chrome": {
                    "version_added": "6"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "6"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.isFrozen()"
        }
    ],
    "sec-object.prototype.isprototypeof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "isPrototypeOf",
            "slug": "JavaScript/Reference/Global_Objects/Object/isPrototypeOf",
            "summary": "The isPrototypeOf() method checks if an object exists in another object's prototype chain.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.prototype.isPrototypeOf()"
        }
    ],
    "sec-object.issealed": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "isSealed",
            "slug": "JavaScript/Reference/Global_Objects/Object/isSealed",
            "summary": "The Object.isSealed() method determines if an object is sealed.",
            "support": {
                "chrome": {
                    "version_added": "6"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "6"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.isSealed()"
        }
    ],
    "sec-object.keys": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "keys",
            "slug": "JavaScript/Reference/Global_Objects/Object/keys",
            "summary": "The Object.keys() method returns an array of a given object's own enumerable property names, iterated in the same order that a normal loop would.",
            "support": {
                "chrome": {
                    "version_added": "5"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "5"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.keys()"
        }
    ],
    "sec-object.preventextensions": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "preventExtensions",
            "slug": "JavaScript/Reference/Global_Objects/Object/preventExtensions",
            "summary": "The Object.preventExtensions() method prevents new properties from ever being added to an object (i.e. prevents future extensions to the object).",
            "support": {
                "chrome": {
                    "version_added": "6"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "6"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.preventExtensions()"
        }
    ],
    "sec-object.prototype.propertyisenumerable": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "propertyIsEnumerable",
            "slug": "JavaScript/Reference/Global_Objects/Object/propertyIsEnumerable",
            "summary": "The propertyIsEnumerable() method returns a Boolean indicating whether the specified property is enumerable and is the object's own property.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.prototype.propertyIsEnumerable()"
        }
    ],
    "sec-object.seal": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "seal",
            "slug": "JavaScript/Reference/Global_Objects/Object/seal",
            "summary": "The Object.seal() method seals an object, preventing new properties from being added to it and marking all existing properties as non-configurable. Values of present properties can still be changed as long as they are writable.",
            "support": {
                "chrome": {
                    "version_added": "6"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "6"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.seal()"
        }
    ],
    "sec-object.setprototypeof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "setPrototypeOf",
            "slug": "JavaScript/Reference/Global_Objects/Object/setPrototypeOf",
            "summary": "The Object.setPrototypeOf() method sets the prototype (i.e., the internal [[Prototype]] property) of a specified object to another object or null.",
            "support": {
                "chrome": {
                    "version_added": "34"
                },
                "chrome_android": {
                    "version_added": "34"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "31"
                },
                "firefox_android": {
                    "version_added": "31"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "21"
                },
                "opera_android": {
                    "version_added": "21"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.setPrototypeOf()"
        }
    ],
    "sec-object.prototype.tolocalestring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "toLocaleString",
            "slug": "JavaScript/Reference/Global_Objects/Object/toLocaleString",
            "summary": "The toLocaleString() method returns a string representing the object. This method is meant to be overridden by derived objects for locale-specific purposes.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.prototype.toLocaleString()"
        }
    ],
    "sec-object.prototype.tostring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "toString",
            "slug": "JavaScript/Reference/Global_Objects/Object/toString",
            "summary": "The toString() method returns a string representing the object.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.prototype.toString()"
        }
    ],
    "sec-object.prototype.valueof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "valueOf",
            "slug": "JavaScript/Reference/Global_Objects/Object/valueOf",
            "summary": "The valueOf() method returns the primitive value of the specified object.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object.prototype.valueOf()"
        }
    ],
    "sec-object.values": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "values",
            "slug": "JavaScript/Reference/Global_Objects/Object/values",
            "summary": "The Object.values() method returns an array of a given object's own enumerable property values, in the same order as that provided by a for...in loop. (The only difference is that a for...in loop enumerates properties in the prototype chain as well.)",
            "support": {
                "chrome": {
                    "version_added": "54"
                },
                "chrome_android": {
                    "version_added": "54"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "47"
                },
                "firefox_android": {
                    "version_added": "47"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "7.0.0"
                    },
                    {
                        "version_added": "6.5.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "41"
                },
                "opera_android": {
                    "version_added": "41"
                },
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": {
                    "version_added": "10.3"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "54"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "object-values",
                "title": "Object.values method"
            },
            "title": "Object.values()"
        }
    ],
    "sec-object-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Object.json",
            "name": "Object",
            "slug": "JavaScript/Reference/Global_Objects/Object",
            "summary": "The Object class represents one of JavaScript's data types. It is used to store various keyed collections and more complex entities. Objects can be created using the Object() constructor or the object initializer / literal syntax.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object"
        }
    ],
    "sec-promise-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Promise.json",
            "name": "Promise",
            "slug": "JavaScript/Reference/Global_Objects/Promise/Promise",
            "summary": "The Promise constructor is primarily used to wrap functions that do not already support promises.",
            "support": {
                "chrome": {
                    "version_added": "32"
                },
                "chrome_android": {
                    "version_added": "32"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "29",
                    "notes": "Constructor requires a new operator since version 37."
                },
                "firefox_android": {
                    "version_added": "29",
                    "notes": "Constructor requires a new operator since version 37."
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12",
                    "notes": "Constructor requires a new operator since version 4."
                },
                "opera": {
                    "version_added": "19"
                },
                "opera_android": {
                    "version_added": "19"
                },
                "safari": {
                    "version_added": "8",
                    "notes": "Constructor requires a new operator since version 10."
                },
                "safari_ios": {
                    "version_added": "8",
                    "notes": "Constructor requires a new operator since version 10."
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Promise() constructor"
        }
    ],
    "sec-promise.all": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Promise.json",
            "name": "all",
            "slug": "JavaScript/Reference/Global_Objects/Promise/all",
            "summary": "The Promise.all() method takes an iterable of promises as an input, and returns a single Promise that resolves to an array of the results of the input promises. This returned promise will resolve when all of the input's promises have resolved, or if the input iterable contains no promises. It rejects immediately upon any of the input promises rejecting or non-promises throwing an error, and will reject with this first rejection message / error.",
            "support": {
                "chrome": {
                    "version_added": "32"
                },
                "chrome_android": {
                    "version_added": "32"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "29"
                },
                "firefox_android": {
                    "version_added": "29"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "19"
                },
                "opera_android": {
                    "version_added": "19"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Promise.all()"
        }
    ],
    "sec-promise.prototype.catch": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Promise.json",
            "name": "catch",
            "slug": "JavaScript/Reference/Global_Objects/Promise/catch",
            "summary": "The catch() method returns a Promise and deals with rejected cases only. It behaves the same as calling Promise.prototype.then(undefined, onRejected) (in fact, calling obj.catch(onRejected) internally calls obj.then(undefined, onRejected)). This means that you have to provide an onRejected function even if you want to fall back to an undefined result value - for example obj.catch(() => {}).",
            "support": {
                "chrome": {
                    "version_added": "32"
                },
                "chrome_android": {
                    "version_added": "32"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "29"
                },
                "firefox_android": {
                    "version_added": "29"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "19"
                },
                "opera_android": {
                    "version_added": "19"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Promise.prototype.catch()"
        }
    ],
    "sec-promise.prototype.finally": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Promise.json",
            "name": "finally",
            "slug": "JavaScript/Reference/Global_Objects/Promise/finally",
            "summary": "The finally() method returns a Promise. When the promise is settled, i.e either fulfilled or rejected, the specified callback function is executed. This provides a way for code to be run whether the promise was fulfilled successfully or rejected once the Promise has been dealt with.",
            "support": {
                "chrome": {
                    "version_added": "63"
                },
                "chrome_android": {
                    "version_added": "63"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "58"
                },
                "firefox_android": {
                    "version_added": "58"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "10.0.0"
                },
                "opera": {
                    "version_added": "50"
                },
                "opera_android": {
                    "version_added": "46"
                },
                "safari": {
                    "version_added": "11.1"
                },
                "safari_ios": {
                    "version_added": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": "8.0"
                },
                "webview_android": {
                    "version_added": "63"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "promise-finally",
                "title": "Promise.prototype.finally"
            },
            "title": "Promise.prototype.finally()"
        }
    ],
    "sec-promise.race": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Promise.json",
            "name": "race",
            "slug": "JavaScript/Reference/Global_Objects/Promise/race",
            "summary": "The Promise.race() method returns a promise that fulfills or rejects as soon as one of the promises in an iterable fulfills or rejects, with the value or reason from that promise.",
            "support": {
                "chrome": {
                    "version_added": "32"
                },
                "chrome_android": {
                    "version_added": "32"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "29"
                },
                "firefox_android": {
                    "version_added": "29"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "19"
                },
                "opera_android": {
                    "version_added": "19"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Promise.race()"
        }
    ],
    "sec-promise.reject": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Promise.json",
            "name": "reject",
            "slug": "JavaScript/Reference/Global_Objects/Promise/reject",
            "summary": "The Promise.reject() method returns a Promise object that is rejected with a given reason.",
            "support": {
                "chrome": {
                    "version_added": "32"
                },
                "chrome_android": {
                    "version_added": "32"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "29"
                },
                "firefox_android": {
                    "version_added": "29"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "19"
                },
                "opera_android": {
                    "version_added": "19"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Promise.reject()"
        }
    ],
    "sec-promise.resolve": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Promise.json",
            "name": "resolve",
            "slug": "JavaScript/Reference/Global_Objects/Promise/resolve",
            "summary": "The Promise.resolve() method returns a Promise object that is resolved with a given value. If the value is a promise, that promise is returned; if the value is a thenable (i.e. has a \"then\" method), the returned promise will \"follow\" that thenable, adopting its eventual state; otherwise the returned promise will be fulfilled with the value. This function flattens nested layers of promise-like objects (e.g. a promise that resolves to a promise that resolves to something) into a single layer.",
            "support": {
                "chrome": {
                    "version_added": "32"
                },
                "chrome_android": {
                    "version_added": "32"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "29"
                },
                "firefox_android": {
                    "version_added": "29"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "19"
                },
                "opera_android": {
                    "version_added": "19"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Promise.resolve()"
        }
    ],
    "sec-promise.prototype.then": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Promise.json",
            "name": "then",
            "slug": "JavaScript/Reference/Global_Objects/Promise/then",
            "summary": "The then() method returns a Promise. It takes up to two arguments: callback functions for the success and failure cases of the Promise.",
            "support": {
                "chrome": {
                    "version_added": "32"
                },
                "chrome_android": {
                    "version_added": "32"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "29"
                },
                "firefox_android": {
                    "version_added": "29"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "19"
                },
                "opera_android": {
                    "version_added": "19"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Promise.prototype.then()"
        }
    ],
    "sec-promise-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Promise.json",
            "name": "Promise",
            "slug": "JavaScript/Reference/Global_Objects/Promise",
            "summary": "The Promise object represents the eventual completion (or failure) of an asynchronous operation and its resulting value.",
            "support": {
                "chrome": {
                    "version_added": "32"
                },
                "chrome_android": {
                    "version_added": "32"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "29"
                },
                "firefox_android": {
                    "version_added": "29"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "19"
                },
                "opera_android": {
                    "version_added": "19"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "promises",
                "title": "Promises"
            },
            "title": "Promise"
        }
    ],
    "sec-proxy-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "Proxy",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/Proxy",
            "summary": "The Proxy() constructor is used to create Proxy objects.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "18"
                },
                "firefox_android": {
                    "version_added": "18"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Proxy() constructor"
        }
    ],
    "sec-proxy-object-internal-methods-and-internal-slots-call-thisargument-argumentslist": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "apply",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/handler/apply",
            "summary": "The handler.apply() method is a trap for a function call.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "18"
                },
                "firefox_android": {
                    "version_added": "18"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "handler.apply()"
        }
    ],
    "sec-proxy-object-internal-methods-and-internal-slots-construct-argumentslist-newtarget": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "construct",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/handler/construct",
            "summary": "The handler.construct() method is a trap for the new operator. In order for the new operation to be valid on the resulting Proxy object, the target used to initialize the proxy must itself have a [[Construct]] internal method (i.e. new target must be valid).",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "18"
                },
                "firefox_android": {
                    "version_added": "18"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "handler.construct()"
        }
    ],
    "sec-proxy-object-internal-methods-and-internal-slots-defineownproperty-p-desc": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "defineProperty",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/handler/defineProperty",
            "summary": "The handler.defineProperty() method is a trap for Object.defineProperty().",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "18"
                },
                "firefox_android": {
                    "version_added": "18"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "handler.defineProperty()"
        }
    ],
    "sec-proxy-object-internal-methods-and-internal-slots-delete-p": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "deleteProperty",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/handler/deleteProperty",
            "summary": "The handler.deleteProperty() method is a trap for the delete operator.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "18"
                },
                "firefox_android": {
                    "version_added": "18"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "handler.deleteProperty()"
        }
    ],
    "sec-proxy-object-internal-methods-and-internal-slots-get-p-receiver": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "get",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/handler/get",
            "summary": "The handler.get() method is a trap for getting a property value.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "18"
                },
                "firefox_android": {
                    "version_added": "18"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "handler.get()"
        }
    ],
    "sec-proxy-object-internal-methods-and-internal-slots-getownproperty-p": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "getOwnPropertyDescriptor",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/handler/getOwnPropertyDescriptor",
            "summary": "The handler.getOwnPropertyDescriptor() method is a trap for Object.getOwnPropertyDescriptor().",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "18"
                },
                "firefox_android": {
                    "version_added": "18"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "handler.getOwnPropertyDescriptor()"
        }
    ],
    "sec-proxy-object-internal-methods-and-internal-slots-getprototypeof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "getPrototypeOf",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/handler/getPrototypeOf",
            "summary": "The handler.getPrototypeOf() method is a trap for the [[GetPrototypeOf]] internal method.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": {
                    "version_added": "49"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "handler.getPrototypeOf()"
        }
    ],
    "sec-proxy-object-internal-methods-and-internal-slots-hasproperty-p": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "has",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/handler/has",
            "summary": "The handler.has() method is a trap for the in operator.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "18"
                },
                "firefox_android": {
                    "version_added": "18"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "handler.has()"
        }
    ],
    "sec-proxy-object-internal-methods-and-internal-slots-isextensible": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "isExtensible",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/handler/isExtensible",
            "summary": "The handler.isExtensible() method is a trap for Object.isExtensible().",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "31"
                },
                "firefox_android": {
                    "version_added": "31"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "handler.isExtensible()"
        }
    ],
    "sec-proxy-object-internal-methods-and-internal-slots-ownpropertykeys": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "ownKeys",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/handler/ownKeys",
            "summary": "The handler.ownKeys() method is a trap for Reflect.ownKeys().",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "18",
                    "notes": "In Firefox 42, the implementation got updated to reflect the final ES2015 specification: The result is now checked if it is an array and if the array elements are either of type string or of type symbol. Enumerating duplicate own property names is not a failure anymore."
                },
                "firefox_android": {
                    "version_added": "18",
                    "notes": "In Firefox 42, the implementation got updated to reflect the final ES2015 specification: The result is now checked if it is an array and if the array elements are either of type string or of type symbol. Enumerating duplicate own property names is not a failure anymore."
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "handler.ownKeys()"
        }
    ],
    "sec-proxy-object-internal-methods-and-internal-slots-preventextensions": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "preventExtensions",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/handler/preventExtensions",
            "summary": "The handler.preventExtensions() method is a trap for Object.preventExtensions().",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "22"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "handler.preventExtensions()"
        }
    ],
    "sec-proxy-object-internal-methods-and-internal-slots-set-p-v-receiver": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "set",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/handler/set",
            "summary": "The handler.set() method is a trap for setting a property value.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "18"
                },
                "firefox_android": {
                    "version_added": "18"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "handler.set()"
        }
    ],
    "sec-proxy-object-internal-methods-and-internal-slots-setprototypeof-v": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "setPrototypeOf",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/handler/setPrototypeOf",
            "summary": "The handler.setPrototypeOf() method is a trap for Object.setPrototypeOf().",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": {
                    "version_added": "49"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "handler.setPrototypeOf()"
        }
    ],
    "sec-proxy.revocable": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "revocable",
            "slug": "JavaScript/Reference/Global_Objects/Proxy/revocable",
            "summary": "The Proxy.revocable() method is used to create a revocable Proxy object.",
            "support": {
                "chrome": {
                    "version_added": "63"
                },
                "chrome_android": {
                    "version_added": "63"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": {
                    "version_added": "34"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "50"
                },
                "opera_android": {
                    "version_added": "46"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "8.0"
                },
                "webview_android": {
                    "version_added": "63"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Proxy.revocable()"
        }
    ],
    "sec-proxy-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Proxy.json",
            "name": "Proxy",
            "slug": "JavaScript/Reference/Global_Objects/Proxy",
            "summary": "The Proxy object enables you to create a proxy for another object, which can intercept and redefine fundamental operations for that object.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "18"
                },
                "firefox_android": {
                    "version_added": "18"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "proxy",
                "title": "Proxy object"
            },
            "title": "Proxy"
        }
    ],
    "sec-native-error-types-used-in-this-standard-rangeerror": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RangeError.json",
            "name": "RangeError",
            "slug": "JavaScript/Reference/Global_Objects/RangeError",
            "summary": "The RangeError object indicates an error when a value is not in the set or range of allowed values.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RangeError"
        }
    ],
    "sec-native-error-types-used-in-this-standard-referenceerror": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/ReferenceError.json",
            "name": "ReferenceError",
            "slug": "JavaScript/Reference/Global_Objects/ReferenceError",
            "summary": "The ReferenceError object represents an error when a non-existent variable is referenced.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReferenceError"
        }
    ],
    "sec-reflect.apply": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Reflect.json",
            "name": "apply",
            "slug": "JavaScript/Reference/Global_Objects/Reflect/apply",
            "summary": "The static Reflect.apply() method calls a target function with arguments as specified.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Reflect.apply()"
        }
    ],
    "sec-reflect.construct": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Reflect.json",
            "name": "construct",
            "slug": "JavaScript/Reference/Global_Objects/Reflect/construct",
            "summary": "The static Reflect.construct() method acts like the new operator, but as a function. It is equivalent to calling new target(...args). It gives also the added option to specify a different prototype.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Reflect.construct()"
        }
    ],
    "sec-reflect.defineproperty": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Reflect.json",
            "name": "defineProperty",
            "slug": "JavaScript/Reference/Global_Objects/Reflect/defineProperty",
            "summary": "The static Reflect.defineProperty() method is like Object.defineProperty() but returns a Boolean.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Reflect.defineProperty()"
        }
    ],
    "sec-reflect.deleteproperty": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Reflect.json",
            "name": "deleteProperty",
            "slug": "JavaScript/Reference/Global_Objects/Reflect/deleteProperty",
            "summary": "The static Reflect.defineProperty() method is like Object.defineProperty() but returns a Boolean.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Reflect.deleteProperty()"
        }
    ],
    "sec-reflect.get": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Reflect.json",
            "name": "get",
            "slug": "JavaScript/Reference/Global_Objects/Reflect/get",
            "summary": "The static Reflect.get() method works like getting a property from an object (target[propertyKey]) as a function.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Reflect.get()"
        }
    ],
    "sec-reflect.getownpropertydescriptor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Reflect.json",
            "name": "getOwnPropertyDescriptor",
            "slug": "JavaScript/Reference/Global_Objects/Reflect/getOwnPropertyDescriptor",
            "summary": "The static Reflect.getOwnPropertyDescriptor() method is similar to Object.getOwnPropertyDescriptor(). It returns a property descriptor of the given property if it exists on the object, undefined otherwise.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Reflect.getOwnPropertyDescriptor()"
        }
    ],
    "sec-reflect.getprototypeof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Reflect.json",
            "name": "getPrototypeOf",
            "slug": "JavaScript/Reference/Global_Objects/Reflect/getPrototypeOf",
            "summary": "The static Reflect.getPrototypeOf() method is almost the same method as Object.getPrototypeOf(). It returns the prototype (i.e. the value of the internal [[Prototype]] property) of the specified object.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Reflect.getPrototypeOf()"
        }
    ],
    "sec-reflect.has": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Reflect.json",
            "name": "has",
            "slug": "JavaScript/Reference/Global_Objects/Reflect/has",
            "summary": "The static Reflect.has() method works like the in operator as a function.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Reflect.has()"
        }
    ],
    "sec-reflect.isextensible": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Reflect.json",
            "name": "isExtensible",
            "slug": "JavaScript/Reference/Global_Objects/Reflect/isExtensible",
            "summary": "The static Reflect.isExtensible() method determines if an object is extensible (whether it can have new properties added to it). It is similar to Object.isExtensible(), but with some differences.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Reflect.isExtensible()"
        }
    ],
    "sec-reflect.ownkeys": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Reflect.json",
            "name": "ownKeys",
            "slug": "JavaScript/Reference/Global_Objects/Reflect/ownKeys",
            "summary": "The static Reflect.ownKeys() method returns an array of the target object's own property keys.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Reflect.ownKeys()"
        }
    ],
    "sec-reflect.preventextensions": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Reflect.json",
            "name": "preventExtensions",
            "slug": "JavaScript/Reference/Global_Objects/Reflect/preventExtensions",
            "summary": "The static Reflect.preventExtensions() method prevents new properties from ever being added to an object (i.e., prevents future extensions to the object).",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Reflect.preventExtensions()"
        }
    ],
    "sec-reflect.set": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Reflect.json",
            "name": "set",
            "slug": "JavaScript/Reference/Global_Objects/Reflect/set",
            "summary": "The static Reflect.set() method works like setting a property on an object.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Reflect.set()"
        }
    ],
    "sec-reflect.setprototypeof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Reflect.json",
            "name": "setPrototypeOf",
            "slug": "JavaScript/Reference/Global_Objects/Reflect/setPrototypeOf",
            "summary": "The static Reflect.setPrototypeOf() method is the same method as Object.setPrototypeOf(), except for its return type. It sets the prototype (i.e., the internal [[Prototype]] property) of a specified object to another object or to null, and returns true if the operation was successful, or false otherwise",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Reflect.setPrototypeOf()"
        }
    ],
    "sec-reflect-object": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Reflect.json",
            "name": "Reflect",
            "slug": "JavaScript/Reference/Global_Objects/Reflect",
            "summary": "Reflect is a built-in object that provides methods for interceptable JavaScript operations. The methods are the same as those of proxy handlers. Reflect is not a function object, so it's not constructible.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Reflect"
        }
    ],
    "sec-regexp-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "RegExp",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/RegExp",
            "summary": "The RegExp constructor creates a regular expression object for matching text with a pattern.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp() constructor"
        }
    ],
    "sec-regexp.prototype.exec": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "exec",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/exec",
            "summary": "The exec() method executes a search for a match in a specified string. Returns a result array, or null.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype.exec()"
        }
    ],
    "sec-get-regexp.prototype.flags": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "flags",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/flags",
            "summary": "The flags property returns a string consisting of the flags of the current regular expression object.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": {
                    "version_added": "37"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "39"
                },
                "opera_android": {
                    "version_added": "41"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype.flags"
        }
    ],
    "sec-get-regexp.prototype.global": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "global",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/global",
            "summary": "The global property indicates whether or not the \"g\" flag is used with the regular expression. global is a read-only property of an individual regular expression instance.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype.global"
        }
    ],
    "sec-get-regexp.prototype.ignorecase": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "ignoreCase",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/ignoreCase",
            "summary": "The ignoreCase property indicates whether or not the \"i\" flag is used with the regular expression. ignoreCase is a read-only property of an individual regular expression instance.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype.ignoreCase"
        }
    ],
    "sec-properties-of-regexp-instances": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "lastIndex",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/lastIndex",
            "summary": "The lastIndex is a read/write integer property of regular expression instances that specifies the index at which to start the next match.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExpInstance.lastIndex"
        }
    ],
    "sec-get-regexp.prototype.multiline": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "multiline",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/multiline",
            "summary": "The multiline property indicates whether or not the \"m\" flag is used with the regular expression. multiline is a read-only property of an individual regular expression instance.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype.multiline"
        }
    ],
    "sec-get-regexp.prototype.source": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "source",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/source",
            "summary": "The source property returns a String containing the source text of the regexp object, and it doesn't contain the two forward slashes on both sides and any flags.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype.source"
        }
    ],
    "sec-get-regexp.prototype.sticky": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "sticky",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/sticky",
            "summary": "The sticky property reflects whether or not the search is sticky (searches in strings only from the index indicated by the lastIndex property of this regular expression). sticky is a read-only property of an individual regular expression object.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "3"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype.sticky"
        }
    ],
    "sec-regexp.prototype.test": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "test",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/test",
            "summary": "The test() method executes a search for a match between a regular expression and a specified string. Returns true or false.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype.test()"
        }
    ],
    "sec-regexp.prototype.tostring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "toString",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/toString",
            "summary": "The toString() method returns a string representing the regular expression.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype.toString()"
        }
    ],
    "sec-get-regexp.prototype.unicode": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "unicode",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/unicode",
            "summary": "The unicode property indicates whether or not the \"u\" flag is used with a regular expression. unicode is a read-only property of an individual regular expression instance.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": {
                    "version_added": "46"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype.unicode"
        }
    ],
    "sec-regexp.prototype-@@match": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "@@match",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/@@match",
            "summary": "The [@@match]() method retrieves the matches when matching a string against a regular expression.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": {
                    "version_added": "49"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype[@@match]()"
        }
    ],
    "sec-regexp-prototype-matchall": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "@@matchAll",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/@@matchAll",
            "summary": "The [@@matchAll] method returns all matches of the regular expression against a string.",
            "support": {
                "chrome": {
                    "version_added": "73"
                },
                "chrome_android": {
                    "version_added": "73"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "67"
                },
                "firefox_android": {
                    "version_added": "67"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "12.0.0"
                },
                "opera": {
                    "version_added": "60"
                },
                "opera_android": {
                    "version_added": "52"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "73"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype[@@matchAll]()"
        }
    ],
    "sec-regexp.prototype-@@replace": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "@@replace",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/@@replace",
            "summary": "The [@@replace]() method replaces some or all matches of a this pattern in a string by a replacement, and returns the result of the replacement as a new string. The replacement can be a string or a function to be called for each match.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": {
                    "version_added": "49"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype[@@replace]()"
        }
    ],
    "sec-regexp.prototype-@@search": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "@@search",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/@@search",
            "summary": "The [@@search]() method executes a search for a match between a this regular expression and a string.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": {
                    "version_added": "49"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype[@@search]()"
        }
    ],
    "sec-get-regexp-@@species": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "@@species",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/@@species",
            "summary": "The RegExp[@@species] accessor property returns the RegExp constructor.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": {
                    "version_added": "49"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.5.0"
                    },
                    {
                        "version_added": "6.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "get RegExp[@@species]"
        }
    ],
    "sec-regexp.prototype-@@split": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "@@split",
            "slug": "JavaScript/Reference/Global_Objects/RegExp/@@split",
            "summary": "The [@@split]() method splits a String object into an array of strings by separating the string into substrings.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": {
                    "version_added": "49"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp.prototype[@@split]()"
        }
    ],
    "sec-regexp-regular-expression-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/RegExp.json",
            "name": "RegExp",
            "slug": "JavaScript/Reference/Global_Objects/RegExp",
            "summary": "The RegExp object is used for matching text with a pattern.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RegExp"
        }
    ],
    "sec-set-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Set.json",
            "name": "Set",
            "slug": "JavaScript/Reference/Global_Objects/Set/Set",
            "summary": "The Set constructor lets you create Set objects that store unique values of any type, whether primitive values or object references.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "13"
                },
                "firefox_android": {
                    "version_added": "14"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Set() constructor"
        }
    ],
    "sec-set.prototype.add": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Set.json",
            "name": "add",
            "slug": "JavaScript/Reference/Global_Objects/Set/add",
            "summary": "The add() method appends a new element with a specified value to the end of a Set object.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "13"
                },
                "firefox_android": {
                    "version_added": "14"
                },
                "ie": {
                    "version_added": "11",
                    "partial_implementation": true,
                    "notes": "Returns 'undefined' instead of the 'Set' object."
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Set.prototype.add()"
        }
    ],
    "sec-set.prototype.clear": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Set.json",
            "name": "clear",
            "slug": "JavaScript/Reference/Global_Objects/Set/clear",
            "summary": "The clear() method removes all elements from a Set object.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "19"
                },
                "firefox_android": {
                    "version_added": "19"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Set.prototype.clear()"
        }
    ],
    "sec-set.prototype.delete": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Set.json",
            "name": "delete",
            "slug": "JavaScript/Reference/Global_Objects/Set/delete",
            "summary": "The delete() method removes the specified element from a Set object.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "13"
                },
                "firefox_android": {
                    "version_added": "14"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Set.prototype.delete()"
        }
    ],
    "sec-set.prototype.entries": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Set.json",
            "name": "entries",
            "slug": "JavaScript/Reference/Global_Objects/Set/entries",
            "summary": "The entries() method returns a new Iterator object that contains an array of [value, value] for each element in the Set object, in insertion order. For Set objects there is no key like in Map objects. However, to keep the API similar to the Map object, each entry has the same value for its key and value here, so that an array [value, value] is returned.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "24"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Set.prototype.entries()"
        }
    ],
    "sec-set.prototype.foreach": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Set.json",
            "name": "forEach",
            "slug": "JavaScript/Reference/Global_Objects/Set/forEach",
            "summary": "The forEach() method executes a provided function once for each value in the Set object, in insertion order.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Set.prototype.forEach()"
        }
    ],
    "sec-set.prototype.has": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Set.json",
            "name": "has",
            "slug": "JavaScript/Reference/Global_Objects/Set/has",
            "summary": "The has() method returns a boolean indicating whether an element with the specified value exists in a Set object or not.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "13"
                },
                "firefox_android": {
                    "version_added": "14"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Set.prototype.has()"
        }
    ],
    "sec-get-set.prototype.size": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Set.json",
            "name": "size",
            "slug": "JavaScript/Reference/Global_Objects/Set/size",
            "summary": "The size accessor property returns the number of (unique) elements in a Set object.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "19",
                    "notes": "From Firefox 13 to Firefox 18, the <code>size</code> property was implemented as a <code>Set.prototype.size()</code> method, this has been changed to a property in later versions conform to the ECMAScript 2015 specification."
                },
                "firefox_android": {
                    "version_added": "19",
                    "notes": "From Firefox 13 to Firefox 18, the <code>size</code> property was implemented as a <code>Set.prototype.size()</code> method, this has been changed to a property in later versions conform to the ECMAScript 2015 specification."
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Set.prototype.size"
        }
    ],
    "sec-set.prototype.values": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Set.json",
            "name": "values",
            "slug": "JavaScript/Reference/Global_Objects/Set/values",
            "summary": "The values() method returns a new Iterator object that contains the values for each element in the Set object in insertion order.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "24"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Set.prototype.values()"
        }
    ],
    "sec-set.prototype-@@iterator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Set.json",
            "name": "@@iterator",
            "slug": "JavaScript/Reference/Global_Objects/Set/@@iterator",
            "summary": "The initial value of the @@iterator property is the same function object as the initial value of the values property.",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": {
                    "version_added": "43"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "36"
                    },
                    {
                        "alternative_name": "@@iterator",
                        "version_added": "27",
                        "version_removed": "36",
                        "notes": "A placeholder property named <code>@@iterator</code> is used."
                    },
                    {
                        "alternative_name": "iterator",
                        "version_added": "17",
                        "version_removed": "27",
                        "notes": "A placeholder property named <code>iterator</code> is used."
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "36"
                    },
                    {
                        "alternative_name": "@@iterator",
                        "version_added": "27",
                        "version_removed": "36",
                        "notes": "A placeholder property named <code>@@iterator</code> is used."
                    },
                    {
                        "alternative_name": "iterator",
                        "version_added": "17",
                        "version_removed": "27",
                        "notes": "A placeholder property named <code>iterator</code> is used."
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "30"
                },
                "opera_android": {
                    "version_added": "30"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Set.prototype[@@iterator]()"
        }
    ],
    "sec-get-set-@@species": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Set.json",
            "name": "@@species",
            "slug": "JavaScript/Reference/Global_Objects/Set/@@species",
            "summary": "The Set[Symbol.species] accessor property returns the Set constructor.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "41"
                },
                "firefox_android": {
                    "version_added": "41"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.5.0"
                    },
                    {
                        "version_added": "6.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "38"
                },
                "opera_android": {
                    "version_added": "41"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "get Set[@@species]"
        }
    ],
    "sec-set-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Set.json",
            "name": "Set",
            "slug": "JavaScript/Reference/Global_Objects/Set",
            "summary": "The Set object lets you store unique values of any type, whether primitive values or object references.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "13"
                },
                "firefox_android": {
                    "version_added": "14"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Set"
        }
    ],
    "sec-sharedarraybuffer-constructor": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "javascript/builtins/SharedArrayBuffer.json",
            "name": "SharedArrayBuffer",
            "slug": "JavaScript/Reference/Global_Objects/SharedArrayBuffer/SharedArrayBuffer",
            "summary": "The SharedArrayBuffer() constructor is used to create a SharedArrayBuffer object representing a generic, fixed-length raw binary data buffer, similar to the ArrayBuffer object.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "SharedArrayBuffer() constructor"
        }
    ],
    "sec-get-sharedarraybuffer.prototype.bytelength": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "javascript/builtins/SharedArrayBuffer.json",
            "name": "byteLength",
            "slug": "JavaScript/Reference/Global_Objects/SharedArrayBuffer/byteLength",
            "summary": "The byteLength accessor property represents the length of an SharedArrayBuffer in bytes.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "SharedArrayBuffer.prototype.byteLength"
        }
    ],
    "sec-sharedarraybuffer.prototype.slice": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "javascript/builtins/SharedArrayBuffer.json",
            "name": "slice",
            "slug": "JavaScript/Reference/Global_Objects/SharedArrayBuffer/slice",
            "summary": "The SharedArrayBuffer.prototype.slice() method returns a new SharedArrayBuffer whose contents are a copy of this SharedArrayBuffer's bytes from begin, inclusive, up to end, exclusive. If either begin or end is negative, it refers to an index from the end of the array, as opposed to from the beginning. This method has the same algorithm as Array.prototype.slice().",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "title": "SharedArrayBuffer.prototype.slice()"
        }
    ],
    "sec-sharedarraybuffer-objects": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "javascript/builtins/SharedArrayBuffer.json",
            "name": "SharedArrayBuffer",
            "slug": "JavaScript/Reference/Global_Objects/SharedArrayBuffer",
            "summary": "The SharedArrayBuffer object is used to represent a generic, fixed-length raw binary data buffer, similar to the ArrayBuffer object, but in a way that they can be used to create views on shared memory. Unlike an ArrayBuffer, a SharedArrayBuffer cannot become detached.",
            "support": {
                "chrome": [
                    {
                        "version_added": "68"
                    },
                    {
                        "version_added": "60",
                        "version_removed": "63",
                        "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ],
                "chrome_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "57",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Support was disabled by default to mitigate <a href='https://blog.mozilla.org/security/2018/01/03/mitigations-landing-new-class-timing-attack/'>speculative execution side-channel attacks (Mozilla Security Blog)</a>."
                    },
                    {
                        "version_added": "55",
                        "version_removed": "57"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "javascript.options.shared_memory",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.10.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10.1",
                    "version_removed": "11"
                },
                "safari_ios": {
                    "version_added": "10.3",
                    "version_removed": "11"
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "webview_android": {
                    "version_added": "60",
                    "version_removed": "63",
                    "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This is intended as a temporary measure until other mitigations are in place."
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "63",
                        "notes": "Chrome disabled SharedArrayBuffer on January 5, 2018 to help reduce the efficacy of <a href='https://www.chromium.org/Home/chromium-security/ssca'>speculative side-channel attacks</a>. This was a temporary removal while mitigations were put in place."
                    }
                ]
            },
            "caniuse": {
                "feature": "sharedarraybuffer",
                "title": "Shared Array Buffer"
            },
            "title": "SharedArrayBuffer"
        }
    ],
    "sec-string-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "String",
            "slug": "JavaScript/Reference/Global_Objects/String/String",
            "summary": "The String constructor is used to create a new String object. It performs type conversion when called as a function, rather than as a constructor, which is usually more useful.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String() constructor"
        }
    ],
    "sec-string.prototype.charat": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "charAt",
            "slug": "JavaScript/Reference/Global_Objects/String/charAt",
            "summary": "The String object's charAt() method returns a new string consisting of the single UTF-16 code unit located at the specified offset into the string.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.charAt()"
        }
    ],
    "sec-string.prototype.charcodeat": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "charCodeAt",
            "slug": "JavaScript/Reference/Global_Objects/String/charCodeAt",
            "summary": "The charCodeAt() method returns an integer between 0 and 65535 representing the UTF-16 code unit at the given index.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.charCodeAt()"
        }
    ],
    "sec-string.prototype.codepointat": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "codePointAt",
            "slug": "JavaScript/Reference/Global_Objects/String/codePointAt",
            "summary": "The codePointAt() method returns a non-negative integer that is the Unicode code point value.",
            "support": {
                "chrome": {
                    "version_added": "41"
                },
                "chrome_android": {
                    "version_added": "41"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "29"
                },
                "firefox_android": {
                    "version_added": "29"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "4.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "28"
                },
                "opera_android": {
                    "version_added": "28"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "41"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.codePointAt()"
        }
    ],
    "sec-string.prototype.concat": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "concat",
            "slug": "JavaScript/Reference/Global_Objects/String/concat",
            "summary": "The concat() method concatenates the string arguments to the calling string and returns a new string.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.concat()"
        }
    ],
    "sec-string.prototype.endswith": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "endsWith",
            "slug": "JavaScript/Reference/Global_Objects/String/endsWith",
            "summary": "The endsWith() method determines whether a string ends with the characters of a specified string, returning true or false as appropriate.",
            "support": {
                "chrome": {
                    "version_added": "41"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "17"
                },
                "firefox_android": {
                    "version_added": "17"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "4.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "28"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.endsWith()"
        }
    ],
    "sec-string.fromcharcode": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "fromCharCode",
            "slug": "JavaScript/Reference/Global_Objects/String/fromCharCode",
            "summary": "The static String.fromCharCode() method returns a string created from the specified sequence of UTF-16 code units.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.fromCharCode()"
        }
    ],
    "sec-string.fromcodepoint": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "fromCodePoint",
            "slug": "JavaScript/Reference/Global_Objects/String/fromCodePoint",
            "summary": "The static String.fromCodePoint() method returns a string created by using the specified sequence of code points.",
            "support": {
                "chrome": {
                    "version_added": "41"
                },
                "chrome_android": {
                    "version_added": "41"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "29"
                },
                "firefox_android": {
                    "version_added": "29"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "4.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "28"
                },
                "opera_android": {
                    "version_added": "28"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "41"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.fromCodePoint()"
        }
    ],
    "sec-string.prototype.includes": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "includes",
            "slug": "JavaScript/Reference/Global_Objects/String/includes",
            "summary": "The includes() method determines whether one string may be found within another string, returning true or false as appropriate.",
            "support": {
                "chrome": {
                    "version_added": "41"
                },
                "chrome_android": {
                    "version_added": "41"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "40"
                    },
                    {
                        "alternative_name": "contains",
                        "version_added": "18",
                        "version_removed": "48"
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "40"
                    },
                    {
                        "alternative_name": "contains",
                        "version_added": "18",
                        "version_removed": "48"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "28"
                },
                "opera_android": {
                    "version_added": "28"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "41"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "es6-string-includes",
                "title": "String.prototype.includes"
            },
            "title": "String.prototype.includes()"
        }
    ],
    "sec-string.prototype.indexof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "indexOf",
            "slug": "JavaScript/Reference/Global_Objects/String/indexOf",
            "summary": "The indexOf() method returns the index within the calling String object of the first occurrence of the specified value, starting the search at fromIndex. Returns -1 if the value is not found.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.indexOf()"
        }
    ],
    "sec-string.prototype.lastindexof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "lastIndexOf",
            "slug": "JavaScript/Reference/Global_Objects/String/lastIndexOf",
            "summary": "The lastIndexOf() method returns the index within the calling String object of the last occurrence of the specified value, searching backwards from fromIndex. Returns -1 if the value is not found.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "6"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.lastIndexOf()"
        }
    ],
    "sec-properties-of-string-instances-length": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "length",
            "slug": "JavaScript/Reference/Global_Objects/String/length",
            "summary": "The length property of a String object contains the length of the string, in UTF-16 code units. length is a read-only data property of string instances.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String length"
        }
    ],
    "sec-string.prototype.localecompare": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "localeCompare",
            "slug": "JavaScript/Reference/Global_Objects/String/localeCompare",
            "summary": "The localeCompare() method returns a number indicating whether a reference string comes before, or after, or is the same as the given string in sort order.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "7"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.localeCompare()"
        }
    ],
    "sec-string.prototype.match": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "match",
            "slug": "JavaScript/Reference/Global_Objects/String/match",
            "summary": "The match() method retrieves the result of matching a string against a regular expression.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.match()"
        }
    ],
    "sec-string.prototype.matchall": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "matchAll",
            "slug": "JavaScript/Reference/Global_Objects/String/matchAll",
            "summary": "The matchAll() method returns an iterator of all results matching a string against a regular expression, including capturing groups.",
            "support": {
                "chrome": {
                    "version_added": "73"
                },
                "chrome_android": {
                    "version_added": "73"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "67"
                },
                "firefox_android": {
                    "version_added": "67"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "12.0.0"
                },
                "opera": {
                    "version_added": "60"
                },
                "opera_android": {
                    "version_added": "52"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": "73"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.matchAll()"
        }
    ],
    "sec-string.prototype.normalize": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "normalize",
            "slug": "JavaScript/Reference/Global_Objects/String/normalize",
            "summary": "The normalize() method returns the Unicode Normalization Form of the string.",
            "support": {
                "chrome": {
                    "version_added": "34"
                },
                "chrome_android": {
                    "version_added": "34"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "31"
                },
                "firefox_android": {
                    "version_added": "31"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "21"
                },
                "opera_android": {
                    "version_added": "21"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.normalize()"
        }
    ],
    "sec-string.prototype.padend": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "padEnd",
            "slug": "JavaScript/Reference/Global_Objects/String/padEnd",
            "summary": "The padEnd() method pads the current string with a given string (repeated, if needed) so that the resulting string reaches a given length. The padding is applied from the end of the current string.",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": "57"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": {
                    "version_added": "48"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "8.0.0"
                    },
                    {
                        "version_added": "7.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "44"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "57"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "pad-start-end",
                "title": "String.prototype.padStart(), String.prototype.padEnd()"
            },
            "title": "String.prototype.padEnd()"
        }
    ],
    "sec-string.prototype.padstart": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "padStart",
            "slug": "JavaScript/Reference/Global_Objects/String/padStart",
            "summary": "The padStart() method pads the current string with another string (multiple times, if needed) until the resulting string reaches the given length.",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": "57"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": {
                    "version_added": "48"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "8.0.0"
                    },
                    {
                        "version_added": "7.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "44"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "57"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.padStart()"
        }
    ],
    "sec-string.raw": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "raw",
            "slug": "JavaScript/Reference/Global_Objects/String/raw",
            "summary": "The static String.raw() method is a tag function of template literals. This is similar to the r prefix in Python, or the @ prefix in C# for string literals. (But it is not identical; see explanations in this issue.) It's used to get the raw string form of template strings, that is, substitutions (e.g. ${foo}) are processed, but escapes (e.g. \\n) are not.",
            "support": {
                "chrome": {
                    "version_added": "41"
                },
                "chrome_android": {
                    "version_added": "41"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": {
                    "version_added": "34"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.raw()"
        }
    ],
    "sec-string.prototype.repeat": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "repeat",
            "slug": "JavaScript/Reference/Global_Objects/String/repeat",
            "summary": "The repeat() method constructs and returns a new string which contains the specified number of copies of the string on which it was called, concatenated together.",
            "support": {
                "chrome": {
                    "version_added": "41"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "24"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "4.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "28"
                },
                "opera_android": {
                    "version_added": "28"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.repeat()"
        }
    ],
    "sec-string.prototype.replace": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "replace",
            "slug": "JavaScript/Reference/Global_Objects/String/replace",
            "summary": "The replace() method returns a new string with some or all matches of a pattern replaced by a replacement.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.replace()"
        }
    ],
    "sec-string.prototype.search": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "search",
            "slug": "JavaScript/Reference/Global_Objects/String/search",
            "summary": "The search() method executes a search for a match between a regular expression and this String object.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.search()"
        }
    ],
    "sec-string.prototype.slice": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "slice",
            "slug": "JavaScript/Reference/Global_Objects/String/slice",
            "summary": "The slice() method extracts a section of a string and returns it as a new string, without modifying the original string.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.slice()"
        }
    ],
    "sec-string.prototype.split": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "split",
            "slug": "JavaScript/Reference/Global_Objects/String/split",
            "summary": "The split() method divides a String into an ordered list of substrings, puts these substrings into an array, and returns the array.  The division is done by searching for a pattern; where the pattern is provided as the first parameter in the method's call.  ",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.split()"
        }
    ],
    "sec-string.prototype.startswith": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "startsWith",
            "slug": "JavaScript/Reference/Global_Objects/String/startsWith",
            "summary": "The startsWith() method determines whether a string begins with the characters of a specified string, returning true or false as appropriate.",
            "support": {
                "chrome": {
                    "version_added": "41"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "17"
                },
                "firefox_android": {
                    "version_added": "17"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "4.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "28"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.startsWith()"
        }
    ],
    "sec-string.prototype.substring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "substring",
            "slug": "JavaScript/Reference/Global_Objects/String/substring",
            "summary": "The substring() method returns the part of the string between the start and end indexes, or to the end of the string.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.substring()"
        }
    ],
    "sec-string.prototype.tolocalelowercase": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "toLocaleLowerCase",
            "slug": "JavaScript/Reference/Global_Objects/String/toLocaleLowerCase",
            "summary": "The toLocaleLowerCase() method returns the calling string value converted to lower case, according to any locale-specific case mappings.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.toLocaleLowerCase()"
        }
    ],
    "sec-string.prototype.tolocaleuppercase": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "toLocaleUpperCase",
            "slug": "JavaScript/Reference/Global_Objects/String/toLocaleUpperCase",
            "summary": "The toLocaleUpperCase() method returns the calling string value converted to upper case, according to any locale-specific case mappings.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.toLocaleUpperCase()"
        }
    ],
    "sec-string.prototype.tolowercase": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "toLowerCase",
            "slug": "JavaScript/Reference/Global_Objects/String/toLowerCase",
            "summary": "The toLowerCase() method returns the calling string value converted to lower case.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.toLowerCase()"
        }
    ],
    "sec-string.prototype.tostring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "toString",
            "slug": "JavaScript/Reference/Global_Objects/String/toString",
            "summary": "The toString() method returns a string representing the specified object.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.toString()"
        }
    ],
    "sec-string.prototype.touppercase": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "toUpperCase",
            "slug": "JavaScript/Reference/Global_Objects/String/toUpperCase",
            "summary": "The toUpperCase() method returns the calling string value converted to uppercase (the value will be converted to a string if it isn't one).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.toUpperCase()"
        }
    ],
    "sec-string.prototype.trim": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "trim",
            "slug": "JavaScript/Reference/Global_Objects/String/trim",
            "summary": "The trim() method removes whitespace from both ends of a string. Whitespace in this context is all the whitespace characters (space, tab, no-break space, etc.) and all the line terminator characters (LF, CR, etc.).",
            "support": {
                "chrome": {
                    "version_added": "4"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "10.5"
                },
                "opera_android": {
                    "version_added": "11"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "5"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.trim()"
        }
    ],
    "sec-string.prototype.trimend": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "trimEnd",
            "slug": "JavaScript/Reference/Global_Objects/String/trimEnd",
            "summary": "The trimEnd() method removes whitespace from the end of a string. trimRight() is an alias of this method.",
            "support": {
                "chrome": [
                    {
                        "version_added": "66"
                    },
                    {
                        "version_added": "4",
                        "alternative_name": "trimRight"
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "66"
                    },
                    {
                        "version_added": "18",
                        "alternative_name": "trimRight"
                    }
                ],
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "61"
                    },
                    {
                        "version_added": "3.5",
                        "alternative_name": "trimRight"
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "61"
                    },
                    {
                        "version_added": "4",
                        "alternative_name": "trimRight"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "10.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "alternative_name": "trimRight"
                    }
                ],
                "opera": [
                    {
                        "version_added": "53"
                    },
                    {
                        "version_added": "15",
                        "alternative_name": "trimRight"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "47"
                    },
                    {
                        "version_added": "14",
                        "alternative_name": "trimRight"
                    }
                ],
                "safari": {
                    "version_added": "12"
                },
                "safari_ios": {
                    "version_added": "12"
                },
                "samsunginternet_android": [
                    {
                        "version_added": "9.0"
                    },
                    {
                        "version_added": "1.0",
                        "alternative_name": "trimRight"
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "66"
                    },
                    {
                        "version_added": "37",
                        "alternative_name": "trimRight"
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "79",
                        "alternative_name": "trimRight"
                    }
                ]
            },
            "title": "String.prototype.trimEnd()"
        }
    ],
    "sec-string.prototype.trimstart": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "trimStart",
            "slug": "JavaScript/Reference/Global_Objects/String/trimStart",
            "summary": "The trimStart() method removes whitespace from the beginning of a string. trimLeft() is an alias of this method.",
            "support": {
                "chrome": [
                    {
                        "version_added": "66"
                    },
                    {
                        "version_added": "4",
                        "alternative_name": "trimLeft"
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "66"
                    },
                    {
                        "version_added": "18",
                        "alternative_name": "trimLeft"
                    }
                ],
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "61"
                    },
                    {
                        "version_added": "3.5",
                        "alternative_name": "trimLeft"
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "61"
                    },
                    {
                        "version_added": "4",
                        "alternative_name": "trimLeft"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "10.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "alternative_name": "trimLeft"
                    }
                ],
                "opera": [
                    {
                        "version_added": "53"
                    },
                    {
                        "version_added": "15",
                        "alternative_name": "trimLeft"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "47"
                    },
                    {
                        "version_added": "14",
                        "alternative_name": "trimLeft"
                    }
                ],
                "safari": {
                    "version_added": "12"
                },
                "safari_ios": {
                    "version_added": "12"
                },
                "samsunginternet_android": [
                    {
                        "version_added": "9.0"
                    },
                    {
                        "version_added": "1.0",
                        "alternative_name": "trimLeft"
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "66"
                    },
                    {
                        "version_added": "37",
                        "alternative_name": "trimLeft"
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "79",
                        "alternative_name": "trimLeft"
                    }
                ]
            },
            "title": "String.prototype.trimStart()"
        }
    ],
    "sec-string.prototype.valueof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "valueOf",
            "slug": "JavaScript/Reference/Global_Objects/String/valueOf",
            "summary": "The valueOf() method returns the primitive value of a String object.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype.valueOf()"
        }
    ],
    "sec-string.prototype-@@iterator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "@@iterator",
            "slug": "JavaScript/Reference/Global_Objects/String/@@iterator",
            "summary": "The [@@iterator]() method returns a new Iterator object that iterates over the code points of a String value, returning each code point as a String value.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "36"
                    },
                    {
                        "alternative_name": "@@iterator",
                        "version_added": "27",
                        "version_removed": "36",
                        "notes": "A placeholder property named <code>@@iterator</code> is used."
                    },
                    {
                        "alternative_name": "iterator",
                        "version_added": "17",
                        "version_removed": "27",
                        "notes": "A placeholder property named <code>iterator</code> is used."
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "36"
                    },
                    {
                        "alternative_name": "@@iterator",
                        "version_added": "27",
                        "version_removed": "36",
                        "notes": "A placeholder property named <code>@@iterator</code> is used."
                    },
                    {
                        "alternative_name": "iterator",
                        "version_added": "17",
                        "version_removed": "27",
                        "notes": "A placeholder property named <code>iterator</code> is used."
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String.prototype[@@iterator]()"
        }
    ],
    "sec-string-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/String.json",
            "name": "String",
            "slug": "JavaScript/Reference/Global_Objects/String",
            "summary": "The String object is used to represent and manipulate a sequence of characters.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "String"
        }
    ],
    "sec-symbol-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "Symbol",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/Symbol",
            "summary": "The Symbol() constructor returns a value of type symbol, but is incomplete as a constructor because it does not support the syntax \"new Symbol()\" and it is not intended to be subclassed. It may be used as the value of an extends clause of a class definition but a super call to it will cause an exception.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": {
                    "version_added": "36"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol() constructor"
        }
    ],
    "sec-symbol.prototype.description": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "description",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/description",
            "summary": "The read-only description property is a string returning the optional description of Symbol objects.",
            "support": {
                "chrome": {
                    "version_added": "70"
                },
                "chrome_android": {
                    "version_added": "70"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "63"
                },
                "firefox_android": {
                    "version_added": "63"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "11.0.0"
                },
                "opera": {
                    "version_added": "57"
                },
                "opera_android": {
                    "version_added": "49"
                },
                "safari": [
                    {
                        "version_added": "12.1"
                    },
                    {
                        "version_added": "12",
                        "partial_implementation": true,
                        "notes": "No support for an undefined description."
                    }
                ],
                "safari_ios": [
                    {
                        "version_added": "12.2"
                    },
                    {
                        "version_added": "12",
                        "partial_implementation": true,
                        "notes": "No support for an undefined description."
                    }
                ],
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "70"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.prototype.description"
        }
    ],
    "sec-symbol.for": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "for",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/for",
            "summary": "The Symbol.for(key) method searches for existing symbols in a runtime-wide symbol registry with the given key and returns it if found. Otherwise a new symbol gets created in the global symbol registry with this key.",
            "support": {
                "chrome": {
                    "version_added": "40"
                },
                "chrome_android": {
                    "version_added": "40"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": {
                    "version_added": "36"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "27"
                },
                "opera_android": {
                    "version_added": "27"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "40"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.for()"
        }
    ],
    "sec-symbol.hasinstance": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "hasInstance",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/hasInstance",
            "summary": "The Symbol.hasInstance well-known symbol is used to determine if a constructor object recognizes an object as its instance. The instanceof operator's behavior can be customized by this symbol.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": {
                    "version_added": "50"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.5.0"
                    },
                    {
                        "version_added": "6.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.hasInstance"
        }
    ],
    "sec-symbol.isconcatspreadable": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "isConcatSpreadable",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/isConcatSpreadable",
            "summary": "The Symbol.isConcatSpreadable well-known symbol is used to configure if an object should be flattened to its array elements when using the Array.prototype.concat() method.",
            "support": {
                "chrome": {
                    "version_added": "48"
                },
                "chrome_android": {
                    "version_added": "48"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": {
                    "version_added": "48"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "35"
                },
                "opera_android": {
                    "version_added": "35"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "48"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.isConcatSpreadable"
        }
    ],
    "sec-symbol.iterator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "iterator",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/iterator",
            "summary": "The well-known Symbol.iterator symbol specifies the default iterator for an object. Used by for...of.",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": {
                    "version_added": "43"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": {
                    "version_added": "36"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "30"
                },
                "opera_android": {
                    "version_added": "30"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "43"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.iterator"
        }
    ],
    "sec-symbol.keyfor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "keyFor",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/keyFor",
            "summary": "The Symbol.keyFor(sym) method retrieves a shared symbol key from the global symbol registry for the given symbol.",
            "support": {
                "chrome": {
                    "version_added": "40"
                },
                "chrome_android": {
                    "version_added": "40"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": {
                    "version_added": "36"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "27"
                },
                "opera_android": {
                    "version_added": "27"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "40"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.keyFor()"
        }
    ],
    "sec-symbol.match": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "match",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/match",
            "summary": "The Symbol.match well-known symbol specifies the matching of a regular expression against a string. This function is called by the String.prototype.match() method.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "40"
                },
                "firefox_android": {
                    "version_added": "40"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.match"
        }
    ],
    "sec-symbol.matchall": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "matchAll",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/matchAll",
            "summary": "The Symbol.matchAll well-known symbol returns an iterator, that yields matches of the regular expression against a string. This function is called by the String.prototype.matchAll() method.",
            "support": {
                "chrome": {
                    "version_added": "73"
                },
                "chrome_android": {
                    "version_added": "73"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "67"
                },
                "firefox_android": {
                    "version_added": "67"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "12.0.0"
                },
                "opera": {
                    "version_added": "60"
                },
                "opera_android": {
                    "version_added": "52"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": "73"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.matchAll"
        }
    ],
    "sec-symbol.replace": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "replace",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/replace",
            "summary": "The Symbol.replace well-known symbol specifies the method that replaces matched substrings of a string. This function is called by the String.prototype.replace() method.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": {
                    "version_added": "49"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.replace"
        }
    ],
    "sec-symbol.search": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "search",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/search",
            "summary": "The Symbol.search well-known symbol specifies the method that returns the index within a string that matches the regular expression. This function is called by the String.prototype.search() method.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": {
                    "version_added": "49"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.search"
        }
    ],
    "sec-symbol.species": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "species",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/species",
            "summary": "The well-known symbol Symbol.species specifies a function-valued property that the constructor function uses to create derived objects.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "41"
                },
                "firefox_android": {
                    "version_added": "41"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.5.0"
                    },
                    {
                        "version_added": "6.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "38"
                },
                "opera_android": {
                    "version_added": "41"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.species"
        }
    ],
    "sec-symbol.split": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "split",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/split",
            "summary": "The Symbol.split well-known symbol specifies the method that splits a string at the indices that match a regular expression. This function is called by the String.prototype.split() method.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": {
                    "version_added": "49"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.split"
        }
    ],
    "sec-symbol.toprimitive": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "toPrimitive",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/toPrimitive",
            "summary": "The Symbol.toPrimitive is a symbol that specifies a function valued property that is called to convert an object to a corresponding primitive value.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": {
                    "version_added": "47"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "44"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "34"
                },
                "opera_android": {
                    "version_added": "34"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "47"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.toPrimitive"
        }
    ],
    "sec-symbol.prototype.tostring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "toString",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/toString",
            "summary": "The toString() method returns a string representing the specified Symbol object.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": {
                    "version_added": "36"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.prototype.toString()"
        }
    ],
    "sec-symbol.tostringtag": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "toStringTag",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/toStringTag",
            "summary": "The Symbol.toStringTag well-known symbol is a string valued property that is used in the creation of the default string description of an object. It is accessed internally by the Object.prototype.toString() method.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": {
                    "version_added": "51"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.0.0"
                    },
                    {
                        "version_added": "4.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.toStringTag"
        }
    ],
    "sec-symbol.unscopables": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "unscopables",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/unscopables",
            "summary": "The Symbol.unscopables well-known symbol is used to specify an object value of whose own and inherited property names are excluded from the with environment bindings of the associated object.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": {
                    "version_added": "48"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.unscopables"
        }
    ],
    "sec-symbol.prototype.valueof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "valueOf",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/valueOf",
            "summary": "The valueOf() method returns the primitive value of a Symbol object.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": {
                    "version_added": "36"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.prototype.valueOf()"
        }
    ],
    "sec-symbol.prototype-@@toprimitive": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "@@toPrimitive",
            "slug": "JavaScript/Reference/Global_Objects/Symbol/@@toPrimitive",
            "summary": "The [@@toPrimitive]() method converts a Symbol object to a primitive value.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": {
                    "version_added": "47"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "44"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "34"
                },
                "opera_android": {
                    "version_added": "34"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "47"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol.prototype[@@toPrimitive]"
        }
    ],
    "sec-symbol-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/Symbol.json",
            "name": "Symbol",
            "slug": "JavaScript/Reference/Global_Objects/Symbol",
            "summary": "The data type symbol is a primitive data type. The Symbol() function returns a value of type symbol, has static properties that expose several members of built-in objects, has static methods that expose the global symbol registry, and resembles a built-in object class, but is incomplete as a constructor because it does not support the syntax \"new Symbol()\".",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": {
                    "version_added": "36"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Symbol"
        }
    ],
    "sec-native-error-types-used-in-this-standard-syntaxerror": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/SyntaxError.json",
            "name": "SyntaxError",
            "slug": "JavaScript/Reference/Global_Objects/SyntaxError",
            "summary": "The SyntaxError object represents an error when trying to interpret syntactically invalid code. It is thrown when the JavaScript engine encounters tokens or token order that does not conform to the syntax of the language when parsing code.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "SyntaxError"
        }
    ],
    "sec-native-error-types-used-in-this-standard-typeerror": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypeError.json",
            "name": "TypeError",
            "slug": "JavaScript/Reference/Global_Objects/TypeError",
            "summary": "The TypeError object represents an error when an operation could not be performed, typically (but not exclusively) when a value is not of the expected type.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypeError"
        }
    ],
    "sec-typedarray.bytes_per_element": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "BYTES_PER_ELEMENT",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/BYTES_PER_ELEMENT",
            "summary": "The TypedArray.BYTES_PER_ELEMENT property represents the size in bytes of each element in an typed array.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.BYTES_PER_ELEMENT"
        }
    ],
    "sec-get-%typedarray%.prototype.buffer": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "buffer",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/buffer",
            "summary": "The buffer accessor property represents the ArrayBuffer referenced by a TypedArray at construction time.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.buffer"
        }
    ],
    "sec-get-%typedarray%.prototype.bytelength": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "byteLength",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/byteLength",
            "summary": "The byteLength accessor property represents the length (in bytes) of a typed array.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.byteLength"
        }
    ],
    "sec-get-%typedarray%.prototype.byteoffset": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "byteOffset",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/byteOffset",
            "summary": "The byteOffset accessor property represents the offset (in bytes) of a typed array from the start of its ArrayBuffer.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.byteOffset"
        }
    ],
    "sec-%typedarray%.prototype.copywithin": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "copyWithin",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/copyWithin",
            "summary": "The copyWithin() method copies the sequence of array elements within the array to the position starting at target. The copy is taken from the index positions of the second and third arguments start and end. The end argument is optional and defaults to the length of the array. This method has the same algorithm as Array.prototype.copyWithin. TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": {
                    "version_added": "34"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "9.1"
                },
                "safari_ios": {
                    "version_added": "9.3"
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.copyWithin()"
        }
    ],
    "sec-%typedarray%.prototype.entries": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "entries",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/entries",
            "summary": "The entries() method returns a new Array iterator object that contains the key/value pairs for each index in the array.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": {
                    "version_added": "37"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "9.1"
                },
                "safari_ios": {
                    "version_added": "9.3"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.entries()"
        }
    ],
    "sec-%typedarray%.prototype.every": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "every",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/every",
            "summary": "The every() method tests whether all elements in the typed array pass the test implemented by the provided function. This method has the same algorithm as Array.prototype.every(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": {
                    "version_added": "37"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "9.1"
                },
                "safari_ios": {
                    "version_added": "9.3"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.every()"
        }
    ],
    "sec-%typedarray%.prototype.fill": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "fill",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/fill",
            "summary": "The fill() method fills all the elements of a typed array from a start index to an end index with a static value. This method has the same algorithm as Array.prototype.fill(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": {
                    "version_added": "37"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "9.1"
                },
                "safari_ios": {
                    "version_added": "9.3"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.fill()"
        }
    ],
    "sec-%typedarray%.prototype.filter": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "filter",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/filter",
            "summary": "The filter() method creates a new typed array with all elements that pass the test implemented by the provided function. This method has the same algorithm as Array.prototype.filter(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "9.1"
                },
                "safari_ios": {
                    "version_added": "9.3"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.filter()"
        }
    ],
    "sec-%typedarray%.prototype.find": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "find",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/find",
            "summary": "The find() method returns a value in the typed array, if an element satisfies the provided testing function. Otherwise undefined is returned. TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": {
                    "version_added": "37"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "9.1"
                },
                "safari_ios": {
                    "version_added": "9.3"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.find()"
        }
    ],
    "sec-%typedarray%.prototype.findindex": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "findIndex",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/findIndex",
            "summary": "The findIndex() method returns an index in the typed array, if an element in the typed array satisfies the provided testing function. Otherwise -1 is returned.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": {
                    "version_added": "37"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "9.1"
                },
                "safari_ios": {
                    "version_added": "9.3"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.findIndex()"
        }
    ],
    "sec-%typedarray%.prototype.foreach": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "forEach",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/forEach",
            "summary": "The forEach() method executes a provided function once per array element. This method has the same algorithm as Array.prototype.forEach(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.forEach()"
        }
    ],
    "sec-%typedarray%.from": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "from",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/from",
            "summary": "The TypedArray.from() method creates a new typed array from an array-like or iterable object. This method is nearly the same as Array.from().",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.from()"
        }
    ],
    "sec-%typedarray%.prototype.includes": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "includes",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/includes",
            "summary": "The includes() method determines whether a typed array includes a certain element, returning true or false as appropriate. This method has the same algorithm as Array.prototype.includes(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": {
                    "version_added": "47"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "43"
                },
                "firefox_android": {
                    "version_added": "43"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.0.0"
                    },
                    {
                        "version_added": "5.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "34"
                },
                "opera_android": {
                    "version_added": "34"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.includes()"
        }
    ],
    "sec-%typedarray%.prototype.indexof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "indexOf",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/indexOf",
            "summary": "The indexOf() method returns the first index at which a given element can be found in the typed array, or -1 if it is not present. This method has the same algorithm as Array.prototype.indexOf(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "37",
                    "notes": "Starting with Firefox 47, this method will no longer return <code>-0</code>. For example, <code>new Uint8Array([0]).indexOf(0, -0)</code> will now always return <code>+0</code>."
                },
                "firefox_android": {
                    "version_added": "37",
                    "notes": "Starting with Firefox 47, this method will no longer return <code>-0</code>. For example, <code>new Uint8Array([0]).indexOf(0, -0)</code> will now always return <code>+0</code>."
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "9.1"
                },
                "safari_ios": {
                    "version_added": "9.3"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.indexOf()"
        }
    ],
    "sec-%typedarray%.prototype.join": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "join",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/join",
            "summary": "The join() method joins all elements of an array into a string. This method has the same algorithm as Array.prototype.join(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": {
                    "version_added": "37"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "9.1"
                },
                "safari_ios": {
                    "version_added": "9.3"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.join()"
        }
    ],
    "sec-%typedarray%.prototype.keys": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "keys",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/keys",
            "summary": "The keys() method returns a new Array Iterator object that contains the keys for each index in the array.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": {
                    "version_added": "37"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.keys()"
        }
    ],
    "sec-%typedarray%.prototype.lastindexof": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "lastIndexOf",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/lastIndexOf",
            "summary": "The lastIndexOf() method returns the last index at which a given element can be found in the typed array, or -1 if it is not present. The typed array is searched backwards, starting at fromIndex. This method has the same algorithm as Array.prototype.lastIndexOf(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "37",
                    "notes": "Starting with Firefox 47, this method will no longer return <code>-0</code>. For example, <code>new Uint8Array([0]).lastIndexOf(0, -0)</code> will now always return <code>+0</code>."
                },
                "firefox_android": {
                    "version_added": "37",
                    "notes": "Starting with Firefox 47, this method will no longer return <code>-0</code>. For example, <code>new Uint8Array([0]).lastIndexOf(0, -0)</code> will now always return <code>+0</code>."
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.lastIndexOf()"
        }
    ],
    "sec-get-%typedarray%.prototype.length": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "length",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/length",
            "summary": "The length accessor property represents the length (in elements) of a typed array.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.length"
        }
    ],
    "sec-%typedarray%.prototype.map": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "map",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/map",
            "summary": "The map() method creates a new typed array with the results of calling a provided function on every element in this typed array. This method has the same algorithm as Array.prototype.map(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "9.1"
                },
                "safari_ios": {
                    "version_added": "9.3"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.map()"
        }
    ],
    "sec-properties-of-the-typedarray-constructors": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "name",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/name",
            "summary": "The TypedArray.name property represents a string value of the typed array constructor name.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.name"
        }
    ],
    "sec-%typedarray%.of": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "of",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/of",
            "summary": "The TypedArray.of() method creates a new typed array from a variable number of arguments. This method is nearly the same as Array.of().",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "9.1"
                },
                "safari_ios": {
                    "version_added": "9.3"
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.of()"
        }
    ],
    "sec-%typedarray%.prototype.reduce": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "reduce",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/reduce",
            "summary": "The reduce() method applies a function against an accumulator and each value of the typed array (from left-to-right) has to reduce it to a single value. This method has the same algorithm as Array.prototype.reduce(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": {
                    "version_added": "37"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.reduce()"
        }
    ],
    "sec-%typedarray%.prototype.reduceright": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "reduceRight",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/reduceRight",
            "summary": "The reduceRight() method applies a function against an accumulator and each value of the typed array (from right-to-left) has to reduce it to a single value. This method has the same algorithm as Array.prototype.reduceRight(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": {
                    "version_added": "37"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.reduceRight()"
        }
    ],
    "sec-%typedarray%.prototype.reverse": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "reverse",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/reverse",
            "summary": "The reverse() method reverses a typed array in place. The first typed array element becomes the last and the last becomes the first. This method has the same algorithm as Array.prototype.reverse(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": {
                    "version_added": "37"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.reverse()"
        }
    ],
    "sec-%typedarray%.prototype.set-array-offset": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "set",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/set",
            "summary": "The set() method stores multiple values in the typed array, reading input values from a specified array.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.set()"
        }
    ],
    "sec-%typedarray%.prototype.slice": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "slice",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/slice",
            "summary": "The slice() method returns a shallow copy of a portion of a typed array into a new typed array object. This method has the same algorithm as Array.prototype.slice(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "38"
                },
                "firefox_android": {
                    "version_added": "38"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.slice()"
        }
    ],
    "sec-%typedarray%.prototype.some": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "some",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/some",
            "summary": "The some() method tests whether some element in the typed array passes the test implemented by the provided function. This method has the same algorithm as Array.prototype.some(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": {
                    "version_added": "37"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.some()"
        }
    ],
    "sec-%typedarray%.prototype.sort": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "sort",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/sort",
            "summary": "The sort() method sorts the elements of a typed array numerically in place and returns the typed array. This method has the same algorithm as Array.prototype.sort(), except that sorts the values numerically instead of as strings. TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": {
                    "version_added": "46"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.sort()"
        }
    ],
    "sec-%typedarray%.prototype.subarray": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "subarray",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/subarray",
            "summary": "The subarray() method returns a new TypedArray on the same ArrayBuffer store and with the same element types as for this TypedArray object. The begin offset is inclusive and the end offset is exclusive. TypedArray is one of the typed array types.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.subarray()"
        }
    ],
    "sec-%typedarray%.prototype.tolocalestring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "toLocaleString",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/toLocaleString",
            "summary": "The toLocaleString() method returns a string representing the elements of the typed array. The elements are converted to strings and are separated by a locale-specific string (such as a comma “,”). This method has the same algorithm as Array.prototype.toLocaleString() and, as the typed array elements are numbers, the same algorithm as Number.prototype.toLocaleString() applies for each element. TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": {
                    "version_added": "51"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "5"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.toLocaleString()"
        }
    ],
    "sec-%typedarray%.prototype.tostring": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "toString",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/toString",
            "summary": "The toString() method returns a string representing the specified array and its elements. This method has the same algorithm as Array.prototype.toString(). TypedArray is one of the typed array types here.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": {
                    "version_added": "51"
                },
                "ie": {
                    "version_added": "10"
                },
                "nodejs": {
                    "version_added": "0.10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "5"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.toString()"
        }
    ],
    "sec-%typedarray%.prototype.values": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "values",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/values",
            "summary": "The values() method returns a new Array Iterator object that contains the values for each index in the array.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": {
                    "version_added": "37"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype.values()"
        }
    ],
    "sec-%typedarray%.prototype-@@iterator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "@@iterator",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/@@iterator",
            "summary": "The initial value of the @@iterator property is the same function object as the initial value of the values property.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "36"
                    },
                    {
                        "alternative_name": "@@iterator",
                        "version_added": "27",
                        "version_removed": "36",
                        "notes": "A placeholder property named <code>@@iterator</code> is used."
                    },
                    {
                        "alternative_name": "iterator",
                        "version_added": "17",
                        "version_removed": "27",
                        "notes": "A placeholder property named <code>iterator</code> is used."
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "36"
                    },
                    {
                        "alternative_name": "@@iterator",
                        "version_added": "27",
                        "version_removed": "36",
                        "notes": "A placeholder property named <code>@@iterator</code> is used."
                    },
                    {
                        "alternative_name": "iterator",
                        "version_added": "17",
                        "version_removed": "27",
                        "notes": "A placeholder property named <code>iterator</code> is used."
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TypedArray.prototype[@@iterator]()"
        }
    ],
    "sec-get-%typedarray%-@@species": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/TypedArray.json",
            "name": "@@species",
            "slug": "JavaScript/Reference/Global_Objects/TypedArray/@@species",
            "summary": "The TypedArray[@@species] accessor property returns the constructor of a typed array.",
            "support": {
                "chrome": {
                    "version_added": "51"
                },
                "chrome_android": {
                    "version_added": "51"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": {
                    "version_added": "48"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.5.0"
                    },
                    {
                        "version_added": "6.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "38"
                },
                "opera_android": {
                    "version_added": "41"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "51"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "get TypedArray[@@species]"
        }
    ],
    "sec-native-error-types-used-in-this-standard-urierror": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/URIError.json",
            "name": "URIError",
            "slug": "JavaScript/Reference/Global_Objects/URIError",
            "summary": "The URIError object represents an error when a global URI handling function was used in a wrong way.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "URIError"
        }
    ],
    "sec-weakmap-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/WeakMap.json",
            "name": "WeakMap",
            "slug": "JavaScript/Reference/Global_Objects/WeakMap/WeakMap",
            "summary": "The WeakMap() constructor creates WeakMap objects which are a collections of key/value pairs in which the keys are weakly referenced. The keys must be objects and the values can be arbitrary values.",
            "support": {
                "chrome": {
                    "version_added": "36"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "6"
                },
                "firefox_android": {
                    "version_added": "6"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "23"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WeakMap() constructor"
        }
    ],
    "sec-weakmap.prototype.delete": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/WeakMap.json",
            "name": "delete",
            "slug": "JavaScript/Reference/Global_Objects/WeakMap/delete",
            "summary": "The delete() method removes the specified element from a WeakMap object.",
            "support": {
                "chrome": {
                    "version_added": "36"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "6",
                    "notes": "Prior to Firefox 38, this method threw a <code>TypeError</code> when the key parameter was not an object. This has been fixed in version 38 and later to return <code>false</code> as per the ES2015 standard."
                },
                "firefox_android": {
                    "version_added": "6",
                    "notes": "Prior to Firefox 38, this method threw a <code>TypeError</code> when the key parameter was not an object. This has been fixed in version 38 and later to return <code>false</code> as per the ES2015 standard."
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "23"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WeakMap.prototype.delete()"
        }
    ],
    "sec-weakmap.prototype.get": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/WeakMap.json",
            "name": "get",
            "slug": "JavaScript/Reference/Global_Objects/WeakMap/get",
            "summary": "The get() method returns a specified element from a WeakMap object.",
            "support": {
                "chrome": {
                    "version_added": "36"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "6",
                    "notes": "Prior to Firefox 38, this method threw a <code>TypeError</code> when the key parameter was not an object. However, the ES2015 specification specifies to return <code>undefined</code> instead. Furthermore, <code>WeakMap.prototype.get</code> accepted an optional second argument as a fallback value, which is not part of the standard. Both non-standard behaviors are removed in version 38 and higher."
                },
                "firefox_android": {
                    "version_added": "6",
                    "notes": "Prior to Firefox 38, this method threw a <code>TypeError</code> when the key parameter was not an object. However, the ES2015 specification specifies to return <code>undefined</code> instead. Furthermore, <code>WeakMap.prototype.get</code> accepted an optional second argument as a fallback value, which is not part of the standard. Both non-standard behaviors are removed in version 38 and higher."
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "23"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WeakMap.prototype.get()"
        }
    ],
    "sec-weakmap.prototype.has": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/WeakMap.json",
            "name": "has",
            "slug": "JavaScript/Reference/Global_Objects/WeakMap/has",
            "summary": "The has() method returns a boolean indicating whether an element with the specified key exists in the WeakMap object or not.",
            "support": {
                "chrome": {
                    "version_added": "36"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "6",
                    "notes": "Prior to Firefox 38, this method threw a <code>TypeError</code> when the key parameter was not an object. This has been fixed in version 38 and later to return <code>false</code> as per the ES2015 standard."
                },
                "firefox_android": {
                    "version_added": "6",
                    "notes": "Prior to Firefox 38, this method threw a <code>TypeError</code> when the key parameter was not an object. This has been fixed in version 38 and later to return <code>false</code> as per the ES2015 standard."
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "23"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WeakMap.prototype.has()"
        }
    ],
    "sec-weakmap.prototype.set": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/WeakMap.json",
            "name": "set",
            "slug": "JavaScript/Reference/Global_Objects/WeakMap/set",
            "summary": "The set() method adds a new element with a specified key and value to a WeakMap object.",
            "support": {
                "chrome": {
                    "version_added": "36"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "6",
                    "notes": "Prior to Firefox 38, this method threw a <code>TypeError</code> when the key parameter was not an object. This has been fixed in version 38 and later to return <code>false</code> as per the ES2015 standard."
                },
                "firefox_android": {
                    "version_added": "6",
                    "notes": "Prior to Firefox 38, this method threw a <code>TypeError</code> when the key parameter was not an object. This has been fixed in version 38 and later to return <code>false</code> as per the ES2015 standard."
                },
                "ie": {
                    "version_added": "11",
                    "partial_implementation": true,
                    "notes": "Returns 'undefined' instead of the 'Map' object."
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "23"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WeakMap.prototype.set()"
        }
    ],
    "sec-weakmap-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/WeakMap.json",
            "name": "WeakMap",
            "slug": "JavaScript/Reference/Global_Objects/WeakMap",
            "summary": "The WeakMap object is a collection of key/value pairs in which the keys are weakly referenced. The keys must be objects and the values can be arbitrary values.",
            "support": {
                "chrome": {
                    "version_added": "36"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "6"
                },
                "firefox_android": {
                    "version_added": "6"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": [
                    {
                        "version_added": "0.12"
                    },
                    {
                        "version_added": "0.10",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "23"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WeakMap"
        }
    ],
    "sec-weakset-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/WeakSet.json",
            "name": "WeakSet",
            "slug": "JavaScript/Reference/Global_Objects/WeakSet/WeakSet",
            "summary": "The WeakSet constructor lets you create WeakSet objects that store weakly held objects in a collection.",
            "support": {
                "chrome": {
                    "version_added": "36"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": {
                    "version_added": "34"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "23"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WeakSet() constructor"
        }
    ],
    "sec-weakset.prototype.add": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/WeakSet.json",
            "name": "add",
            "slug": "JavaScript/Reference/Global_Objects/WeakSet/add",
            "summary": "The add() method appends a new object to the end of a WeakSet object.",
            "support": {
                "chrome": {
                    "version_added": "36"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": {
                    "version_added": "34"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "23"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WeakSet.prototype.add()"
        }
    ],
    "sec-weakset.prototype.delete": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/WeakSet.json",
            "name": "delete",
            "slug": "JavaScript/Reference/Global_Objects/WeakSet/delete",
            "summary": "The delete() method removes the specified element from a WeakSet object.",
            "support": {
                "chrome": {
                    "version_added": "36"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": {
                    "version_added": "34"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "23"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WeakSet.prototype.delete()"
        }
    ],
    "sec-weakset.prototype.has": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/WeakSet.json",
            "name": "has",
            "slug": "JavaScript/Reference/Global_Objects/WeakSet/has",
            "summary": "The has() method returns a boolean indicating whether an object exists in a WeakSet or not.",
            "support": {
                "chrome": {
                    "version_added": "36"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": {
                    "version_added": "34"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "23"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WeakSet.prototype.has()"
        }
    ],
    "sec-weakset-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/WeakSet.json",
            "name": "WeakSet",
            "slug": "JavaScript/Reference/Global_Objects/WeakSet",
            "summary": "The WeakSet object lets you store weakly held objects in a collection.",
            "support": {
                "chrome": {
                    "version_added": "36"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": {
                    "version_added": "34"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "23"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WeakSet"
        }
    ],
    "sec-value-properties-of-the-global-object-infinity": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/globals.json",
            "name": "Infinity",
            "slug": "JavaScript/Reference/Global_Objects/Infinity",
            "summary": "The global property Infinity is a numeric value representing infinity.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Infinity"
        }
    ],
    "sec-value-properties-of-the-global-object-nan": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/globals.json",
            "name": "NaN",
            "slug": "JavaScript/Reference/Global_Objects/NaN",
            "summary": "The global NaN property is a value representing Not-A-Number.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "NaN"
        }
    ],
    "sec-decodeuri-encodeduri": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/globals.json",
            "name": "decodeURI",
            "slug": "JavaScript/Reference/Global_Objects/decodeURI",
            "summary": "The decodeURI() function decodes a Uniform Resource Identifier (URI) previously created by encodeURI() or by a similar routine.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "7"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "decodeURI()"
        }
    ],
    "sec-decodeuricomponent-encodeduricomponent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/globals.json",
            "name": "decodeURIComponent",
            "slug": "JavaScript/Reference/Global_Objects/decodeURIComponent",
            "summary": "The decodeURIComponent() function decodes a Uniform Resource Identifier (URI) component previously created by encodeURIComponent or by a similar routine.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "7"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "decodeURIComponent()"
        }
    ],
    "sec-encodeuri-uri": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/globals.json",
            "name": "encodeURI",
            "slug": "JavaScript/Reference/Global_Objects/encodeURI",
            "summary": "The encodeURI() function encodes a URI by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two \"surrogate\" characters).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "7"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "encodeURI()"
        }
    ],
    "sec-encodeuricomponent-uricomponent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/globals.json",
            "name": "encodeURIComponent",
            "slug": "JavaScript/Reference/Global_Objects/encodeURIComponent",
            "summary": "The encodeURIComponent() function encodes a URI by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character (will only be four escape sequences for characters composed of two \"surrogate\" characters).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "7"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "encodeURIComponent()"
        }
    ],
    "sec-eval-x": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/globals.json",
            "name": "eval",
            "slug": "JavaScript/Reference/Global_Objects/eval",
            "summary": "The eval() function evaluates JavaScript code represented as a string.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "eval()"
        }
    ],
    "sec-globalthis": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/globals.json",
            "name": "globalThis",
            "slug": "JavaScript/Reference/Global_Objects/globalThis",
            "summary": "The global globalThis property contains the global this value, which is akin to the global object.",
            "support": {
                "chrome": {
                    "version_added": "71"
                },
                "chrome_android": {
                    "version_added": "71"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": {
                    "version_added": "65"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "12.0.0"
                },
                "opera": {
                    "version_added": "58"
                },
                "opera_android": {
                    "version_added": "50"
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": {
                    "version_added": "12.2"
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "71"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "globalThis"
        }
    ],
    "sec-isfinite-number": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/globals.json",
            "name": "isFinite",
            "slug": "JavaScript/Reference/Global_Objects/isFinite",
            "summary": "The global isFinite() function determines whether the passed value is a finite number. If  needed, the parameter is first converted to a number.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "isFinite()"
        }
    ],
    "sec-isnan-number": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/globals.json",
            "name": "isNaN",
            "slug": "JavaScript/Reference/Global_Objects/isNaN",
            "summary": "The isNaN() function determines whether a value is NaN or not. Note, coercion inside the isNaN function has interesting rules; you may alternatively want to use Number.isNaN(), as defined in ECMAScript 2015.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "isNaN()"
        }
    ],
    "sec-null-value": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/globals.json",
            "name": "null",
            "slug": "JavaScript/Reference/Global_Objects/null",
            "summary": "The value null represents the intentional absence of any object value. It is one of JavaScript's primitive values and is treated as falsy for boolean operations.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "null"
        }
    ],
    "sec-parsefloat-string": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/globals.json",
            "name": "parseFloat",
            "slug": "JavaScript/Reference/Global_Objects/parseFloat",
            "summary": "The parseFloat() function parses an argument (converting it to a string first if needed) and returns a floating point number.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "parseFloat()"
        }
    ],
    "sec-parseint-string-radix": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/globals.json",
            "name": "parseInt",
            "slug": "JavaScript/Reference/Global_Objects/parseInt",
            "summary": "The parseInt() function parses a string argument and returns an integer of the specified radix (the base in mathematical numeral systems).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "parseInt()"
        }
    ],
    "sec-undefined": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/globals.json",
            "name": "undefined",
            "slug": "JavaScript/Reference/Global_Objects/undefined",
            "summary": "The global undefined property represents the primitive value undefined. It is one of JavaScript's primitive types.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "undefined"
        }
    ],
    "sec-native-error-types-used-in-this-standard": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/webassembly/CompileError.json",
            "name": "CompileError",
            "slug": "JavaScript/Reference/Global_Objects/WebAssembly/CompileError",
            "summary": "The WebAssembly.CompileError object indicates an error during WebAssembly decoding or validation.",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": "57"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "52",
                    "notes": "Disabled in the Firefox 52 Extended Support Release (ESR)."
                },
                "firefox_android": {
                    "version_added": "52",
                    "notes": "Disabled in the Firefox 52 Extended Support Release (ESR)."
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.0.0"
                },
                "opera": {
                    "version_added": "44"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "57"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebAssembly.CompileError"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/webassembly/LinkError.json",
            "name": "LinkError",
            "slug": "JavaScript/Reference/Global_Objects/WebAssembly/LinkError",
            "summary": "The WebAssembly.LinkError object indicates an error during module instantiation (besides traps from the start function).",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": "57"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "52",
                    "notes": "Disabled in the Firefox 52 Extended Support Release (ESR)."
                },
                "firefox_android": {
                    "version_added": "52",
                    "notes": "Disabled in the Firefox 52 Extended Support Release (ESR)."
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.0.0"
                },
                "opera": {
                    "version_added": "44"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "57"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebAssembly.LinkError"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/builtins/webassembly/RunTimeError.json",
            "name": "RuntimeError",
            "slug": "JavaScript/Reference/Global_Objects/WebAssembly/RuntimeError",
            "summary": "The WebAssembly.RuntimeError object is the error type that is thrown whenever WebAssembly specifies a trap.",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": "57"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "52",
                    "notes": "Disabled in the Firefox 52 Extended Support Release (ESR)."
                },
                "firefox_android": {
                    "version_added": "52",
                    "notes": "Disabled in the Firefox 52 Extended Support Release (ESR)."
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "8.0.0"
                },
                "opera": {
                    "version_added": "44"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "57"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebAssembly.RuntimeError"
        }
    ],
    "sec-static-semantics-constructormethod": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/classes.json",
            "name": "constructor",
            "slug": "JavaScript/Reference/Classes/constructor",
            "summary": "The constructor method is a special method of a class for creating and initializing an object of that class.",
            "support": {
                "chrome": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "45"
                },
                "firefox_android": {
                    "version_added": "45"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.0.0"
                    },
                    {
                        "version_added": "4.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--use_strict"
                            }
                        ]
                    },
                    {
                        "version_added": "5.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": [
                    {
                        "version_added": "36"
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "36"
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": [
                    {
                        "version_added": "5.0"
                    },
                    {
                        "version_removed": "5.0",
                        "version_added": "4.0",
                        "notes": "Strict mode is required."
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_removed": "49",
                        "version_added": false,
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": false,
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ]
            },
            "title": "constructor"
        }
    ],
    "sec-class-definitions": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/classes.json",
            "name": "extends",
            "slug": "JavaScript/Reference/Classes/extends",
            "summary": "The extends keyword is used in class declarations or class expressions to create a class that is a child of another class.",
            "support": {
                "chrome": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "45"
                },
                "firefox_android": {
                    "version_added": "45"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.0.0"
                    },
                    {
                        "version_added": "4.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--use_strict"
                            }
                        ]
                    },
                    {
                        "version_added": "5.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": [
                    {
                        "version_added": "36"
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "36"
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": [
                    {
                        "version_added": "5.0"
                    },
                    {
                        "version_removed": "5.0",
                        "version_added": "4.0",
                        "notes": "Strict mode is required."
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_removed": "49",
                        "version_added": false,
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": false,
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ]
            },
            "caniuse": {
                "feature": "es6-class",
                "title": "ES6 classes"
            },
            "title": "extends"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/classes.json",
            "name": "static",
            "slug": "JavaScript/Reference/Classes/static",
            "summary": "The static keyword defines a static method or property for a class. Neither static methods nor static properties can be called on instances of the class. Instead, they're called on the class itself.",
            "support": {
                "chrome": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "45"
                },
                "firefox_android": {
                    "version_added": "45"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.0.0"
                    },
                    {
                        "version_added": "4.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--use_strict"
                            }
                        ]
                    },
                    {
                        "version_added": "5.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": [
                    {
                        "version_added": "36"
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "36"
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": [
                    {
                        "version_added": "5.0"
                    },
                    {
                        "version_removed": "5.0",
                        "version_added": "4.0",
                        "notes": "Strict mode is required."
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_removed": "49",
                        "version_added": false,
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": false,
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ]
            },
            "caniuse": {
                "feature": "es6-class",
                "title": "ES6 classes"
            },
            "title": "static"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/classes.json",
            "name": "classes",
            "slug": "JavaScript/Reference/Classes",
            "summary": "Classes are a template for creating objects. They encapsulate data with code to work on that data. Classes in JS are built on prototypes but also have some syntax and semantics that are not shared with ES5 classalike semantics.",
            "support": {
                "chrome": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "45"
                },
                "firefox_android": {
                    "version_added": "45"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.0.0"
                    },
                    {
                        "version_added": "4.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--use_strict"
                            }
                        ]
                    },
                    {
                        "version_added": "5.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": [
                    {
                        "version_added": "36"
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "36"
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": [
                    {
                        "version_added": "5.0"
                    },
                    {
                        "version_removed": "5.0",
                        "version_added": "4.0",
                        "notes": "Strict mode is required."
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_removed": "49",
                        "version_added": false,
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": false,
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ]
            },
            "caniuse": {
                "feature": "es6-class",
                "title": "ES6 classes"
            },
            "title": "Classes"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/class.json",
            "name": "class",
            "slug": "JavaScript/Reference/Operators/class",
            "summary": "The class expression is one way to define a class in ECMAScript 2015. Similar to function expressions, class expressions can be named or unnamed. If named, the name of the class is local to the class body only. ",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "45"
                },
                "firefox_android": {
                    "version_added": "45"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.0.0"
                    },
                    {
                        "version_added": "5.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "7"
                },
                "safari_ios": {
                    "version_added": "7"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "42"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "es6-class",
                "title": "ES6 classes"
            },
            "title": "class expression"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "class",
            "slug": "JavaScript/Reference/Statements/class",
            "summary": "The class declaration creates a new class with a given name using prototype-based inheritance.",
            "support": {
                "chrome": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "45"
                },
                "firefox_android": {
                    "version_added": "45"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": [
                    {
                        "version_added": "36"
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "36"
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "36",
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ],
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": {
                    "version_added": "10.3"
                },
                "samsunginternet_android": [
                    {
                        "version_added": "5.0"
                    },
                    {
                        "version_removed": "5.0",
                        "version_added": "4.0",
                        "notes": "Strict mode is required."
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_removed": "49",
                        "version_added": "42",
                        "notes": "Strict mode is required."
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_removed": "49",
                        "version_added": false,
                        "notes": "Strict mode is required."
                    },
                    {
                        "version_removed": "49",
                        "version_added": false,
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Experimental JavaScript",
                                "value_to_set": "Enabled"
                            }
                        ]
                    }
                ]
            },
            "caniuse": {
                "feature": "es6-class",
                "title": "ES6 classes"
            },
            "title": "class"
        }
    ],
    "sec-arguments-exotic-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/functions.json",
            "name": "callee",
            "slug": "JavaScript/Reference/Functions/arguments/callee",
            "summary": "The arguments.callee property contains the currently executing function.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "6"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "arguments.callee"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/functions.json",
            "name": "length",
            "slug": "JavaScript/Reference/Functions/arguments/length",
            "summary": "The arguments.length property contains the number of arguments passed to the function.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "arguments.length"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/functions.json",
            "name": "arguments",
            "slug": "JavaScript/Reference/Functions/arguments",
            "summary": "arguments is an Array-like object accessible inside functions that contains the values of the arguments passed to that function.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "The arguments object"
        }
    ],
    "sec-createunmappedargumentsobject": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/functions.json",
            "name": "@@iterator",
            "slug": "JavaScript/Reference/Functions/arguments/@@iterator",
            "summary": "The initial value of the @@iterator property is the same function object as the initial value of the Array.prototype.values property.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": {
                    "version_added": "52"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": {
                    "version_added": "46"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "39"
                },
                "opera_android": {
                    "version_added": "41"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "52"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "arguments[@@iterator]()"
        }
    ],
    "sec-createmappedargumentsobject": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/functions.json",
            "name": "@@iterator",
            "slug": "JavaScript/Reference/Functions/arguments/@@iterator",
            "summary": "The initial value of the @@iterator property is the same function object as the initial value of the Array.prototype.values property.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": {
                    "version_added": "52"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": {
                    "version_added": "46"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "39"
                },
                "opera_android": {
                    "version_added": "41"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "52"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "arguments[@@iterator]()"
        }
    ],
    "sec-arrow-function-definitions": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/functions.json",
            "name": "arrow_functions",
            "slug": "JavaScript/Reference/Functions/Arrow_functions",
            "summary": "An arrow function expression is a compact alternative to a traditional function expression, but is limited and can't be used in all situations.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "22",
                    "notes": [
                        "The initial implementation of arrow functions in Firefox made them automatically strict. This has been changed as of Firefox 24. The use of <code>'use strict';</code> is now required.",
                        "Prior to Firefox 39, a line terminator (<code>\\n</code>) was incorrectly allowed after arrow function arguments. This has been fixed to conform to the ES2015 specification and code like <code>() \\n => {}</code> will now throw a <code>SyntaxError</code> in this and later versions."
                    ]
                },
                "firefox_android": {
                    "version_added": "22",
                    "notes": [
                        "The initial implementation of arrow functions in Firefox made them automatically strict. This has been changed as of Firefox 24. The use of <code>'use strict';</code> is now required.",
                        "Prior to Firefox 39, a line terminator (<code>\\n</code>) was incorrectly allowed after arrow function arguments. This has been fixed to conform to the ES2015 specification and code like <code>() \\n => {}</code> will now throw a <code>SyntaxError</code> in this and later versions."
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "arrow-functions",
                "title": "Arrow functions"
            },
            "title": "Arrow function expressions"
        }
    ],
    "sec-function-definitions": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/functions.json",
            "name": "default_parameters",
            "slug": "JavaScript/Reference/Functions/Default_parameters",
            "summary": "Default function parameters allow named parameters to be initialized with default values if no value or undefined is passed.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "rest-parameters",
                "title": "Rest parameters"
            },
            "title": "Default parameters"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/functions.json",
            "name": "rest_parameters",
            "slug": "JavaScript/Reference/Functions/rest_parameters",
            "summary": "The rest parameter syntax allows us to represent an indefinite number of arguments as an array.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": {
                    "version_added": "47"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": {
                    "version_added": "15"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "6.0.0"
                    },
                    {
                        "version_added": "4.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "34"
                },
                "opera_android": {
                    "version_added": "34"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "47"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "rest-parameters",
                "title": "Rest parameters"
            },
            "title": "Rest parameters"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/functions.json",
            "name": "functions",
            "slug": "JavaScript/Reference/Functions",
            "summary": "Generally speaking, a function is a \"subprogram\" that can be called by code external (or internal in the case of recursion) to the function. Like the program itself, a function is composed of a sequence of statements called the function body. Values can be passed to a function, and the function will return a value.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "rest-parameters",
                "title": "Rest parameters"
            },
            "title": "Functions"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/function.json",
            "name": "function",
            "slug": "JavaScript/Reference/Operators/function",
            "summary": "The function keyword can be used to define a function inside an expression.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "rest-parameters",
                "title": "Rest parameters"
            },
            "title": "Function expression"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "function",
            "slug": "JavaScript/Reference/Statements/function",
            "summary": "The function declaration (function statement) defines a function with the specified parameters.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "rest-parameters",
                "title": "Rest parameters"
            },
            "title": "function declaration"
        }
    ],
    "sec-method-definitions": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/functions.json",
            "name": "get",
            "slug": "JavaScript/Reference/Functions/get",
            "summary": "The get syntax binds an object property to a function that will be called when that property is looked up.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "9.5"
                },
                "opera_android": {
                    "version_added": "14"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "getter"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/functions.json",
            "name": "method_definitions",
            "slug": "JavaScript/Reference/Functions/Method_definitions",
            "summary": "Starting with ECMAScript 2015, a shorter syntax for method definitions on objects initializers is introduced. It is a shorthand for a function assigned to the method's name.",
            "support": {
                "chrome": {
                    "version_added": "39"
                },
                "chrome_android": {
                    "version_added": "39"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": {
                    "version_added": "34"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "26"
                },
                "opera_android": {
                    "version_added": "26"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "39"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Method definitions"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/functions.json",
            "name": "set",
            "slug": "JavaScript/Reference/Functions/set",
            "summary": "The set syntax binds an object property to a function to be called when there is an attempt to set that property.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "9"
                },
                "nodejs": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "9.5"
                },
                "opera_android": {
                    "version_added": "14"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "setter"
        }
    ],
    "sec-template-literals": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/grammar.json",
            "name": "template_literals",
            "slug": "JavaScript/Reference/Template_literals",
            "summary": "Template literals are string literals allowing embedded expressions. You can use multi-line strings and string interpolation features with them. ",
            "support": {
                "chrome": {
                    "version_added": "41"
                },
                "chrome_android": {
                    "version_added": "41"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": {
                    "version_added": "34"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "28"
                },
                "opera_android": {
                    "version_added": "28"
                },
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": {
                    "version_added": "9"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "41"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "template-literals",
                "title": "ES6 Template Literals (Template Strings)"
            },
            "title": "Template literals (Template strings)"
        }
    ],
    "sec-addition-operator-plus": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/addition.json",
            "name": "addition",
            "slug": "JavaScript/Reference/Operators/Addition",
            "summary": "The addition operator (+) produces the sum of numeric operands or string concatenation.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Addition (+)"
        }
    ],
    "sec-assignment-operators": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/addition_assignment.json",
            "name": "addition_assignment",
            "slug": "JavaScript/Reference/Operators/Addition_assignment",
            "summary": "The addition assignment operator (+=) adds the value of the right operand to a variable and assigns the result to the variable. The types of the two operands determine the behavior of the addition assignment operator. Addition or concatenation is possible.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Addition assignment (+=)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/assignment.json",
            "name": "assignment",
            "slug": "JavaScript/Reference/Operators/Assignment",
            "summary": "The simple assignment operator (=) is used to assign a value to a variable. The assignment operation evaluates to the assigned value. Chaining the assignment operator is possible in order to assign a single value to multiple variables",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Assignment (=)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/bitwise_and_assignment.json",
            "name": "bitwise_and_assignment",
            "slug": "JavaScript/Reference/Operators/Bitwise_AND_assignment",
            "summary": "The bitwise AND assignment operator (&=) uses the binary representation of both operands, does a bitwise AND operation on them and assigns the result to the variable.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Bitwise AND assignment (&=)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/bitwise_or_assignment.json",
            "name": "bitwise_or_assignment",
            "slug": "JavaScript/Reference/Operators/Bitwise_OR_assignment",
            "summary": "The bitwise OR assignment operator (|=) uses the binary representation of both operands, does a bitwise OR operation on them and assigns the result to the variable.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Bitwise OR assignment (|=)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/bitwise_xor_assignment.json",
            "name": "bitwise_xor_assignment",
            "slug": "JavaScript/Reference/Operators/Bitwise_XOR_assignment",
            "summary": "The bitwise XOR assignment operator (^=) uses the binary representation of both operands, does a bitwise XOR operation on them and assigns the result to the variable.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Bitwise XOR assignment (^=)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/division_assignment.json",
            "name": "division_assignment",
            "slug": "JavaScript/Reference/Operators/Division_assignment",
            "summary": "The division assignment operator (/=) divides a variable by the value of the right operand and assigns the result to the variable.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Division assignment (/=)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/left_shift_assignment.json",
            "name": "left_shift_assignment",
            "slug": "JavaScript/Reference/Operators/Left_shift_assignment",
            "summary": "The left shift assignment operator (<<=) moves the specified amount of bits to the left and assigns the result to the variable.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Left shift assignment (<<=)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/multiplication_assignment.json",
            "name": "multiplication_assignment",
            "slug": "JavaScript/Reference/Operators/Multiplication_assignment",
            "summary": "The multiplication assignment operator (*=) multiplies a variable by the value of the right operand and assigns the result to the variable.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Multiplication assignment (*=)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/remainder_assignment.json",
            "name": "remainder_assignment",
            "slug": "JavaScript/Reference/Operators/Remainder_assignment",
            "summary": "The remainder assignment operator (%=) divides a variable by the value of the right operand and assigns the remainder to the variable.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Remainder assignment (%=)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/right_shift_assignment.json",
            "name": "right_shift_assignment",
            "slug": "JavaScript/Reference/Operators/Right_shift_assignment",
            "summary": "The right shift assignment operator (>>=) moves the specified amount of bits to the right and assigns the result to the variable.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Right shift assignment (>>=)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/subtraction_assignment.json",
            "name": "substraction_assignment",
            "slug": "JavaScript/Reference/Operators/Subtraction_assignment",
            "summary": "The subtraction assignment operator (-=) subtracts the value of the right operand from a variable and assigns the result to the variable.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Subtraction assignment (-=)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/unsigned_right_shift_assignment.json",
            "name": "unsigned_right_shift_assignment",
            "slug": "JavaScript/Reference/Operators/Unsigned_right_shift_assignment",
            "summary": "The unsigned right shift assignment operator (>>>=) moves the specified amount of bits to the right and assigns the result to the variable.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Unsigned right shift assignment (>>>=)"
        }
    ],
    "sec-async-function-definitions": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/async_function_expression.json",
            "name": "async_function_expression",
            "slug": "JavaScript/Reference/Operators/async_function",
            "summary": "The async function keyword can be used to define async functions inside expressions.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "7.6.0"
                    },
                    {
                        "version_added": "7.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": {
                    "version_added": "10.3"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "async-functions",
                "title": "Async functions"
            },
            "title": "async function expression"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/await.json",
            "name": "await",
            "slug": "JavaScript/Reference/Operators/await",
            "summary": "The await operator is used to wait for a Promise. It can only be used inside an async function.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "7.6.0"
                    },
                    {
                        "version_added": "7.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": {
                    "version_added": "10.3"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "async-functions",
                "title": "Async functions"
            },
            "title": "await"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "async_function",
            "slug": "JavaScript/Reference/Statements/async_function",
            "summary": "An async function is a function declared with the async keyword. Async functions are instances of the AsyncFunction constructor, and the await keyword is permitted within them. The async and await keywords enable asynchronous, promise-based behavior to be written in a cleaner style, avoiding the need to explicitly configure promise chains.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "7.6.0"
                    },
                    {
                        "version_added": "7.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": {
                    "version_added": "10.3"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "async-functions",
                "title": "Async functions"
            },
            "title": "async function"
        }
    ],
    "prod-BitwiseANDExpression": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/bitwise_and.json",
            "name": "bitwise_and",
            "slug": "JavaScript/Reference/Operators/Bitwise_AND",
            "summary": "The bitwise AND operator (&) returns a 1 in each bit position for which the corresponding bits of both operands are 1s.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Bitwise AND (&)"
        }
    ],
    "sec-bitwise-not-operator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/bitwise_not.json",
            "name": "bitwise_not",
            "slug": "JavaScript/Reference/Operators/Bitwise_NOT",
            "summary": "The bitwise NOT operator (~) inverts the bits of its operand.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Bitwise NOT (~)"
        }
    ],
    "prod-BitwiseORExpression": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/bitwise_or.json",
            "name": "bitwise_or",
            "slug": "JavaScript/Reference/Operators/Bitwise_OR",
            "summary": "The bitwise OR operator (|) returns a 1 in each bit position for which the corresponding bits of either or both operands are 1s.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Bitwise OR (|)"
        }
    ],
    "prod-BitwiseXORExpression": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/bitwise_xor.json",
            "name": "bitwise_xor",
            "slug": "JavaScript/Reference/Operators/Bitwise_XOR",
            "summary": "The bitwise XOR operator (^) returns a 1 in each bit position for which the corresponding bits of either but not both operands are 1s.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Bitwise XOR (^)"
        }
    ],
    "sec-comma-operator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/comma.json",
            "name": "comma",
            "slug": "JavaScript/Reference/Operators/Comma_operator",
            "summary": "The comma operator (,) evaluates each of its operands (from left to right) and returns the value of the last operand. This lets you create a compound expression in which multiple expressions are evaluated, with the compound expression's final value being the value of the rightmost of its member expressions. This is commonly used to provide multiple parameters to a for loop.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Comma operator (,)"
        }
    ],
    "sec-conditional-operator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/conditional.json",
            "name": "conditional",
            "slug": "JavaScript/Reference/Operators/Conditional_Operator",
            "summary": "The conditional (ternary) operator is the only JavaScript operator that takes three operands: a condition followed by a question mark (?), then an expression to execute if the condition is truthy followed by a colon (:), and finally the expression to execute if the condition is falsy.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Conditional (ternary) operator"
        }
    ],
    "sec-postfix-decrement-operator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/decrement.json",
            "name": "decrement",
            "slug": "JavaScript/Reference/Operators/Decrement",
            "summary": "The decrement operator (--) decrements (subtracts one from) its operand and returns a value.",
            "support": {
                "chrome": {
                    "version_added": "2"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "4"
                },
                "safari_ios": {
                    "version_added": "3.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Decrement (--)"
        }
    ],
    "sec-delete-operator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/delete.json",
            "name": "delete",
            "slug": "JavaScript/Reference/Operators/delete",
            "summary": "The JavaScript delete operator removes a property from an object; if no more references to the same property are held, it is eventually released automatically.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "9"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "delete operator"
        }
    ],
    "sec-destructuring-assignment": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/destructuring.json",
            "name": "destructuring",
            "slug": "JavaScript/Reference/Operators/Destructuring_assignment",
            "summary": "The destructuring assignment syntax is a JavaScript expression that makes it possible to unpack values from arrays, or properties from objects, into distinct variables.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "41",
                    "notes": "Firefox provided a non-standard destructuring implementation from Firefox 2 to 40."
                },
                "firefox_android": {
                    "version_added": "41",
                    "notes": "Firefox provided a non-standard destructuring implementation from Firefox 2 to 40."
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Destructuring assignment"
        }
    ],
    "sec-multiplicative-operators": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/division.json",
            "name": "division",
            "slug": "JavaScript/Reference/Operators/Division",
            "summary": "The division operator (/) produces the quotient of its operands where the left operand is the dividend and the right operand is the divisor.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Division (/)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/multiplication.json",
            "name": "multiplication",
            "slug": "JavaScript/Reference/Operators/Multiplication",
            "summary": "The multiplication operator (*) produces the product of the operands.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Multiplication (*)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/remainder.json",
            "name": "remainder",
            "slug": "JavaScript/Reference/Operators/Remainder",
            "summary": "The remainder operator (%) returns the remainder left over when one operand is divided by a second operand. It always takes the sign of the dividend.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Remainder (%)"
        }
    ],
    "sec-equality-operators": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/equality.json",
            "name": "equality",
            "slug": "JavaScript/Reference/Operators/Equality",
            "summary": "The equality operator (==) checks whether its two operands are equal, returning a Boolean result. Unlike the strict equality operator, it attempts to convert and compare operands that are of different types.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Equality (==)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/inequality.json",
            "name": "inequality",
            "slug": "JavaScript/Reference/Operators/Inequality",
            "summary": "The inequality operator (!=) checks whether its two operands are not equal, returning a Boolean result. Unlike the strict inequality operator, it attempts to convert and compare operands that are of different types.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Inequality (!=)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/strict_equality.json",
            "name": "strict_equality",
            "slug": "JavaScript/Reference/Operators/Strict_equality",
            "summary": "The strict equality operator (===) checks whether its two operands are equal, returning a Boolean result. Unlike the equality operator, the strict equality operator always considers operands of different types to be different.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Strict equality (===)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/strict_inequality.json",
            "name": "strict_inequality",
            "slug": "JavaScript/Reference/Operators/Strict_inequality",
            "summary": "The strict inequality operator (!==) checks whether its two operands are not equal, returning a Boolean result. Unlike the inequality operator, the strict inequality operator always considers operands of different types to be different.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Strict inequality (!==)"
        }
    ],
    "sec-exp-operator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/exponentiation.json",
            "name": "exponentiation",
            "slug": "JavaScript/Reference/Operators/Exponentiation",
            "summary": "The exponentiation operator (**) returns the result of raising the first operand to the power of the second operand. It is equivalent to Math.pow, except it also accepts BigInts as operands.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": {
                    "version_added": "52"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "7.0.0"
                    },
                    {
                        "version_added": "6.5.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "39"
                },
                "opera_android": {
                    "version_added": "41"
                },
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": {
                    "version_added": "10.3"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "51"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Exponentiation (**)"
        }
    ],
    "sec-generator-function-definitions": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/function_star.json",
            "name": "function_star",
            "slug": "JavaScript/Reference/Operators/function*",
            "summary": "The function* keyword can be used to define a generator function inside an expression.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "26"
                },
                "firefox_android": {
                    "version_added": "26"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "4.0.0"
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "es6-generators",
                "title": "ES6 Generators"
            },
            "title": "function* expression"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "generator_function",
            "slug": "JavaScript/Reference/Statements/function*",
            "summary": "The function* declaration (function keyword followed by an asterisk) defines a generator function, which returns a Generator object.",
            "support": {
                "chrome": {
                    "version_added": "39"
                },
                "chrome_android": {
                    "version_added": "39"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "26"
                },
                "firefox_android": {
                    "version_added": "26"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "4.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "26"
                },
                "opera_android": {
                    "version_added": "26"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "39"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "es6-generators",
                "title": "ES6 Generators"
            },
            "title": "function*"
        }
    ],
    "sec-relational-operators": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/greater_than.json",
            "name": "greater_than",
            "slug": "JavaScript/Reference/Operators/Greater_than",
            "summary": "The greater than operator (>) returns true if the left operand is greater than the right operand, and false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Greater than (>)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/greater_than_or_equal.json",
            "name": "greater_than_or_equal",
            "slug": "JavaScript/Reference/Operators/Greater_than_or_equal",
            "summary": "The greater than or equal operator (>=) returns true if the left operand is greater than or equal to the right operand, and false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Greater than or equal (>=)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/in.json",
            "name": "in",
            "slug": "JavaScript/Reference/Operators/in",
            "summary": "The in operator returns true if the specified property is in the specified object or its prototype chain.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5.5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "in operator"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/instanceof.json",
            "name": "instanceof",
            "slug": "JavaScript/Reference/Operators/instanceof",
            "summary": "The instanceof operator tests to see if the prototype property of a constructor appears anywhere in the prototype chain of an object. The return value is a boolean value.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "instanceof"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/less_than.json",
            "name": "less_than",
            "slug": "JavaScript/Reference/Operators/Less_than",
            "summary": "The less than operator (<) returns true if the left operand is less than the right operand, and false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Less than (<)"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/less_than_or_equal.json",
            "name": "less_than_or_equal",
            "slug": "JavaScript/Reference/Operators/Less_than_or_equal",
            "summary": "The less than or equal operator (<=) returns true if the left operand is less than or equal to the right operand, and false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Less than or equal (<=)"
        }
    ],
    "sec-grouping-operator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/grouping.json",
            "name": "grouping",
            "slug": "JavaScript/Reference/Operators/Grouping",
            "summary": "The grouping operator ( ) controls the precedence of evaluation in expressions.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Grouping operator ( )"
        }
    ],
    "sec-postfix-increment-operator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/increment.json",
            "name": "increment",
            "slug": "JavaScript/Reference/Operators/Increment",
            "summary": "The increment operator (++) increments (adds one to) its operand and returns a value.",
            "support": {
                "chrome": {
                    "version_added": "2"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "4"
                },
                "safari_ios": {
                    "version_added": "3.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Increment (++)"
        }
    ],
    "prod-LogicalANDExpression": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/logical_and.json",
            "name": "logical_and",
            "slug": "JavaScript/Reference/Operators/Logical_AND",
            "summary": "The logical AND (&&) operator (logical conjunction) for a set of operands is true if and only if all of its operands are true. It is typically used with Boolean (logical) values. When it is, it returns a Boolean value. However, the && operator actually returns the value of one of the specified operands, so if this operator is used with non-Boolean values, it will return a non-Boolean value.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Logical AND (&&)"
        }
    ],
    "sec-logical-not-operator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/logical_not.json",
            "name": "logical_not",
            "slug": "JavaScript/Reference/Operators/Logical_NOT",
            "summary": "The logical NOT (!) operator (logical complement, negation) takes truth to falsity and vice versa. It is typically used with Boolean (logical) values. When used with non-Boolean values, it returns false if its single operand can be converted to true; otherwise, returns true.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Logical NOT (!)"
        }
    ],
    "prod-LogicalORExpression": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/logical_or.json",
            "name": "logical_or",
            "slug": "JavaScript/Reference/Operators/Logical_OR",
            "summary": "The logical OR (||) operator (logical disjunction) for a set of operands is true if and only if one or more of its operands is true. It is typically used with Boolean (logical) values. When it is, it returns a Boolean value. However, the || operator actually returns the value of one of the specified operands, so if this operator is used with non-Boolean values, it will return a non-Boolean value.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Logical OR (||)"
        }
    ],
    "sec-new-operator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/new.json",
            "name": "new",
            "slug": "JavaScript/Reference/Operators/new",
            "summary": "The new operator lets developers create an instance of a user-defined object type or of one of the built-in object types that has a constructor function.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "new operator"
        }
    ],
    "sec-built-in-function-objects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/new_target.json",
            "name": "new_target",
            "slug": "JavaScript/Reference/Operators/new.target",
            "summary": "The new.target pseudo-property lets you detect whether a function or constructor was called using the new operator. In constructors and functions invoked using the new operator, new.target returns a reference to the constructor or function. In normal function calls, new.target is undefined.",
            "support": {
                "chrome": {
                    "version_added": "46"
                },
                "chrome_android": {
                    "version_added": "46"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "41"
                },
                "firefox_android": {
                    "version_added": "41"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "5.0.0"
                },
                "opera": {
                    "version_added": "33"
                },
                "opera_android": {
                    "version_added": "33"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "46"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "new.target"
        }
    ],
    "prod-CoalesceExpression": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/nullish_coalescing.json",
            "name": "nullish_coalescing",
            "slug": "JavaScript/Reference/Operators/Nullish_coalescing_operator",
            "summary": "The nullish coalescing operator (??) is a logical operator that returns its right-hand side operand when its left-hand side operand is null or undefined, and otherwise returns its left-hand side operand.",
            "support": {
                "chrome": {
                    "version_added": "80"
                },
                "chrome_android": {
                    "version_added": "80"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "72"
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "14.0.0"
                },
                "opera": {
                    "version_added": "67"
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "13.1"
                },
                "safari_ios": {
                    "version_added": "13.4"
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": "80"
                },
                "edge_blink": {
                    "version_added": "80"
                }
            },
            "title": "Nullish coalescing operator (??)"
        }
    ],
    "sec-object-initializer": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/object_initializer.json",
            "name": "object_initializer",
            "slug": "JavaScript/Reference/Operators/Object_initializer",
            "summary": "Objects can be initialized using new Object(), Object.create(), or using the literal notation (initializer notation). An object initializer is a comma-delimited list of zero or more pairs of property names and associated values of an object, enclosed in curly braces ({}).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "1"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Object initializer"
        }
    ],
    "sec-property-accessors": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/property_accessors.json",
            "name": "property_accessors",
            "slug": "JavaScript/Reference/Operators/Property_Accessors",
            "summary": "Property accessors provide access to an object's properties by using the dot notation or the bracket notation.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Property accessors"
        }
    ],
    "sec-subtraction-operator-minus": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/subtraction.json",
            "name": "subtraction",
            "slug": "JavaScript/Reference/Operators/Subtraction",
            "summary": "The subtraction operator (-) subtracts the two operands, producing their difference.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Subtraction (-)"
        }
    ],
    "sec-super-keyword": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/super.json",
            "name": "super",
            "slug": "JavaScript/Reference/Operators/super",
            "summary": "The super keyword is used to access and call functions on an object's parent.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": {
                    "version_added": "42"
                },
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "45"
                },
                "firefox_android": {
                    "version_added": "45"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "29"
                },
                "opera_android": {
                    "version_added": "29"
                },
                "safari": {
                    "version_added": "7"
                },
                "safari_ios": {
                    "version_added": "7"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "42"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "super"
        }
    ],
    "sec-this-keyword": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/this.json",
            "name": "this",
            "slug": "JavaScript/Reference/Operators/this",
            "summary": "A function's this keyword behaves a little differently in JavaScript compared to other languages. It also has some differences between strict mode and non-strict mode.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "9.5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "this"
        }
    ],
    "sec-typeof-operator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/typeof.json",
            "name": "typeof",
            "slug": "JavaScript/Reference/Operators/typeof",
            "summary": "The typeof operator returns a string indicating the type of the unevaluated operand.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "typeof"
        }
    ],
    "sec-unary-minus-operator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/unary_negation.json",
            "name": "unary_negation",
            "slug": "JavaScript/Reference/Operators/Unary_negation",
            "summary": "The unary negation operator (-) precedes its operand and negates it.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Unary negation (-)"
        }
    ],
    "sec-unary-plus-operator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/unary_plus.json",
            "name": "unary_plus",
            "slug": "JavaScript/Reference/Operators/Unary_plus",
            "summary": "The unary plus operator (+) precedes its operand and evaluates to its operand but attempts to convert it into a number, if it isn't already.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Unary plus (+)"
        }
    ],
    "sec-void-operator": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/void.json",
            "name": "void",
            "slug": "JavaScript/Reference/Operators/void",
            "summary": "The void operator evaluates the given expression and then returns undefined.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3.2"
                },
                "safari_ios": {
                    "version_added": "3"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "void operator"
        }
    ],
    "prod-YieldExpression": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/yield.json",
            "name": "yield",
            "slug": "JavaScript/Reference/Operators/yield",
            "summary": "The yield keyword is used to pause and resume a generator function (function* or legacy generator function).",
            "support": {
                "chrome": {
                    "version_added": "39"
                },
                "chrome_android": {
                    "version_added": "39"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "26",
                    "notes": [
                        "Starting with Firefox 33, the parsing of the <code>yield</code> expression has been updated to conform with the ES2015 specification.",
                        "Starting with Firefox 29, an <code>IteratorResult</code> object returned for completed generator function."
                    ]
                },
                "firefox_android": {
                    "version_added": "26",
                    "notes": [
                        "Starting with Firefox 33, the parsing of the <code>yield</code> expression has been updated to conform with the ES2015 specification.",
                        "Starting with Firefox 29, an <code>IteratorResult</code> object returned for completed generator function."
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "4.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "26"
                },
                "opera_android": {
                    "version_added": "26"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "39"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "yield"
        }
    ],
    "sec-generator-function-definitions-runtime-semantics-evaluation": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/operators/yield_star.json",
            "name": "yield_star",
            "slug": "JavaScript/Reference/Operators/yield*",
            "summary": "The yield* expression is used to delegate to another generator or iterable object.",
            "support": {
                "chrome": {
                    "version_added": "39"
                },
                "chrome_android": {
                    "version_added": "39"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "27",
                    "notes": "Starting with Firefox 33, the parsing of the <code>yield</code> expression has been updated to conform with the ES2015 specification."
                },
                "firefox_android": {
                    "version_added": "27",
                    "notes": "Starting with Firefox 33, the parsing of the <code>yield</code> expression has been updated to conform with the ES2015 specification."
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "4.0.0"
                    },
                    {
                        "version_added": "0.12",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "26"
                },
                "opera_android": {
                    "version_added": "26"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": "39"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "yield*"
        }
    ],
    "sec-block": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "block",
            "slug": "JavaScript/Reference/Statements/block",
            "summary": "A block statement (or compound statement in other languages) is used to group zero or more statements. The block is delimited by a pair of braces (\"curly brackets\") and may optionally be labelled:",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "block"
        }
    ],
    "sec-break-statement": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "break",
            "slug": "JavaScript/Reference/Statements/break",
            "summary": "The break statement terminates the current loop, switch, or label statement and transfers program control to the statement following the terminated statement.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "break"
        }
    ],
    "sec-let-and-const-declarations": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "const",
            "slug": "JavaScript/Reference/Statements/const",
            "summary": "Constants are block-scoped, much like variables declared using the let keyword. The value of a constant can't be changed through reassignment, and it can't be redeclared.",
            "support": {
                "chrome": {
                    "version_added": "21"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "36",
                    "notes": [
                        "Prior to Firefox 13, <code>const</code> is implemented, but re-assignment is not failing.",
                        "Prior to Firefox 46, a <code>TypeError</code> was thrown on redeclaration instead of a <code>SyntaxError</code>."
                    ]
                },
                "firefox_android": {
                    "version_added": "36",
                    "notes": [
                        "Prior to Firefox 13, <code>const</code> is implemented, but re-assignment is not failing.",
                        "Prior to Firefox 46, a <code>TypeError</code> was thrown on redeclaration instead of a <code>SyntaxError</code>."
                    ]
                },
                "ie": {
                    "version_added": "11"
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "9"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "6"
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "let",
                "title": "let"
            },
            "title": "const"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "let",
            "slug": "JavaScript/Reference/Statements/let",
            "summary": "The let statement declares a block-scoped local variable, optionally initializing it to a value.",
            "support": {
                "chrome": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_added": "48",
                        "version_removed": "49",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Enable Experimental JavaScript Features"
                            }
                        ],
                        "notes": "Support outside of <a href='https://developer.mozilla.org/docs/Web/JavaScript/Reference/Strict_mode'>strict mode</a>."
                    },
                    {
                        "version_added": "41",
                        "version_removed": "49",
                        "partial_implementation": true,
                        "notes": "<a href='https://developer.mozilla.org/docs/Web/JavaScript/Reference/Strict_mode'>Strict mode</a> is required."
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_added": "48",
                        "version_removed": "49",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Enable Experimental JavaScript Features"
                            }
                        ],
                        "notes": "Support outside of <a href='https://developer.mozilla.org/docs/Web/JavaScript/Reference/Strict_mode'>strict mode</a>."
                    },
                    {
                        "version_added": "41",
                        "version_removed": "49",
                        "partial_implementation": true,
                        "notes": "<a href='https://developer.mozilla.org/docs/Web/JavaScript/Reference/Strict_mode'>Strict mode</a> is required."
                    }
                ],
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "44",
                    "notes": [
                        "Prior to Firefox 44, <code>let</code> is only available to code blocks in HTML wrapped in a <code>&lt;script type=\"application/javascript;version=1.7\"&gt;</code> block (or higher version) and has different semantics (e.g. no temporal dead zone).",
                        "Prior to Firefox 46, a <code>TypeError</code> is thrown on redeclaration instead of a <code>SyntaxError</code>.",
                        "Firefox 54 adds support of <code>let</code> in workers."
                    ]
                },
                "firefox_android": {
                    "version_added": "44",
                    "notes": [
                        "Prior to Firefox 44, <code>let</code> is only available to code blocks in HTML wrapped in a <code>&lt;script type=\"application/javascript;version=1.7\"&gt;</code> block (or higher version) and has different semantics (e.g. no temporal dead zone).",
                        "Prior to Firefox 46, a <code>TypeError</code> is thrown on redeclaration instead of a <code>SyntaxError</code>.",
                        "Firefox 54 adds support of <code>let</code> in workers."
                    ]
                },
                "ie": {
                    "version_added": "11",
                    "partial_implementation": true,
                    "notes": "In Internet Explorer, <code>let</code> within a <code>for</code> loop initializer does not create a separate variable for each loop iteration as defined by ES2015. Instead, it behaves as though the loop were wrapped in a scoping block with the <code>let</code> immediately before the loop."
                },
                "nodejs": {
                    "version_added": "6.0.0"
                },
                "opera": {
                    "version_added": "17"
                },
                "opera_android": {
                    "version_added": "18"
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": "10"
                },
                "samsunginternet_android": [
                    {
                        "version_added": "5.0"
                    },
                    {
                        "notes": "<a href='https://developer.mozilla.org/docs/Web/JavaScript/Reference/Strict_mode'>Strict mode</a> is required.",
                        "partial_implementation": true,
                        "version_added": "4.0",
                        "version_removed": "5.0"
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_added": "41",
                        "version_removed": "49",
                        "partial_implementation": true,
                        "notes": "<a href='https://developer.mozilla.org/docs/Web/JavaScript/Reference/Strict_mode'>Strict mode</a> is required."
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "49",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "Enable Experimental JavaScript Features"
                            }
                        ],
                        "notes": "Support outside of <a href='https://developer.mozilla.org/docs/Web/JavaScript/Reference/Strict_mode'>strict mode</a>."
                    },
                    {
                        "version_added": false,
                        "version_removed": "49",
                        "partial_implementation": true,
                        "notes": "<a href='https://developer.mozilla.org/docs/Web/JavaScript/Reference/Strict_mode'>Strict mode</a> is required."
                    }
                ]
            },
            "caniuse": {
                "feature": "let",
                "title": "let"
            },
            "title": "let"
        }
    ],
    "sec-continue-statement": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "continue",
            "slug": "JavaScript/Reference/Statements/continue",
            "summary": "The continue statement terminates execution of the statements in the current iteration of the current or labeled loop, and continues execution of the loop with the next iteration.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "continue"
        }
    ],
    "sec-debugger-statement": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "debugger",
            "slug": "JavaScript/Reference/Statements/debugger",
            "summary": "The debugger statement invokes any available debugging functionality, such as setting a breakpoint. If no debugging functionality is available, this statement has no effect.",
            "support": {
                "chrome": {
                    "version_added": "5"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "10"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "debugger"
        }
    ],
    "sec-do-while-statement": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "do_while",
            "slug": "JavaScript/Reference/Statements/do...while",
            "summary": "The do...while statement creates a loop that executes a specified statement until the test condition evaluates to false. The condition is evaluated after executing the statement, resulting in the specified statement executing at least once.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "do...while"
        }
    ],
    "sec-empty-statement": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "empty",
            "slug": "JavaScript/Reference/Statements/Empty",
            "summary": "An empty statement is used to provide no statement, although the JavaScript syntax would expect one.",
            "support": {
                "chrome": {
                    "version_added": "3"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "4.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "empty"
        }
    ],
    "sec-exports": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "default",
            "slug": "JavaScript/Reference/Statements/default",
            "summary": "The switch statement evaluates an expression, matching the expression's value to a case clause, and executes statements associated with that case, as well as statements in cases that follow the matching case.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": {
                    "version_added": "61"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": [
                    {
                        "version_added": "60"
                    },
                    {
                        "version_added": "54",
                        "version_removed": "60",
                        "flags": [
                            {
                                "name": "dom.moduleScripts.enabled",
                                "type": "preference"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "60"
                    },
                    {
                        "version_added": "54",
                        "version_removed": "60",
                        "flags": [
                            {
                                "name": "dom.moduleScripts.enabled",
                                "type": "preference"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "13.2.0",
                        "notes": "Modules must either have a filename ending in <code>.mjs</code>, or the nearest parent <code>package.json</code> file must contain <code>\"type\": \"module\"</code>. See Node's <a href='https://nodejs.org/api/esm.html#esm_enabling'>ECMAScript Modules documentation</a> for more details."
                    },
                    {
                        "version_added": "12.0.0",
                        "flags": [
                            {
                                "name": "--experimental-modules",
                                "type": "runtime_flag"
                            }
                        ],
                        "notes": "Modules must either have a filename ending in <code>.mjs</code>, or the nearest parent <code>package.json</code> file must contain <code>\"type\": \"module\"</code>. See Node's <a href='https://nodejs.org/docs/latest-v12.x/api/esm.html#esm_enabling'>ECMAScript Modules documentation</a> for more details."
                    },
                    {
                        "version_added": "8.5.0",
                        "flags": [
                            {
                                "name": "--experimental-modules",
                                "type": "runtime_flag"
                            }
                        ],
                        "notes": "Module filenames must end with <code>.mjs</code>, not </code>.js</code>. See Node's <a href='https://nodejs.org/docs/latest-v8.x/api/esm.html#esm_enabling'>ECMAScript Modules documentation</a> for more details."
                    }
                ],
                "opera": {
                    "version_added": "48"
                },
                "opera_android": {
                    "version_added": "45"
                },
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": {
                    "version_added": "10.3"
                },
                "samsunginternet_android": {
                    "version_added": "8.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "switch"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "javascript/statements.json",
            "name": "namespace",
            "slug": "JavaScript/Reference/Statements/export",
            "summary": "The export statement is used when creating JavaScript modules to export live bindings to functions, objects, or primitive values from the module so they can be used by other programs with the import statement. Bindings that are exported can still be modified locally; when imported, although they can only be read by the importing module the value updates whenever it is updated by the exporting module.",
            "support": {
                "chrome": {
                    "version_added": "72"
                },
                "chrome_android": {
                    "version_added": "72"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "80"
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "12.0.0"
                },
                "opera": {
                    "version_added": "60"
                },
                "opera_android": {
                    "version_added": "51"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "export"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "export",
            "slug": "JavaScript/Reference/Statements/export",
            "summary": "The export statement is used when creating JavaScript modules to export live bindings to functions, objects, or primitive values from the module so they can be used by other programs with the import statement. Bindings that are exported can still be modified locally; when imported, although they can only be read by the importing module the value updates whenever it is updated by the exporting module.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": {
                    "version_added": "61"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": [
                    {
                        "version_added": "60"
                    },
                    {
                        "version_added": "54",
                        "version_removed": "60",
                        "flags": [
                            {
                                "name": "dom.moduleScripts.enabled",
                                "type": "preference"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "60"
                    },
                    {
                        "version_added": "54",
                        "version_removed": "60",
                        "flags": [
                            {
                                "name": "dom.moduleScripts.enabled",
                                "type": "preference"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "13.2.0",
                        "notes": "Modules must either have a filename ending in <code>.mjs</code>, or the nearest parent <code>package.json</code> file must contain <code>\"type\": \"module\"</code>. See Node's <a href='https://nodejs.org/api/esm.html#esm_enabling'>ECMAScript Modules documentation</a> for more details."
                    },
                    {
                        "version_added": "12.0.0",
                        "flags": [
                            {
                                "name": "--experimental-modules",
                                "type": "runtime_flag"
                            }
                        ],
                        "notes": "Modules must either have a filename ending in <code>.mjs</code>, or the nearest parent <code>package.json</code> file must contain <code>\"type\": \"module\"</code>. See Node's <a href='https://nodejs.org/docs/latest-v12.x/api/esm.html#esm_enabling'>ECMAScript Modules documentation</a> for more details."
                    },
                    {
                        "version_added": "8.5.0",
                        "flags": [
                            {
                                "name": "--experimental-modules",
                                "type": "runtime_flag"
                            }
                        ],
                        "notes": "Module filenames must end with <code>.mjs</code>, not </code>.js</code>. See Node's <a href='https://nodejs.org/docs/latest-v8.x/api/esm.html#esm_enabling'>ECMAScript Modules documentation</a> for more details."
                    }
                ],
                "opera": {
                    "version_added": "48"
                },
                "opera_android": {
                    "version_added": "45"
                },
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": {
                    "version_added": "10.3"
                },
                "samsunginternet_android": {
                    "version_added": "8.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "export"
        }
    ],
    "sec-for-statement": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "for",
            "slug": "JavaScript/Reference/Statements/for",
            "summary": "The for statement creates a loop that consists of three optional expressions, enclosed in parentheses and separated by semicolons, followed by a statement (usually a block statement) to be executed in the loop.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "for"
        }
    ],
    "sec-for-in-and-for-of-statements": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "for_await_of",
            "slug": "JavaScript/Reference/Statements/for-await...of",
            "summary": "The for await...of statement creates a loop iterating over async iterable objects as well as on sync iterables, including: built-in String, Array, Array-like objects (e.g., arguments or NodeList), TypedArray, Map, Set, and user-defined async/sync iterables. It invokes a custom iteration hook with statements to be executed for the value of each distinct property of the object. Like the await operator, the statement can only be used inside an async function.",
            "support": {
                "chrome": {
                    "version_added": "63"
                },
                "chrome_android": {
                    "version_added": "63"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "57"
                },
                "firefox_android": {
                    "version_added": "57"
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "10.0.0"
                    },
                    {
                        "version_added": "8.10.0",
                        "version_removed": "10.0.0",
                        "flags": [
                            {
                                "type": "runtime_flag",
                                "name": "--harmony-async-iteration"
                            }
                        ]
                    }
                ],
                "opera": {
                    "version_added": "50"
                },
                "opera_android": {
                    "version_added": "46"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "8.0"
                },
                "webview_android": {
                    "version_added": "63"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "for await...of"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "for_in",
            "slug": "JavaScript/Reference/Statements/for...in",
            "summary": "The for...in statement iterates over all enumerable properties of an object that are keyed by strings (ignoring ones keyed by Symbols), including inherited enumerable properties.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "6"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "2"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "for...in"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "for_of",
            "slug": "JavaScript/Reference/Statements/for...of",
            "summary": "The for...of statement creates a loop iterating over iterable objects, including: built-in String, Array, array-like objects (e.g., arguments or NodeList), TypedArray, Map, Set, and user-defined iterables. It invokes a custom iteration hook with statements to be executed for the value of each distinct property of the object.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": {
                    "version_added": "38"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "13",
                    "notes": "Prior to Firefox 51, using the <code>for...of</code> loop construct with the <code>const</code> keyword threw a <code>SyntaxError</code> (\"missing = in const declaration\")."
                },
                "firefox_android": {
                    "version_added": "14",
                    "notes": "Prior to Firefox 51, using the <code>for...of</code> loop construct with the <code>const</code> keyword threw a <code>SyntaxError</code> (\"missing = in const declaration\")."
                },
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "0.12"
                },
                "opera": {
                    "version_added": "25"
                },
                "opera_android": {
                    "version_added": "25"
                },
                "safari": {
                    "version_added": "7"
                },
                "safari_ios": {
                    "version_added": "7"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "38"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "for...of"
        }
    ],
    "sec-if-statement": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "if_else",
            "slug": "JavaScript/Reference/Statements/if...else",
            "summary": "The if statement executes a statement if a specified condition is truthy. If the condition is falsy, another statement can be executed.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "if...else"
        }
    ],
    "sec-imports": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "import",
            "slug": "JavaScript/Reference/Statements/import",
            "summary": "The static import statement is used to import read only live bindings which are exported by another module. ",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": {
                    "version_added": "61"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": [
                    {
                        "version_added": "60"
                    },
                    {
                        "version_added": "54",
                        "version_removed": "60",
                        "flags": [
                            {
                                "name": "dom.moduleScripts.enabled",
                                "type": "preference"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "60"
                    },
                    {
                        "version_added": "54",
                        "version_removed": "60",
                        "flags": [
                            {
                                "name": "dom.moduleScripts.enabled",
                                "type": "preference"
                            }
                        ]
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "13.2.0",
                        "notes": "Modules must either have a filename ending in <code>.mjs</code>, or the nearest parent <code>package.json</code> file must contain <code>\"type\": \"module\"</code>. See Node's <a href='https://nodejs.org/api/esm.html#esm_enabling'>ECMAScript Modules documentation</a> for more details."
                    },
                    {
                        "version_added": "12.0.0",
                        "flags": [
                            {
                                "name": "--experimental-modules",
                                "type": "runtime_flag"
                            }
                        ],
                        "notes": "Modules must either have a filename ending in <code>.mjs</code>, or the nearest parent <code>package.json</code> file must contain <code>\"type\": \"module\"</code>. See Node's <a href='https://nodejs.org/docs/latest-v12.x/api/esm.html#esm_enabling'>ECMAScript Modules documentation</a> for more details."
                    },
                    {
                        "version_added": "8.5.0",
                        "flags": [
                            {
                                "name": "--experimental-modules",
                                "type": "runtime_flag"
                            }
                        ],
                        "notes": "Module filenames must end with <code>.mjs</code>, not </code>.js</code>. See Node's <a href='https://nodejs.org/docs/latest-v8.x/api/esm.html#esm_enabling'>ECMAScript Modules documentation</a> for more details."
                    }
                ],
                "opera": {
                    "version_added": "48"
                },
                "opera_android": {
                    "version_added": "45"
                },
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": {
                    "version_added": "10.3"
                },
                "samsunginternet_android": {
                    "version_added": "8.0"
                },
                "webview_android": {
                    "version_added": "61"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "import"
        }
    ],
    "sec-labelled-statements": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "label",
            "slug": "JavaScript/Reference/Statements/label",
            "summary": "The labeled statement can be used with break or continue statements. It is prefixing a statement with an identifier which you can refer to.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "label"
        }
    ],
    "sec-return-statement": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "return",
            "slug": "JavaScript/Reference/Statements/return",
            "summary": "The return statement ends function execution and specifies a value to be returned to the function caller.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "return"
        }
    ],
    "sec-switch-statement": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "switch",
            "slug": "JavaScript/Reference/Statements/switch",
            "summary": "The switch statement evaluates an expression, matching the expression's value to a case clause, and executes statements associated with that case, as well as statements in cases that follow the matching case.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "switch"
        }
    ],
    "sec-throw-statement": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "throw",
            "slug": "JavaScript/Reference/Statements/throw",
            "summary": "The throw statement throws a user-defined exception. Execution of the current function will stop (the statements after throw won't be executed), and control will be passed to the first catch block in the call stack. If no catch block exists among caller functions, the program will terminate.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "throw"
        }
    ],
    "sec-try-statement": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "try_catch",
            "slug": "JavaScript/Reference/Statements/try...catch",
            "summary": "The try...catch statement marks a block of statements to try and specifies a response should an exception be thrown.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "try...catch"
        }
    ],
    "sec-variable-statement": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "var",
            "slug": "JavaScript/Reference/Statements/var",
            "summary": "The var statement declares a function-scoped or globally-scoped variable, optionally initializing it to a value.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "var"
        }
    ],
    "sec-while-statement": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "javascript/statements.json",
            "name": "while",
            "slug": "JavaScript/Reference/Statements/while",
            "summary": "The while statement creates a loop that executes a specified statement as long as the test condition evaluates to true. The condition is evaluated before executing the statement.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "3"
                },
                "nodejs": {
                    "version_added": "0.1.100"
                },
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "while"
        }
    ]
}

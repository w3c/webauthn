{
    "dom-rtcansweroptions": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCAnswerOptions.json",
            "name": "RTCAnswerOptions",
            "slug": "API/RTCAnswerOptions",
            "summary": "The RTCAnswerOptions dictionary is used to provide optional settings when creating an SDP answer using RTCPeerConnection.createOffer() after receiving an offer from a remote peer.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCAnswerOptions"
        }
    ],
    "dom-rtccertificate": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCCertificate.json",
            "name": "RTCCertificate",
            "slug": "API/RTCCertificate",
            "summary": "The interface of the the WebRTC API provides an object represents a certificate that an RTCPeerConnection uses to authenticate.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": {
                    "version_added": "49"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCCertificate"
        }
    ],
    "dom-rtcconfiguration": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCConfiguration.json",
            "name": "RTCConfiguration",
            "slug": "API/RTCConfiguration",
            "summary": "The RTCConfiguration dictionary is used to provide configuration options for an RTCPeerConnection. It may be passed into the constructor when instantiating a connection, or used with the RTCPeerConnection.getConfiguration() and RTCPeerConnection.setConfiguration() methods, which allow inspecting and changing the configuration while a connection is established.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": {
                    "version_added": "57"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": null
                },
                "firefox_android": {
                    "version_added": null
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCConfiguration"
        }
    ],
    "dom-RTCDTMFSender-insertDTMF": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDTMFSender.json",
            "name": "insertDTMF",
            "slug": "API/RTCDTMFSender/insertDTMF",
            "summary": "The insertDTMF() method on the RTCDTMFSender interface starts sending  tones to the remote peer over the RTCPeerConnection. Sending of the tones is performed asynchronously, with tonechange events sent to the RTCDTMFSender every time a tone starts or ends.",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": {
                    "version_added": "27"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": "4.4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFSender.insertDTMF()"
        }
    ],
    "dom-rtcdtmfsender-ontonechange": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDTMFSender.json",
            "name": "ontonechange",
            "slug": "API/RTCDTMFSender/ontonechange",
            "summary": "The ontonechange property of the RTCDTMFSender interface is used to set the event handler for the tonechange event, which is sent to the RTCDTMFSender each time a tone begins or ends. The event handler receives as input a single parameter of type RTCDTMFToneChangeEvent, which describes the change.",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": {
                    "version_added": "27"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFSender.ontonechange"
        }
    ],
    "dom-RTCDTMFSender-tonebuffer": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDTMFSender.json",
            "name": "toneBuffer",
            "slug": "API/RTCDTMFSender/toneBuffer",
            "summary": "The RTCDTMFSender interface's toneBuffer property returns a string containing a list of the DTMF tones currently queued for sending to the remote peer over the RTCPeerConnection. To place tones into the buffer, call insertDTMF().",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": {
                    "version_added": "27"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": "4.4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFSender.toneBuffer"
        }
    ],
    "event-RTCDTMFSender-tonechange": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDTMFSender.json",
            "name": "tonechange_event",
            "slug": "API/RTCDTMFSender/tonechange_event",
            "summary": "The tonechange event is sent to an RTCDTMFSender by the WebRTC API to indicate when DTMF tones previously queued for sending (by calling RTCDTMFSender.insertDTMF()) begin and end.",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": {
                    "version_added": "27"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFSender: tonechange event"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDTMFToneChangeEvent.json",
            "name": "RTCDTMFToneChangeEvent",
            "slug": "API/RTCDTMFToneChangeEvent",
            "summary": "The RTCDTMFToneChangeEvent interface represents events sent to indicate that DTMF tones have started or finished playing. This interface is used by the tonechange event.",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": {
                    "version_added": "27"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": "4.4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFToneChangeEvent"
        }
    ],
    "rtcdtmfsender": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDTMFSender.json",
            "name": "RTCDTMFSender",
            "slug": "API/RTCDTMFSender",
            "summary": "Listen to these events using addEventListener() or by assigning an event listener to the oneventname property of this interface.",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": {
                    "version_added": "27"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": "4.4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFSender"
        }
    ],
    "dom-rtcdtmftonechangeevent": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDTMFToneChangeEvent.json",
            "name": "RTCDTMFToneChangeEvent",
            "slug": "API/RTCDTMFToneChangeEvent/RTCDTMFToneChangeEvent",
            "summary": "The RTCDTMFToneChangeEvent() constructor creates a new RTCDTMFToneChangeEvent.",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": {
                    "version_added": "27"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": "4.4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFToneChangeEvent.RTCDTMFToneChangeEvent()"
        }
    ],
    "dom-rtcdtmftonechangeevent-tone": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDTMFToneChangeEvent.json",
            "name": "tone",
            "slug": "API/RTCDTMFToneChangeEvent/tone",
            "summary": "The read-only property RTCDTMFToneChangeEvent.tone returns the DTMF character which has just begun to play, or an empty string (\"\"). if all queued tones have finished playing (that is, RTCDTMFSender.toneBuffer is empty).",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": {
                    "version_added": "27"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": "4.4"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFToneChangeEvent.tone"
        }
    ],
    "dom-datachannel-binarytype": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "binaryType",
            "slug": "API/RTCDataChannel/binaryType",
            "summary": "The property binaryType on the RTCDataChannel interface is a DOMString which specifies the type of JavaScript object which should be used to represent binary data received on the RTCDataChannel. Values allowed by the WebSocket.binaryType property are also permitted here: \"blob\" if Blob objects are being used or \"arraybuffer\" if ArrayBuffer objects are being used. The default is \"blob\".",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": "29"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "18"
                },
                "firefox_android": {
                    "version_added": "18"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "4.4"
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCDataChannel.binaryType"
        }
    ],
    "dom-datachannel-bufferedamount": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "bufferedAmount",
            "slug": "API/RTCDataChannel/bufferedAmount",
            "summary": "The read-only RTCDataChannel property bufferedAmount returns the number of bytes of data currently queued to be sent over the data channel.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "18"
                },
                "firefox_android": {
                    "version_added": "18"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.bufferedAmount"
        }
    ],
    "event-datachannel-bufferedamountlow": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "bufferedamountlow_event",
            "slug": "API/RTCDataChannel/bufferedamountlow_event",
            "summary": "A bufferedamountlow event is sent to an RTCDataChannel when the number of bytes currently in the outbound data transfer buffer falls below the threshold specified in bufferedAmountLowThreshold.",
            "support": {
                "chrome": {
                    "version_added": "57",
                    "notes": "The default for <code>rtcpMuxPolicy<code> is <code>require<code>."
                },
                "chrome_android": {
                    "version_added": "57",
                    "notes": "The default for <code>rtcpMuxPolicy<code> is <code>require<code>."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "44",
                    "notes": "The default for <code>rtcpMuxPolicy<code> is <code>require<code>."
                },
                "opera_android": {
                    "version_added": "43",
                    "notes": "The default for <code>rtcpMuxPolicy<code> is <code>require<code>."
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "7.0",
                    "notes": "The default for <code>rtcpMuxPolicy<code> is <code>require<code>."
                },
                "webview_android": {
                    "version_added": "57",
                    "notes": "The default for <code>rtcpMuxPolicy<code> is <code>require<code>."
                },
                "edge_blink": {
                    "version_added": "79",
                    "notes": "The default for <code>rtcpMuxPolicy<code> is <code>require<code>."
                }
            },
            "title": "RTCDataChannel: bufferedamountlow event"
        }
    ],
    "dom-rtcdatachannel-bufferedamountlowthreshold": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "bufferedAmountLowThreshold",
            "slug": "API/RTCDataChannel/bufferedAmountLowThreshold",
            "summary": "The RTCDataChannel property bufferedAmountLowThreshold is used to specify the number of bytes of buffered outgoing data that is considered \"low.\" The default value is 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.bufferedAmountLowThreshold"
        }
    ],
    "dom-rtcdatachannel-close": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "close",
            "slug": "API/RTCDataChannel/close",
            "summary": "The RTCDataChannel.close() method closes the RTCDataChannel. Either peer is permitted to call this method to initiate closure of the channel.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.close()"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "close_event",
            "slug": "API/RTCDataChannel/close_event",
            "summary": "The close event is sent to the onclose event handler on an RTCDataChannel instance when the data transport being used for the data channel has closed.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: close event"
        }
    ],
    "event-datachannel-error": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "error_event",
            "slug": "API/RTCDataChannel/error_event",
            "summary": "A WebRTC error event is sent to an RTCDataChannel object's onerror error handler when an error occurs on the data channel.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: error event"
        }
    ],
    "dom-rtcdatachannel-id": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "id",
            "slug": "API/RTCDataChannel/id",
            "summary": "The read-only RTCDataChannel property id returns an ID number (between 0 and 65,534) which uniquely identifies the RTCDataChannel.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.id"
        }
    ],
    "dom-datachannel-label": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "label",
            "slug": "API/RTCDataChannel/label",
            "summary": "The read-only RTCDataChannel property label returns a DOMString containing a name describing the data channel. These labels are not required to be unique.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.label"
        }
    ],
    "dom-datachannel-maxpacketlifetime": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "maxPacketLifeTime",
            "slug": "API/RTCDataChannel/maxPacketLifeTime",
            "summary": "The read-only RTCDataChannel property maxPacketLifeTime returns the amount of time, in milliseconds, the browser is allowed to take to attempt to transmit a message, as set when the data channel was created, or null.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "62"
                },
                "firefox_android": {
                    "version_added": "62"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.maxPacketLifeTime"
        }
    ],
    "dom-datachannel-maxretransmits": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "maxRetransmits",
            "slug": "API/RTCDataChannel/maxRetransmits",
            "summary": "The read-only RTCDataChannel property maxRetransmits returns the maximum number of times the browser should try to retransmit a message before giving up, as set when the data channel was created, or null, which indicates that there is no maximum.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "62"
                },
                "firefox_android": {
                    "version_added": "62"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.maxRetransmits"
        }
    ],
    "event-datachannel-message": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "message_event",
            "slug": "API/RTCDataChannel/message_event",
            "summary": "The WebRTC message event is sent to the onmessage event handler on an RTCDataChannel object when a message has been received from the remote peer.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: message event"
        }
    ],
    "dom-datachannel-negotiated": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "negotiated",
            "slug": "API/RTCDataChannel/negotiated",
            "summary": "The read-only RTCDataChannel property negotiated indicates whether the RTCDataChannel's connection was negotiated by the Web app (true) or by the WebRTC layer (false).",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.negotiated"
        }
    ],
    "dom-rtcdatachannel-onbufferedamountlow": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "onbufferedamountlow",
            "slug": "API/RTCDataChannel/onbufferedamountlow",
            "summary": "The RTCDataChannel.onbufferedamountlow property is an EventHandler which specifies a function the browser calls when the bufferedamountlow event is sent to the RTCDataChannel. This event, which is represented by a simple Event object, is sent when the amount of data buffered to be sent falls to or below the threshold specified by the channel's bufferedAmountLowThreshold.",
            "support": {
                "chrome": {
                    "version_added": "57",
                    "notes": "The default for <code>rtcpMuxPolicy</code> is <code>require</code>."
                },
                "chrome_android": {
                    "version_added": "57",
                    "notes": "The default for <code>rtcpMuxPolicy</code> is <code>require</code>."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "44",
                    "notes": "The default for <code>rtcpMuxPolicy</code> is <code>require</code>."
                },
                "opera_android": {
                    "version_added": "43",
                    "notes": "The default for <code>rtcpMuxPolicy</code> is <code>require</code>."
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "7.0",
                    "notes": "The default for <code>rtcpMuxPolicy</code> is <code>require</code>."
                },
                "webview_android": {
                    "version_added": "57",
                    "notes": "The default for <code>rtcpMuxPolicy</code> is <code>require</code>."
                },
                "edge_blink": {
                    "version_added": "79",
                    "notes": "The default for <code>rtcpMuxPolicy</code> is <code>require</code>."
                }
            },
            "title": "RTCDataChannel.onbufferedamountlow"
        }
    ],
    "dom-rtcdatachannel-onclose": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "onclose",
            "slug": "API/RTCDataChannel/onclose",
            "summary": "The RTCDataChannel.onclose property is an EventHandler which specifies a function to be called by the browser when the close event is received by the RTCDataChannel. This is a simple Event which indicates that the data channel has closed down.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.onclose"
        }
    ],
    "dom-rtcdatachannel-onclosing": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "onclosing",
            "slug": "API/RTCDataChannel/onclosing",
            "summary": "The RTCDataChannel.onclosing property is an EventHandler which specifies a function to be called by the browser when the closing event is received by the RTCDataChannel. This is a simple Event which indicates that the data channel is being closed, that is, RTCDataChannel transitions to \"closing\" state. For example, after RTCDataChannel.close() was called but the underlying data transport might not have been closed yet.",
            "support": {
                "chrome": {
                    "version_added": "81"
                },
                "chrome_android": {
                    "version_added": "81"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "68"
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "13.0"
                },
                "webview_android": {
                    "version_added": "81"
                },
                "edge_blink": {
                    "version_added": "81"
                }
            },
            "title": "RTCDataChannel.onclosing"
        }
    ],
    "dom-rtcdatachannel-onerror": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "onerror",
            "slug": "API/RTCDataChannel/onerror",
            "summary": "The RTCDataChannel.onerror property is an EventHandler which specifies a function to be called when the error event is received. When an error occurs on the data channel, the function receives as input an ErrorEvent object describing the error which occurred.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.onerror"
        }
    ],
    "dom-rtcdatachannel-onmessage": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "onmessage",
            "slug": "API/RTCDataChannel/onmessage",
            "summary": "The RTCDataChannel.onmessage property stores an EventHandler which specifies a function to be called when the message event is fired on the channel. This event is represented by the MessageEvent interface. This event is sent to the channel when a message is received from the other peer.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.onmessage"
        }
    ],
    "dom-rtcdatachannel-onopen": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "onopen",
            "slug": "API/RTCDataChannel/onopen",
            "summary": "The RTCDataChannel.onopen property is an EventHandler which specifies a function to be called when the open event is fired; this is a simple Event which is sent when the data channel's underlying data transport—the link over which the RTCDataChannel's messages flow—is established or re-established.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.onopen"
        }
    ],
    "dom-datachannel-ordered": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "ordered",
            "slug": "API/RTCDataChannel/ordered",
            "summary": "The read-only RTCDataChannel property ordered indicates whether or not the data channel guarantees in-order delivery of messages; the default is true, which indicates that the data channel is indeed ordered.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.ordered"
        }
    ],
    "dom-datachannel-protocol": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "protocol",
            "slug": "API/RTCDataChannel/protocol",
            "summary": "The read-only RTCDataChannel property protocol returns a DOMString containing the name of the subprotocol in use. If no protocol was specified when the data channel was created, then this property's value is \"\" (the empty string).",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.protocol"
        }
    ],
    "dom-datachannel-readystate": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "readyState",
            "slug": "API/RTCDataChannel/readyState",
            "summary": "The read-only RTCDataChannel property readyState returns an enum of type RTCDataChannelState which indicates the state of the data channel's underlying data connection.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.readyState"
        }
    ],
    "dom-rtcdatachannel-send": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "send",
            "slug": "API/RTCDataChannel/send",
            "summary": "The send() method of the RTCDataChannel interface sends data across the data channel to the remote peer.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel.send()"
        }
    ],
    "rtcdatachannel": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "RTCDataChannel",
            "slug": "API/RTCDataChannel",
            "summary": "The RTCDataChannel interface represents a network channel which can be used for bidirectional peer-to-peer transfers of arbitrary data. Every data channel is associated with an RTCPeerConnection, and each peer connection can have up to a theoretical maximum of 65,534 data channels (the actual limit may vary from browser to browser).",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": "29"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "24"
                    },
                    {
                        "alternative_name": "DataChannel",
                        "version_added": "18",
                        "version_removed": "60"
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "24"
                    },
                    {
                        "alternative_name": "DataChannel",
                        "version_added": "18",
                        "version_removed": "60"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "4.4"
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCDataChannel"
        }
    ],
    "dom-rtcdatachannelevent": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCDataChannelEvent.json",
            "name": "RTCDataChannelEvent",
            "slug": "API/RTCDataChannelEvent/RTCDataChannelEvent",
            "summary": "The RTCDataChannelEvent() constructor creates a new RTCDataChannelEvent.",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": "57"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "22"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "44"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "57"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannelEvent()"
        }
    ],
    "dom-datachannelevent-channel": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannelEvent.json",
            "name": "channel",
            "slug": "API/RTCDataChannelEvent/channel",
            "summary": "The read-only property RTCDataChannelEvent.channel returns the RTCDataChannel associated with the event.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": "28"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "22"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCDataChannelEvent.channel"
        }
    ],
    "rtcdatachannelevent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannelEvent.json",
            "name": "RTCDataChannelEvent",
            "slug": "API/RTCDataChannelEvent",
            "summary": "The RTCDataChannelEvent() constructor returns a new RTCDataChannelEvent object, which represents a datachannel event. These events sent to an RTCPeerConnection when its remote peer is asking to open an RTCDataChannel between the two peers.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": "28"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "22"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCDataChannelEvent"
        }
    ],
    "dom-rtcdtlstransport-icetransport": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCDtlsTransport.json",
            "name": "iceTransport",
            "slug": "API/RTCDtlsTransport/iceTransport",
            "summary": "The read-only RTCDtlsTransport property iceTransport contains a reference to the underlying RTCIceTransport.",
            "support": {
                "chrome": {
                    "version_added": "72"
                },
                "chrome_android": {
                    "version_added": "72"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1307996'>bug 1307996</a>."
                },
                "firefox_android": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1307996'>bug 1307996</a>."
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "60"
                },
                "opera_android": {
                    "version_added": "50"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "72"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDtlsTransport.iceTransport"
        }
    ],
    "dom-rtcdtlstransport-state": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCDtlsTransport.json",
            "name": "state",
            "slug": "API/RTCDtlsTransport/state",
            "summary": "The state read-only property of the RTCDtlsTransport interface provides information which describes a Datagram Transport Layer Security (DTLS) transport state.",
            "support": {
                "chrome": {
                    "version_added": "72"
                },
                "chrome_android": {
                    "version_added": "72"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1307996'>bug 1307996</a>."
                },
                "firefox_android": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1307996'>bug 1307996</a>."
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "60"
                },
                "opera_android": {
                    "version_added": "50"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "72"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDtlsTransport.state"
        }
    ],
    "dom-rtcdtlstransport": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCDtlsTransport.json",
            "name": "RTCDtlsTransport",
            "slug": "API/RTCDtlsTransport",
            "summary": "The RTCDtlsTransport interface provides access to information about the Datagram Transport Layer Security (DTLS) transport over which a RTCPeerConnection's RTP and RTCP packets are sent and received by its RTCRtpSender and RTCRtpReceiver objects.",
            "support": {
                "chrome": {
                    "version_added": "72"
                },
                "chrome_android": {
                    "version_added": "72"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1307996'>bug 1307996</a>."
                },
                "firefox_android": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1307996'>bug 1307996</a>."
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "60"
                },
                "opera_android": {
                    "version_added": "50"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "72"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDtlsTransport"
        }
    ],
    "dfn-rtcicecandidate": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "RTCIceCandidate",
            "slug": "API/RTCIceCandidate/RTCIceCandidate",
            "summary": "The RTCIceCandidate() constructor creates and returns a new RTCIceCandidate object, which can be configured to represent a single ICE candidate.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22",
                    "notes": "Before Firefox 68, the constructor's <code>options</code> parameter was required."
                },
                "firefox_android": {
                    "version_added": true,
                    "notes": "Before Firefox 68, the constructor's <code>options</code> parameter was required."
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCIceCandidate.RTCIceCandidate()"
        }
    ],
    "dom-rtcicecandidate-address": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "address",
            "slug": "API/RTCIceCandidate/address",
            "summary": "The RTCIceCandidate interface's read-only address property is a string providing the address of the device which is the source of the candidate.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": {
                    "version_added": "74"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": null
                },
                "firefox_android": {
                    "version_added": null
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "74"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate.address"
        }
    ],
    "dom-rtcicecandidate-candidate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "candidate",
            "slug": "API/RTCIceCandidate/candidate",
            "summary": "The read-only property candidate on the RTCIceCandidate interface returns a DOMString describing the candidate in detail.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "15"
                },
                "opera_android": {
                    "version_added": "14"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate.candidate"
        }
    ],
    "dom-rtcicecandidate-component": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "component",
            "slug": "API/RTCIceCandidate/component",
            "summary": "The read-only component property on the RTCIceCandidate interface is a string which indicates whether the candidate is an RTP or an RTCP candidate.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": {
                    "version_added": "74"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "74"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate.component"
        }
    ],
    "dom-rtcicecandidate-foundation": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "foundation",
            "slug": "API/RTCIceCandidate/foundation",
            "summary": "The RTCIceCandidate interface's read-only foundation property is a string which uniquely identifies the candidate across multiple transports.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": {
                    "version_added": "74"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": null
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "74"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate.foundation"
        }
    ],
    "dom-rtcicecandidate-port": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "port",
            "slug": "API/RTCIceCandidate/port",
            "summary": "The RTCIceCandidate interface's read-only port property contains the port number on the device at the address given by ip at which the candidate's peer can be reached.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": {
                    "version_added": "74"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "74"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate.port"
        }
    ],
    "dom-rtcicecandidate-priority": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "priority",
            "slug": "API/RTCIceCandidate/priority",
            "summary": "The RTCIceCandidate interface's read-only priority property specifies the candidate's priority according to the remote peer; the higher this value is, the better the remote peer considers the candidate to be.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": {
                    "version_added": "74"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "74"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate.priority"
        }
    ],
    "dom-rtcicecandidate-protocol": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "protocol",
            "slug": "API/RTCIceCandidate/protocol",
            "summary": "The RTCIceCandidate interface's read-only protocol property is a string which indicates whether the candidate uses UDP or TCP as its transport protocol.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": {
                    "version_added": "74"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "74"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate.protocol"
        }
    ],
    "dom-rtcicecandidate-relatedaddress": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "relatedAddress",
            "slug": "API/RTCIceCandidate/relatedAddress",
            "summary": "The RTCIceCandidate interface's read-only relatedAddress property is a string indicating the related address of a relay or reflexive candidate.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": {
                    "version_added": "74"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "74"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate.relatedAddress"
        }
    ],
    "dom-rtcicecandidate-relatedport": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "relatedPort",
            "slug": "API/RTCIceCandidate/relatedPort",
            "summary": "The RTCIceCandidate interface's read-only relatedPort property indicates the port number of reflexive or relay candidates.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": {
                    "version_added": "74"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "74"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate.relatedPort"
        }
    ],
    "dom-rtcicecandidate-sdpmid": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "sdpMid",
            "slug": "API/RTCIceCandidate/sdpMid",
            "summary": "The read-only property sdpMid on the RTCIceCandidate interface returns a DOMString specifying the media stream identification tag of the media component with which the candidate is associated.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "15"
                },
                "opera_android": {
                    "version_added": "14"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate.sdpMid"
        }
    ],
    "dom-rtcicecandidate-sdpmlineindex": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "sdpMLineIndex",
            "slug": "API/RTCIceCandidate/sdpMLineIndex",
            "summary": "The read-only sdpMLineIndex property on the RTCIceCandidate interface is a zero-based index of the m-line describing the media associated with the candidate.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "15"
                },
                "opera_android": {
                    "version_added": "14"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "1.5"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate.sdpMLineIndex"
        }
    ],
    "dom-rtcicecandidate-tcptype": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "tcpType",
            "slug": "API/RTCIceCandidate/tcpType",
            "summary": "The RTCIceCandidate interface's read-only tcpType property is included on TCP candidates to provide additional details about the candidate type.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": {
                    "version_added": "74"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "74"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate.tcpType"
        }
    ],
    "dom-rtcicecandidate-tojson": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "toJSON",
            "slug": "API/RTCIceCandidate/toJSON",
            "summary": "The RTCIceCandidate method toJSON() converts the RTCIceCandidate on which it's called into JSON in the form of an RTCIceCandidateInit object.",
            "support": {
                "chrome": {
                    "version_added": "45"
                },
                "chrome_android": {
                    "version_added": "45"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "27"
                },
                "firefox_android": {
                    "version_added": "27"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "32"
                },
                "opera_android": {
                    "version_added": "32"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "45"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate. toJSON()"
        }
    ],
    "dom-rtcicecandidate-type": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "type",
            "slug": "API/RTCIceCandidate/type",
            "summary": "The RTCIceCandidate interface's read-only type specifies the type of candidate the object represents.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": {
                    "version_added": "74"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "74"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate.type"
        }
    ],
    "dom-rtcicecandidate-usernamefragment": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "usernameFragment",
            "slug": "API/RTCIceCandidate/usernameFragment",
            "summary": "The read-only usernameFragment property on the RTCIceCandidate interface is a string indicating the username fragment (\"ufrag\") that uniquely identifies a single ICE interaction session.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": {
                    "version_added": "74"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "67"
                },
                "firefox_android": {
                    "version_added": "67"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "74"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate.usernameFragment"
        }
    ],
    "rtcicecandidate-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "RTCIceCandidate",
            "slug": "API/RTCIceCandidate",
            "summary": "The RTCIceCandidate interface—part of the WebRTC API—represents a candidate Internet Connectivity Establishment (ICE) configuration which may be used to establish an RTCPeerConnection.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCIceCandidate"
        }
    ],
    "dom-rtcicecandidateinit-candidate": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCIceCandidateInit.json",
            "name": "candidate",
            "slug": "API/RTCIceCandidateInit/candidate",
            "summary": "The optional property candidate in the RTCIceCandidateInit dictionary specifies the value of the RTCIceCandidate object's candidate property.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22",
                    "notes": "Prior to Firefox 68, the <code>candidate</code> property was required; Firefox 68 and later make it optional per a mid-2017 specification update."
                },
                "firefox_android": {
                    "version_added": true,
                    "notes": "Prior to Firefox 68, the <code>candidate</code> property was required; Firefox 68 and later make it optional per a mid-2017 specification update."
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCIceCandidateInit.candidate"
        }
    ],
    "dom-rtcicecandidateinit-sdpmid": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCIceCandidateInit.json",
            "name": "sdpMid",
            "slug": "API/RTCIceCandidateInit/sdpMid",
            "summary": "The optional property sdpMid in the RTCIceCandidateInit dictionary specifies the value of the RTCIceCandidate object's sdpMid property.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCIceCandidateInit.sdpMid"
        }
    ],
    "dom-rtcicecandidateinit-sdpmlineindex": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCIceCandidateInit.json",
            "name": "sdpMLineIndex",
            "slug": "API/RTCIceCandidateInit/sdpMLineIndex",
            "summary": "The optional property sdpMLineIndex in the RTCIceCandidateInit dictionary specifies the value of the RTCIceCandidate object's sdpMLineIndex property.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCIceCandidateInit.sdpMLineIndex"
        }
    ],
    "dom-rtcicecandidateinit-usernamefragment": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCIceCandidateInit.json",
            "name": "usernameFragment",
            "slug": "API/RTCIceCandidateInit/usernameFragment",
            "summary": "The optional property usernameFragment in the RTCIceCandidateInit dictionary specifies the value of the RTCIceCandidate object's usernameFragment property.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "67"
                },
                "firefox_android": {
                    "version_added": "67"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCIceCandidateInit.usernameFragment"
        }
    ],
    "dom-rtcicecandidateinit": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCIceCandidateInit.json",
            "name": "RTCIceCandidateInit",
            "slug": "API/RTCIceCandidateInit",
            "summary": "The WebRTC API's RTCIceCandidateInit dictionary, which contains the information needed to fundamentally describe an RTCIceCandidate.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCIceCandidateInit"
        }
    ],
    "dom-rtcicecandidatetype": [
        {
            "engines": [],
            "filename": "api/RTCIceCandidateType.json",
            "name": "RTCIceCandidateType",
            "slug": "API/RTCIceCandidateType",
            "summary": "The WebRTC API's RTCIceCandidateType enumerated type provides a set of DOMString values representing the types of ICE candidate that can arrive.",
            "support": {
                "chrome": {
                    "version_added": false,
                    "notes": "An <code>RTCIceCandidate</code> object's <code>type</code> is not maintained by this browser."
                },
                "chrome_android": {
                    "version_added": false,
                    "notes": "An <code>RTCIceCandidate</code> object's <code>type</code> is not maintained by this browser."
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false,
                    "notes": "An <code>RTCIceCandidate</code> object's <code>type</code> is not maintained by this browser."
                },
                "firefox_android": {
                    "version_added": false,
                    "notes": "An <code>RTCIceCandidate</code> object's <code>type</code> is not maintained by this browser."
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": false,
                    "notes": "An <code>RTCIceCandidate</code> object's <code>type</code> is not maintained by this browser."
                },
                "webview_android": {
                    "version_added": false,
                    "notes": "An <code>RTCIceCandidate</code> object's <code>type</code> is not maintained by this browser."
                },
                "edge_blink": {
                    "version_added": false,
                    "notes": "An <code>RTCIceCandidate</code> object's <code>type</code> is not maintained by this browser."
                }
            },
            "title": "RTCIceCandidateType"
        }
    ],
    "rtcicecomponent": [
        {
            "engines": [],
            "filename": "api/RTCIceComponent.json",
            "name": "RTCIceComponent",
            "slug": "API/RTCIceComponent",
            "summary": "The WebRTC API's RTCIceComponent enumerated type contains DOMString values that each identify a specific ICE component; these are \"rtp\" and \"rtcp\".",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceComponent"
        }
    ],
    "dom-rtcicecredentialtype": [
        {
            "engines": [
                "gecko"
            ],
            "filename": "api/RTCIceCredentialType.json",
            "name": "RTCIceCredentialType",
            "slug": "API/RTCIceCredentialType",
            "summary": "The WebRTC API's RTCIceCredentialType enumerated string type defines the authentication method used to gain access to an ICE server identified by an RTCIceServer object.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "47"
                },
                "firefox_android": {
                    "version_added": "47"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceCredentialType"
        }
    ],
    "dom-rtciceserver-credential": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCIceServer.json",
            "name": "credential",
            "slug": "API/RTCIceServer/credential",
            "summary": "The RTCIceServer dictionary's credential property is a string providing the credential to use when connecting to the described server. This is typically a password, key, or other secret.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCIceServer.credential"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCIceServer.json",
            "name": "credentialType",
            "slug": "API/RTCIceServer/credentialType",
            "summary": "The RTCIceServer dictionary's credentialType property is a string value from the RTCIceCredentialType enum which indicates what type of credential the RTCIceServer.credential value is. The default is password.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "47"
                },
                "firefox_android": {
                    "version_added": "47"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCIceServer.credentialType"
        }
    ],
    "dom-rtciceserver-urls": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCIceServer.json",
            "name": "urls",
            "slug": "API/RTCIceServer/urls",
            "summary": "The RTCIceServer dictionary's urls property specifies the URL or URLs of the servers to be used for ICE negotiations. These are typically STUN and/or TURN servers.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": {
                    "version_added": "37"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCIceServers.urls"
        }
    ],
    "dom-rtciceserver-username": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCIceServer.json",
            "name": "username",
            "slug": "API/RTCIceServer/username",
            "summary": "The RTCIceServer dictionary's username property is a string which specifies the username to use when authenticating with the ICE server being described.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "23"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCIceServer.username"
        }
    ],
    "dom-icetransport-component": [
        {
            "engines": [],
            "filename": "api/RTCIceTransport.json",
            "name": "component",
            "slug": "API/RTCIceTransport/component",
            "summary": "The read-only RTCIceTransport property component specifies whether the object is serving to transport RTP or RTCP. The value is one of the strings in RTCIceComponent.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport.component"
        }
    ],
    "dom-icetransport-gatheringstate": [
        {
            "engines": [
                "webkit"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "gatheringState",
            "slug": "API/RTCIceTransport/gatheringState",
            "summary": "The read-only RTCIceTransport property gatheringState returns a DOMString from the enumerated type RTCIceGathererState that indicates what gathering state the ICE agent is currently in: \"new\", \"gathering\", or \"complete\".",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport.gatheringState"
        }
    ],
    "event-icetransport-gatheringstatechange": [
        {
            "engines": [],
            "filename": "api/RTCIceTransport.json",
            "name": "gatheringstatechange_event",
            "slug": "API/RTCIceTransport/gatheringstatechange_event",
            "summary": "A gatheringstatechange event is sent to an RTCIceTransport when its ICE candidate gathering state changes.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport: gatheringstatechange event"
        }
    ],
    "dom-rtcicetransport-getlocalcandidates": [
        {
            "engines": [],
            "filename": "api/RTCIceTransport.json",
            "name": "getLocalCandidates",
            "slug": "API/RTCIceTransport/getLocalCandidates",
            "summary": "The RTCIceTransport method getLocalCandidates() returns an array of RTCIceCandidate objects, one for each of the candidates that have been gathered by the local device during the current ICE agent session.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport.getLocalCandidates()"
        }
    ],
    "dom-rtcicetransport-getlocalparameters": [
        {
            "engines": [],
            "filename": "api/RTCIceTransport.json",
            "name": "getLocalParameters",
            "slug": "API/RTCIceTransport/getLocalParameters",
            "summary": "The RTCIceTransport method getLocalParameters() returns an RTCIceParameters object which provides information uniquely identifying the local peer for the duration of the ICE session.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport.getLocalParameters()"
        }
    ],
    "dom-rtcicetransport-getremotecandidates": [
        {
            "engines": [],
            "filename": "api/RTCIceTransport.json",
            "name": "getRemoteCandidates",
            "slug": "API/RTCIceTransport/getRemoteCandidates",
            "summary": "The RTCIceTransport method getRemoteCandidates() returns an array which contains one RTCIceCandidate for each of the candidates that have been received from the remote peer so far during the current ICE gathering session.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport.getRemoteCandidates()"
        }
    ],
    "dom-rtcicetransport-getremoteparameters": [
        {
            "engines": [],
            "filename": "api/RTCIceTransport.json",
            "name": "getRemoteParameters",
            "slug": "API/RTCIceTransport/getRemoteParameters",
            "summary": "The RTCIceTransport method getRemoteParameters() returns an RTCIceParameters object which provides information uniquely identifying the remote peer for the duration of the ICE session.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport.getRemoteParameters()"
        }
    ],
    "dom-rtcicetransport-getselectedcandidatepair": [
        {
            "engines": [],
            "filename": "api/RTCIceTransport.json",
            "name": "getSelectedCandidatePair",
            "slug": "API/RTCIceTransport/getSelectedCandidatePair",
            "summary": "The RTCIceTransport method getSelectedCandidatePair() returns an RTCIceCandidatePair object containing the current best-choice pair of ICE candidates describing the configuration of the endpoints of the transport.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport.getSelectedCandidatePair()"
        }
    ],
    "dom-rtcicetransport-ongatheringstatechange": [
        {
            "engines": [],
            "filename": "api/RTCIceTransport.json",
            "name": "ongatheringstatechange",
            "slug": "API/RTCIceTransport/ongatheringstatechange",
            "summary": "The ongatheringstatechange event handler for the RTCIceTransport interface specifies an event handler that is to be called when the gatheringstatechange event occurs on the transport.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport.ongatheringstatechange"
        }
    ],
    "dom-rtcicetransport-onselectedcandidatepairchange": [
        {
            "engines": [],
            "filename": "api/RTCIceTransport.json",
            "name": "onselectedcandidatepairchange",
            "slug": "API/RTCIceTransport/onselectedcandidatepairchange",
            "summary": "The RTCIceTransport interface's onselectedcandidatepairchange event handler specifies a function to be called to handle the selectedcandidatepairchange event, which is fired when the ICE agent selects a new candidate pair to be used for the connection.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport.onselectedcandidatepairchange"
        }
    ],
    "dom-rtcicetransport-onstatechange": [
        {
            "engines": [],
            "filename": "api/RTCIceTransport.json",
            "name": "onstatechange",
            "slug": "API/RTCIceTransport/onstatechange",
            "summary": "The onstatechange event handler for the RTCIceTransport interface is a property which specifies a function to serve as the EventHandler for the statechange event that is fired whenever the transport's state changes.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport.onstatechange"
        }
    ],
    "dom-icetransport-role": [
        {
            "engines": [],
            "filename": "api/RTCIceTransport.json",
            "name": "role",
            "slug": "API/RTCIceTransport/role",
            "summary": "The read-only RTCIceTransport property role indicates which ICE role the transport is fulfilling: that of the controlling agent, or the agent that is being controlled.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport.role"
        }
    ],
    "event-icetransport-selectedcandidatepairchange": [
        {
            "engines": [],
            "filename": "api/RTCIceTransport.json",
            "name": "selectedcandidatepairchange_event",
            "slug": "API/RTCIceTransport/selectedcandidatepairchange_event",
            "summary": "A selectedcandidatepairchange event is sent to an RTCIceTransport when the ICE agent selects a new pair of candidates that describe the endpoints of a viable connection.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport: selectedcandidatepairchange event"
        }
    ],
    "rtcicetransportstate": [
        {
            "engines": [
                "webkit"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "state",
            "slug": "API/RTCIceTransport/state",
            "summary": "The read-only RTCIceTransport property state returns the current state of the ICE transport, so you can determine the state of ICE gathering in which the ICE agent currently is operating.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport.state"
        }
    ],
    "event-icetransport-statechange": [
        {
            "engines": [],
            "filename": "api/RTCIceTransport.json",
            "name": "statechange_event",
            "slug": "API/RTCIceTransport/statechange_event",
            "summary": "A statechange event occurs when the RTCIceTransport changes state. The state can be used to determine how far through the process of examining, verifying, and selecting a valid candidate pair is prior to successfully connecting the two peers for WebRTC communications.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport: statechange event"
        }
    ],
    "dom-rtcicetransport": [
        {
            "engines": [
                "webkit"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "RTCIceTransport",
            "slug": "API/RTCIceTransport",
            "summary": "The RTCIceTransport interface provides access to information about the ICE transport layer over which the data is being sent and received.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCIceTransport"
        }
    ],
    "dom-rtcofferansweroptions": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCOfferAnswerOptions.json",
            "name": "RTCOfferAnswerOptions",
            "slug": "API/RTCOfferAnswerOptions",
            "summary": "The WebRTC API's RTCOfferAnswerOptions dictionary is used to specify options that configure and control the process of creating WebRTC offers or answers.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCOfferAnswerOptions"
        }
    ],
    "dom-rtcofferoptions-icerestart": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCOfferOptions.json",
            "name": "iceRestart",
            "slug": "API/RTCOfferOptions/iceRestart",
            "summary": "The iceRestart property of the RTCOfferOptions dictionary is a Boolean value which, when true, tells the RTCPeerConnection to start ICE renegotiation.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": {
                    "version_added": "48"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCOfferOptions.iceRestart"
        }
    ],
    "dom-rtcofferoptions": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCOfferOptions.json",
            "name": "RTCOfferOptions",
            "slug": "API/RTCOfferOptions",
            "summary": "The RTCOfferOptions dictionary is used to provide optional settings when creating an RTCPeerConnection offer with the createOffer() method.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "42",
                        "notes": "<code>RTCOfferOptions</code> was not based on <code>RTCOfferAnswerOptions</code> until Firefox 42."
                    },
                    {
                        "version_added": "33"
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "42",
                        "notes": "<code>RTCOfferOptions</code> was not based on <code>RTCOfferAnswerOptions</code> until Firefox 42."
                    },
                    {
                        "version_added": "33"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCOfferOptions"
        }
    ],
    "dom-peerconnection": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "RTCPeerConnection",
            "slug": "API/RTCPeerConnection/RTCPeerConnection",
            "summary": "The RTCPeerConnection() constructor returns a newly-created RTCPeerConnection, which represents a connection between the local device and a remote peer.",
            "support": {
                "chrome": {
                    "version_added": "23",
                    "notes": "Before Chrome 63 the default value for the <code>RTCConfiguration.rtcpMuxPolicy</code> parameter was <code>&quot;negotiate&quot;</code>"
                },
                "chrome_android": {
                    "version_added": true,
                    "notes": "Before Chrome 63 the default value for the <code>RTCConfiguration.rtcpMuxPolicy</code> parameter was <code>&quot;negotiate&quot;</code>"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true,
                    "notes": "Before Chrome 63 the default value for the <code>RTCConfiguration.rtcpMuxPolicy</code> parameter was <code>&quot;negotiate&quot;</code>"
                },
                "edge_blink": {
                    "version_added": "79",
                    "notes": "Before Chrome 63 the default value for the <code>RTCConfiguration.rtcpMuxPolicy</code> parameter was <code>&quot;negotiate&quot;</code>"
                }
            },
            "title": "RTCPeerConnection()"
        }
    ],
    "dom-peerconnection-addicecandidate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "addIceCandidate",
            "slug": "API/RTCPeerConnection/addIceCandidate",
            "summary": "When a web site or app using RTCPeerConnection receives a new ICE candidate from the remote peer over its signaling channel, it delivers the newly-received candidate to the browser's ICE agent by calling RTCPeerConnection.addIceCandidate().",
            "support": {
                "chrome": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "24"
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": true
                    }
                ],
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22",
                    "notes": "Starting in Firefox 68, the <code>candidate</code> parameter is optional when calling <code>addIceCandidate()</code>. A <code>null</code> value for <code>candidate</code> indicates no more candidates will be sent, while an empty <code>candidate</code> string indicates that no more candidates will be sent for the current generation of candidates."
                },
                "firefox_android": {
                    "version_added": "44",
                    "notes": "Starting in Firefox 68, the <code>candidate</code> parameter is optional when calling <code>addIceCandidate()</code>. A <code>null</code> value for <code>candidate</code> indicates no more candidates will be sent, while an empty <code>candidate</code> string indicates that no more candidates will be sent for the current generation of candidates."
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": [
                    {
                        "notes": "Promise-based version and unprefixed.",
                        "version_added": "6.0"
                    },
                    {
                        "notes": "Promise-based version.",
                        "version_removed": "6.0",
                        "version_added": "5.0"
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": true
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "79"
                    }
                ]
            },
            "title": "RTCPeerConnection.addIceCandidate()"
        }
    ],
    "dom-rtcpeerconnection-addtrack": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "addTrack",
            "slug": "API/RTCPeerConnection/addTrack",
            "summary": "The RTCPeerConnection method addTrack() adds a new media track to the set of tracks which will be transmitted to the other peer.",
            "support": {
                "chrome": {
                    "version_added": "64"
                },
                "chrome_android": {
                    "version_added": "64"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "51"
                },
                "opera_android": {
                    "version_added": "47"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "64"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.addTrack()"
        }
    ],
    "dom-rtcpeerconnection-addtransceiver": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "addTransceiver",
            "slug": "API/RTCPeerConnection/addTransceiver",
            "summary": "The RTCPeerConnection method addTransceiver() creates a new RTCRtpTransceiver and adds it to the set of transceivers associated with the RTCPeerConnection.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": "59"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.addTransceiver()"
        }
    ],
    "dom-rtcpeerconnection-cantrickleicecandidates": [
        {
            "engines": [
                "gecko"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "canTrickleIceCandidates",
            "slug": "API/RTCPeerConnection/canTrickleIceCandidates",
            "summary": "The read-only RTCPeerConnection property canTrickleIceCandidates returns a Boolean which indicates whether or not the remote peer can accept trickled ICE candidates.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "47"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCPeerConnection.canTrickleIceCandidates"
        }
    ],
    "dom-rtcpeerconnection-close": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "close",
            "slug": "API/RTCPeerConnection/close",
            "summary": "The RTCPeerConnection.close() method closes the current peer connection.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.close()"
        }
    ],
    "dom-peerconnection-connection-state": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "connectionState",
            "slug": "API/RTCPeerConnection/connectionState",
            "summary": "The read-only connectionState property of the RTCPeerConnection interface indicates the current state of the peer connection by returning one of the string values specified by the enum RTCPeerConnectionState.",
            "support": {
                "chrome": {
                    "version_added": "72"
                },
                "chrome_android": {
                    "version_added": "72"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "72"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.connectionState"
        }
    ],
    "event-connectionstatechange": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "connectionstatechange_event",
            "slug": "API/RTCPeerConnection/connectionstatechange_event",
            "summary": "The connectionstatechange event is sent to the ontrack event handler on an RTCPeerConnection object after a new track has been added to an RTCRtpReceiver which is part of the connection.",
            "support": {
                "chrome": {
                    "version_added": "72"
                },
                "chrome_android": {
                    "version_added": "72"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "72"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: connectionstatechange event"
        }
    ],
    "dom-rtcpeerconnection-createanswer": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "createAnswer",
            "slug": "API/RTCPeerConnection/createAnswer",
            "summary": "The createAnswer() method on the RTCPeerConnection interface creates an SDP answer to an offer received from a remote peer during the offer/answer negotiation of a WebRTC connection. The answer contains information about any media already attached to the session, codecs and options supported by the browser, and any ICE candidates already gathered. The answer is delivered to the returned Promise, and should then be sent to the source of the offer to continue the negotiation process.",
            "support": {
                "chrome": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "24"
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": true
                    }
                ],
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": [
                    {
                        "notes": "Promise-based version and unprefixed.",
                        "version_added": "6.0"
                    },
                    {
                        "notes": "Promise-based version.",
                        "version_removed": "6.0",
                        "version_added": "5.0"
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": true
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "79"
                    }
                ]
            },
            "title": "RTCPeerConnection.createAnswer()"
        }
    ],
    "dom-peerconnection-createdatachannel": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "createDataChannel",
            "slug": "API/RTCPeerConnection/createDataChannel",
            "summary": "The createDataChannel() method on the RTCPeerConnection interface creates a new channel linked with the remote peer, over which any kind of data may be transmitted.",
            "support": {
                "chrome": {
                    "version_added": "25"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.createDataChannel()"
        }
    ],
    "dom-rtcpeerconnection-createoffer": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "createOffer",
            "slug": "API/RTCPeerConnection/createOffer",
            "summary": "The createOffer() method of the RTCPeerConnection interface initiates the creation of an SDP offer for the purpose of starting a new WebRTC connection to a remote peer.",
            "support": {
                "chrome": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "24"
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": true
                    }
                ],
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": [
                    {
                        "notes": "Promise-based version and unprefixed.",
                        "version_added": "6.0"
                    },
                    {
                        "notes": "Promise-based version.",
                        "version_removed": "6.0",
                        "version_added": "5.0"
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": true
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "79"
                    }
                ]
            },
            "title": "RTCPeerConnection.createOffer()"
        }
    ],
    "dom-peerconnection-currentlocaldesc": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "currentLocalDescription",
            "slug": "API/RTCPeerConnection/currentLocalDescription",
            "summary": "The read-only property RTCPeerConnection.currentLocalDescription returns an RTCSessionDescription object describing the local end of the connection as it was most recently successfully negotiated since the last time the  RTCPeerConnection finished negotiating and connecting to a remote peer. Also included is a list of any ICE candidates that may already have been generated by the ICE agent since the offer or answer represented by the description was first instantiated.",
            "support": {
                "chrome": {
                    "version_added": "70"
                },
                "chrome_android": {
                    "version_added": "70"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "70"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.currentLocalDescription"
        }
    ],
    "dom-peerconnection-currentremotedesc": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "currentRemoteDescription",
            "slug": "API/RTCPeerConnection/currentRemoteDescription",
            "summary": "The read-only property RTCPeerConnection.currentRemoteDescription returns an RTCSessionDescription object describing the remote end of the connection as it was most recently successfully negotiated since the last time the RTCPeerConnection finished negotiating and connecting to a remote peer. Also included is a list of any ICE candidates that may already have been generated by the ICE agent since the offer or answer represented by the description was first instantiated.",
            "support": {
                "chrome": {
                    "version_added": "70"
                },
                "chrome_android": {
                    "version_added": "70"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "57"
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "70"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.currentRemoteDescription"
        }
    ],
    "event-datachannel": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "datachannel_event",
            "slug": "API/RTCPeerConnection/datachannel_event",
            "summary": "A datachannel event is sent to an RTCPeerConnection instance when an RTCDataChannel has been added to the connection, as a result of the remote peer calling RTCPeerConnection.createDataChannel().",
            "support": {
                "chrome": {
                    "version_added": "25"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: datachannel event"
        }
    ],
    "dom-rtcpeerconnection-generatecertificate": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "generateCertificate",
            "slug": "API/RTCPeerConnection/generateCertificate",
            "summary": "The static  RTCPeerConnection.generateCertificate() function creates an X.509 certificate and corresponding private key, returning a promise that resolves with the new RTCCertificate once it's generated.",
            "support": {
                "chrome": {
                    "version_added": "48"
                },
                "chrome_android": {
                    "version_added": "48"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "48"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.generateCertificate() static function"
        }
    ],
    "dom-rtcpeerconnection-getconfiguration": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "getConfiguration",
            "slug": "API/RTCPeerConnection/getConfiguration",
            "summary": "The RTCPeerConnection.getConfiguration() method returns an RTCConfiguration object which indicates the current configuration of the RTCPeerConnection on which the method is called.",
            "support": {
                "chrome": {
                    "version_added": "70"
                },
                "chrome_android": {
                    "version_added": "70"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "70"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.getConfiguration()"
        }
    ],
    "dom-peerconnection-getreceivers": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "getReceivers",
            "slug": "API/RTCPeerConnection/getReceivers",
            "summary": "The RTCPeerConnection.getReceivers() method returns an array of RTCRtpReceiver objects, each of which represents one RTP receiver. Each RTP receiver manages the reception and decoding of data for a MediaStreamTrack on an RTCPeerConnection",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": {
                    "version_added": "59"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "46"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "59"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.getReceivers()"
        }
    ],
    "dom-peerconnection-getsenders": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "getSenders",
            "slug": "API/RTCPeerConnection/getSenders",
            "summary": "The RTCPeerConnection method getSenders() returns an array of RTCRtpSender objects, each of which represents the RTP sender responsible for transmitting one track's data.",
            "support": {
                "chrome": {
                    "version_added": "64"
                },
                "chrome_android": {
                    "version_added": "64"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "51"
                },
                "opera_android": {
                    "version_added": "47"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "64"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.getSenders()"
        }
    ],
    "widl-RTCPeerConnection-getStats-Promise-RTCStatsReport--MediaStreamTrack-selector": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "getStats",
            "slug": "API/RTCPeerConnection/getStats",
            "summary": "The RTCPeerConnection method getStats() returns a promise which resolves with data providing statistics about either the overall connection or about the specified MediaStreamTrack.",
            "support": {
                "chrome": [
                    {
                        "version_added": "58",
                        "notes": "Promise resolves with <code>RTCStatsReport</code>."
                    },
                    {
                        "version_added": "54",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "24"
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "58",
                        "notes": "Promise resolves with <code>RTCStatsReport</code>."
                    },
                    {
                        "version_added": "54",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": true
                    }
                ],
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "45"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": [
                    {
                        "version_added": "7.0",
                        "notes": "Promise resolves with <code>RTCStatsReport</code>."
                    },
                    {
                        "version_added": "6.0",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": true
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "58",
                        "notes": "Promise resolves with <code>RTCStatsReport</code>."
                    },
                    {
                        "version_added": "54",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": true
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79",
                        "notes": "Promise resolves with <code>RTCStatsReport</code>."
                    },
                    {
                        "version_added": "79",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "79"
                    }
                ]
            },
            "title": "RTCPeerConnection.getStats()"
        }
    ],
    "event-icecandidate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "icecandidate_event",
            "slug": "API/RTCPeerConnection/icecandidate_event",
            "summary": "An icecandidate event is sent to an RTCPeerConnection  when an RTCIceCandidate has been identified and added to the local peer by a call to RTCPeerConnection.setLocalDescription(). The event handler should transmit the candidate to the remote peer over the signaling channel so the remote peer can add it to its set of remote candidates.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: icecandidate event"
        }
    ],
    "dom-peerconnection-ice-connection-state": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "iceConnectionState",
            "slug": "API/RTCPeerConnection/iceConnectionState",
            "summary": "The read-only property RTCPeerConnection.iceConnectionState returns an enum of type RTCIceConnectionState which state of the ICE agent associated with the RTCPeerConnection.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": {
                    "version_added": "26"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.iceConnectionState"
        }
    ],
    "event-iceconnectionstatechange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "iceconnectionstatechange_event",
            "slug": "API/RTCPeerConnection/iceconnectionstatechange_event",
            "summary": "An iceconnectionstatechange event is sent to an RTCPeerConnection object each time the ICE connection state changes during the negotiation process.",
            "support": {
                "chrome": {
                    "version_added": "28"
                },
                "chrome_android": {
                    "version_added": "28"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: iceconnectionstatechange event"
        }
    ],
    "dom-peerconnection-ice-gathering-state": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "iceGatheringState",
            "slug": "API/RTCPeerConnection/iceGatheringState",
            "summary": "The read-only property RTCPeerConnection.iceGatheringState returns an enum of type RTCIceGatheringState that describes connection's ICE gathering state. This lets you detect, for example, when collection of ICE candidates has finished.",
            "support": {
                "chrome": {
                    "version_added": "25"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.iceGatheringState"
        }
    ],
    "dom-peerconnection-localdescription": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "localDescription",
            "slug": "API/RTCPeerConnection/localDescription",
            "summary": "The read-only property RTCPeerConnection.localDescription returns an RTCSessionDescription describing the session for the local end of the connection. If it has not yet been set, this is null.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.localDescription"
        }
    ],
    "event-negotiation": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "negotiationneeded_event",
            "slug": "API/RTCPeerConnection/negotiationneeded_event",
            "summary": "A negotiationneeded event is sent to the RTCPeerConnection when negotiation of the connection through the signaling channel is required.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: negotiationneeded event"
        }
    ],
    "dom-rtcpeerconnection-onconnectionstatechange": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "onconnectionstatechange",
            "slug": "API/RTCPeerConnection/onconnectionstatechange",
            "summary": "The RTCPeerConnection.onconnectionstatechange property specifies an EventHandler which is called to handle the connectionstatechange event when it occurs on an instance of RTCPeerConnection. This happens whenever the aggregate state of the connection changes.",
            "support": {
                "chrome": {
                    "version_added": "72"
                },
                "chrome_android": {
                    "version_added": "72"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "72"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.onconnectionstatechange"
        }
    ],
    "dom-rtcpeerconnection-ondatachannel": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "ondatachannel",
            "slug": "API/RTCPeerConnection/ondatachannel",
            "summary": "The RTCPeerConnection.ondatachannel property is an EventHandler which specifies a function which is called when the datachannel event occurs on an RTCPeerConnection. This event, of type RTCDataChannelEvent, is sent when an RTCDataChannel is added to the connection by the remote peer calling createDataChannel().",
            "support": {
                "chrome": {
                    "version_added": "25"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.ondatachannel"
        }
    ],
    "dom-rtcpeerconnection-onicecandidate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "onicecandidate",
            "slug": "API/RTCPeerConnection/onicecandidate",
            "summary": "The RTCPeerConnection property onicecandidate property is an EventHandler which specifies a function to be called when the icecandidate event occurs on an RTCPeerConnection instance. This happens whenever the local ICE agent needs to deliver a message to the other peer through the signaling server.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.onicecandidate"
        }
    ],
    "dom-rtcpeerconnection-onicecandidateerror": [
        {
            "engines": [],
            "filename": "api/RTCPeerConnection.json",
            "name": "onicecandidateerror",
            "slug": "API/RTCPeerConnection/onicecandidateerror",
            "summary": "The RTCPeerConnection.onicecandidateerror property is an EventHandler which specifies a function which is called to handle the icecandidateerror event when it occurs on an RTCPeerConnection instance. This event is fired when an error occurs during the ICE candidate gathering process.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": null
                },
                "firefox_android": {
                    "version_added": null
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCPeerConnection.onicecandidateerror"
        }
    ],
    "dom-rtcpeerconnection-oniceconnectionstatechange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "oniceconnectionstatechange",
            "slug": "API/RTCPeerConnection/oniceconnectionstatechange",
            "summary": "The RTCPeerConnection.oniceconnectionstatechange property is an event handler which specifies a function to be called when the iceconnectionstatechange event is fired on an RTCPeerConnection instance. This happens when the state of the connection's ICE agent, as represented by the iceConnectionState property, changes.",
            "support": {
                "chrome": {
                    "version_added": "28"
                },
                "chrome_android": {
                    "version_added": "28"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.oniceconnectionstatechange"
        }
    ],
    "dom-rtcpeerconnection-onicegatheringstatechange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "onicegatheringstatechange",
            "slug": "API/RTCPeerConnection/onicegatheringstatechange",
            "summary": "The RTCPeerConnection.onicegatheringstatechange property is an EventHandler which specifies a function to be called when the icegatheringstatechange event is sent to an RTCPeerConnection instance. This happens when the ICE gathering state—that is, whether or not the ICE agent is actively gathering candidates—changes.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": {
                    "version_added": "59"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "59"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.onicegatheringstatechange"
        }
    ],
    "dom-rtcpeerconnection-onnegotiationneeded": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "onnegotiationneeded",
            "slug": "API/RTCPeerConnection/onnegotiationneeded",
            "summary": "The RTCPeerConnection interface's onnegotiationneeded property is an EventListener which specifies a function which is called to handle the negotiationneeded event when it occurs on an RTCPeerConnection instance. This event is fired when a change has occurred which requires session negotiation. This negotiation should be carried out as the offerer, because some session changes cannot be negotiated as the answerer.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.onnegotiationneeded"
        }
    ],
    "dom-rtcpeerconnection-onsignalingstatechange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "onsignalingstatechange",
            "slug": "API/RTCPeerConnection/onsignalingstatechange",
            "summary": "The onsignalingstatechange event handler property of the RTCPeerConnection interface specifies a function to be called when the signalingstatechange event occurs on an RTCPeerConnection interface.",
            "support": {
                "chrome": {
                    "version_added": "28"
                },
                "chrome_android": {
                    "version_added": "28"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.onsignalingstatechange"
        }
    ],
    "dom-rtcpeerconnection-ontrack": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "ontrack",
            "slug": "API/RTCPeerConnection/ontrack",
            "summary": "The RTCPeerConnection property ontrack is an EventHandler which specifies a function to be called when the track event occurs, indicating that a track has been added to the RTCPeerConnection.",
            "support": {
                "chrome": {
                    "version_added": "64"
                },
                "chrome_android": {
                    "version_added": "64"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "64"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.ontrack"
        }
    ],
    "dom-peerconnection-pendinglocaldesc": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "pendingLocalDescription",
            "slug": "API/RTCPeerConnection/pendingLocalDescription",
            "summary": "The read-only property RTCPeerConnection.pendingLocalDescription returns an RTCSessionDescription object describing a pending configuration change for the local end of the connection. This does not describe the connection as it currently stands, but as it may exist in the near future. Use RTCPeerConnection.currentLocalDescription or RTCPeerConnection.localDescription to get the current state of the endpoint. For details on the difference, see Pending and current descriptions in WebRTC connectivity.",
            "support": {
                "chrome": {
                    "version_added": "70"
                },
                "chrome_android": {
                    "version_added": "70"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "70"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.pendingLocalDescription"
        }
    ],
    "dom-peerconnection-pendingremotedesc": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "pendingRemoteDescription",
            "slug": "API/RTCPeerConnection/pendingRemoteDescription",
            "summary": "The read-only property RTCPeerConnection.pendingRemoteDescription returns an RTCSessionDescription object describing a pending configuration change for the remote end of the connection. This does not describe the connection as it currently stands, but as it may exist in the near future. Use RTCPeerConnection.currentRemoteDescription or RTCPeerConnection.remoteDescription to get the current session description for the remote endpoint. For details on the difference, see Pending and current descriptions in WebRTC connectivity.",
            "support": {
                "chrome": {
                    "version_added": "70"
                },
                "chrome_android": {
                    "version_added": "70"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "70"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.pendingRemoteDescription"
        }
    ],
    "dom-peerconnection-remotedescription": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "remoteDescription",
            "slug": "API/RTCPeerConnection/remoteDescription",
            "summary": "The read-only property RTCPeerConnection.remoteDescription returns a RTCSessionDescription describing the session (which includes configuration and media information) for the remote end of the connection. If this hasn't been set yet, this is null.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version and unprefixed."
                    },
                    {
                        "version_added": "38",
                        "notes": "Promise-based version.",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version and unprefixed."
                    },
                    {
                        "version_added": "41",
                        "notes": "Promise-based version.",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.remoteDescription"
        }
    ],
    "dom-rtcpeerconnection-removetrack": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "removeTrack",
            "slug": "API/RTCPeerConnection/removeTrack",
            "summary": "The RTCPeerConnection.removeTrack() method tells the local end of the connection to stop sending media from the specified track, without actually removing the corresponding RTCRtpSender from the list of senders as reported by RTCPeerConnection.getSenders().",
            "support": {
                "chrome": {
                    "version_added": "64"
                },
                "chrome_android": {
                    "version_added": "64"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "51"
                },
                "opera_android": {
                    "version_added": "47"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "64"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.removeTrack()"
        }
    ],
    "dom-rtcpeerconnection-restartice": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "restartIce",
            "slug": "API/RTCPeerConnection/restartIce",
            "summary": "The WebRTC API's RTCPeerConnection interface offers the restartIce() method to allow a web application to easily request that ICE candidate gathering be redone on both ends of the connection.",
            "support": {
                "chrome": {
                    "version_added": "77"
                },
                "chrome_android": {
                    "version_added": "77"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "70"
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": "55"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "12.0"
                },
                "webview_android": {
                    "version_added": "77"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.restartIce()"
        }
    ],
    "dom-rtcpeerconnection-sctp": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "sctp",
            "slug": "API/RTCPeerConnection/sctp",
            "summary": "The read-only sctp property on the RTCPeerConnection interface returns an RTCSctpTransport describing the SCTP transport over which SCTP data is being sent and received. If SCTP hasn't been negotiated, this value is null.",
            "support": {
                "chrome": {
                    "version_added": "76"
                },
                "chrome_android": {
                    "version_added": "76"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1278299'>bug 1278299</a>."
                },
                "firefox_android": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1278299'>bug 1278299</a>."
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": "54"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "12.0"
                },
                "webview_android": {
                    "version_added": "76"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.sctp"
        }
    ],
    "dom-rtcpeerconnection-setconfiguration": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "setConfiguration",
            "slug": "API/RTCPeerConnection/setConfiguration",
            "summary": "The RTCPeerConnection.setConfiguration() method sets the current configuration of the RTCPeerConnection based on the values included in the specified RTCConfiguration object. This lets you change the ICE servers used by the connection and which transport policies to use.",
            "support": {
                "chrome": {
                    "version_added": "48"
                },
                "chrome_android": {
                    "version_added": "48"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1253706'>bug 1253706</a>."
                },
                "firefox_android": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1253706'>bug 1253706</a>."
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "48"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.setConfiguration()"
        }
    ],
    "dom-peerconnection-setlocaldescription": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "setLocalDescription",
            "slug": "API/RTCPeerConnection/setLocalDescription",
            "summary": "The RTCPeerConnection method setLocalDescription() changes the local description associated with the connection. This description specifies the properties of the local end of the connection, including the media format.",
            "support": {
                "chrome": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "24"
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": true
                    }
                ],
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22",
                    "notes": "Firefox does not support descriptions of type <code>pranswer</code>."
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": [
                    {
                        "notes": "Promise-based version and unprefixed.",
                        "version_added": "6.0"
                    },
                    {
                        "notes": "Promise-based version.",
                        "version_removed": "6.0",
                        "version_added": "5.0"
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": true
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "79"
                    }
                ]
            },
            "title": "RTCPeerConnection.setLocalDescription()"
        }
    ],
    "dom-peerconnection-setremotedescription": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "setRemoteDescription",
            "slug": "API/RTCPeerConnection/setRemoteDescription",
            "summary": "The RTCPeerConnection method setRemoteDescription() sets the specified session description as the remote peer's current offer or answer. The description specifies the properties of the remote end of the connection, including the media format.",
            "support": {
                "chrome": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "24"
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": true
                    }
                ],
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": [
                    {
                        "version_added": "5.0",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": true
                    }
                ],
                "webview_android": [
                    {
                        "version_added": "51",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": true
                    }
                ],
                "edge_blink": [
                    {
                        "version_added": "79",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "79"
                    }
                ]
            },
            "title": "RTCPeerConnection.setRemoteDescription()"
        }
    ],
    "dom-peerconnection-signaling-state": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "signalingState",
            "slug": "API/RTCPeerConnection/signalingState",
            "summary": "The read-only signalingState property on the RTCPeerConnection interface returns one of the string values specified by the RTCSignalingState enum; these values describe the state of the signaling process on the local end of the connection while connecting or reconnecting to another peer. See Signaling in Lifetime of a WebRTC session for more details about the signaling process.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": {
                    "version_added": "26"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection.signalingState"
        }
    ],
    "event-signalingstatechange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "signalingstatechange_event",
            "slug": "API/RTCPeerConnection/signalingstatechange_event",
            "summary": "An signalingstatechange event is sent to an RTCPeerConnection to notify it that its signaling state, as indicated by the signalingState property, has changed.",
            "support": {
                "chrome": {
                    "version_added": "28"
                },
                "chrome_android": {
                    "version_added": "28"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: signalingstatechange event"
        }
    ],
    "event-track": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "track_event",
            "slug": "API/RTCPeerConnection/track_event",
            "summary": "The track event is sent to the ontrack event handler on RTCPeerConnections after a new track has been added to an RTCRtpReceiver which is part of the connection.",
            "support": {
                "chrome": {
                    "version_added": "64"
                },
                "chrome_android": {
                    "version_added": "64"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "64"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: track event"
        }
    ],
    "interface-definition": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "RTCPeerConnection",
            "slug": "API/RTCPeerConnection",
            "summary": "The RTCPeerConnection interface represents a WebRTC connection between the local computer and a remote peer. It provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it's no longer needed.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": [
                    {
                        "version_added": "44"
                    },
                    {
                        "prefix": "moz",
                        "version_added": "22",
                        "version_removed": "44"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "opera": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Promise-based version."
                    },
                    {
                        "version_added": "37",
                        "version_removed": "43"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": [
                    {
                        "version_added": "6.0"
                    },
                    {
                        "prefix": "webkit",
                        "version_removed": "6.0",
                        "version_added": "5.0"
                    }
                ],
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection"
        }
    ],
    "dom-rtcpeerconnectioniceevent-constructor": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCPeerConnectionIceEvent.json",
            "name": "RTCPeerConnectionIceEvent",
            "slug": "API/RTCPeerConnectionIceEvent/RTCPeerConnectionIceEvent",
            "summary": "The RTCPeerConnectionIceEvent() constructor creates a new RTCPeerConnectionIceEvent.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnectionIceEvent()"
        }
    ],
    "dom-rtcpeerconnectioniceevent-candidate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnectionIceEvent.json",
            "name": "candidate",
            "slug": "API/RTCPeerConnectionIceEvent/candidate",
            "summary": "The read-only candidate property of the RTCPeerConnectionIceEvent interface returns the RTCIceCandidate associated with the event.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnectionIceEvent.candidate"
        }
    ],
    "rtcpeerconnectioniceevent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnectionIceEvent.json",
            "name": "RTCPeerConnectionIceEvent",
            "slug": "API/RTCPeerConnectionIceEvent",
            "summary": "The RTCPeerConnectionIceEvent interface represents events that occurs in relation to ICE candidates with the target, usually an RTCPeerConnection.",
            "support": {
                "chrome": [
                    {
                        "alternative_name": "RTCIceCandidateEvent",
                        "version_added": true,
                        "version_removed": "56"
                    },
                    {
                        "version_added": "56"
                    }
                ],
                "chrome_android": [
                    {
                        "alternative_name": "RTCIceCandidateEvent",
                        "version_added": true,
                        "version_removed": "56"
                    },
                    {
                        "version_added": "56"
                    }
                ],
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": [
                    {
                        "alternative_name": "RTCIceCandidateEvent",
                        "version_added": true,
                        "version_removed": "6.0"
                    },
                    {
                        "version_added": "6.0"
                    }
                ],
                "webview_android": [
                    {
                        "alternative_name": "RTCIceCandidateEvent",
                        "version_added": true,
                        "version_removed": "56"
                    },
                    {
                        "version_added": "56"
                    }
                ],
                "edge_blink": [
                    {
                        "alternative_name": "RTCIceCandidateEvent",
                        "version_added": false,
                        "version_removed": "56"
                    },
                    {
                        "version_added": "79"
                    }
                ]
            },
            "title": "RTCPeerConnectionIceEvent"
        }
    ],
    "dom-rtcrtpcontributingsource-audiolevel": [
        {
            "engines": [
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/RTCRtpContributingSource.json",
            "name": "audioLevel",
            "slug": "API/RTCRtpContributingSource/audioLevel",
            "summary": "The read-only audioLevel property of the RTCRtpContributingSource interface indicates the audio level contained in the last RTP packet played from the described source.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "media.peerconnection.rtpsourcesapi.enable",
                            "value_to_set": "true"
                        }
                    ]
                },
                "firefox_android": {
                    "version_added": "59",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "media.peerconnection.rtpsourcesapi.enable",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCRtpContributingSource.audioLevel"
        }
    ],
    "dom-rtcrtpcontributingsource-source": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/RTCRtpContributingSource.json",
            "name": "source",
            "slug": "API/RTCRtpContributingSource/source",
            "summary": "The read-only source property of the RTCRtpContributingSource interface returns the source identifier of a particular stream of RTP packets.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": {
                    "version_added": "59"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "media.peerconnection.rtpsourcesapi.enable",
                            "value_to_set": "true"
                        }
                    ]
                },
                "firefox_android": {
                    "version_added": "59",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "media.peerconnection.rtpsourcesapi.enable",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "59"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpContributingSource.source"
        }
    ],
    "dom-rtcrtpcontributingsource-timestamp": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/RTCRtpContributingSource.json",
            "name": "timestamp",
            "slug": "API/RTCRtpContributingSource/timestamp",
            "summary": "The read-only timestamp property of the RTCRtpContributingSource interface returns a DOMHighResTimeStamp indicating the most recent time of playout of an RTP packet from the source.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": {
                    "version_added": "59"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "media.peerconnection.rtpsourcesapi.enable",
                            "value_to_set": "true"
                        }
                    ],
                    "notes": "Starting in version 60, the <code>timestamp</code> is correctly computed based on the window's <code>Performance</code> time, rather than <code>Date.getTime()</code>."
                },
                "firefox_android": {
                    "version_added": "59",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "media.peerconnection.rtpsourcesapi.enable",
                            "value_to_set": "true"
                        }
                    ],
                    "notes": "Starting in version 60, the <code>timestamp</code> is correctly computed based on the window's <code>Performance</code> time, rather than <code>Date.getTime()</code>."
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "59"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpContributingSource.timestamp"
        }
    ],
    "dom-rtcrtpcontributingsource": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/RTCRtpContributingSource.json",
            "name": "RTCRtpContributingSource",
            "slug": "API/RTCRtpContributingSource",
            "summary": "The RTCRtpContributingSource dictionary of the the WebRTC API is used by getContributingSources() to provide information about a given contributing source (CSRC), including the most recent time a packet that the source contributed was played out.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": {
                    "version_added": "59"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "media.peerconnection.rtpsourcesapi.enable",
                            "value_to_set": "true"
                        }
                    ]
                },
                "firefox_android": {
                    "version_added": "59",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "media.peerconnection.rtpsourcesapi.enable",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "59"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpContributingSource"
        }
    ],
    "dom-rtcrtpencodingparameters-maxbitrate": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCRtpEncodingParameters.json",
            "name": "maxBitrate",
            "slug": "API/RTCRtpEncodingParameters/maxBitrate",
            "summary": "The RTCRtpEncodingParameters dictionary's maxBitrate property specifies the maximum number of bits per second to allow a track encoded with this encoding to use.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": {
                    "version_added": "46"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpEncodingParameters.maxBitrate"
        }
    ],
    "dom-rtcrtpencodingparameters-scaleresolutiondownby": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCRtpEncodingParameters.json",
            "name": "scaleResolutionDownBy",
            "slug": "API/RTCRtpEncodingParameters/scaleResolutionDownBy",
            "summary": "The RTCRtpEncodingParameters dictionary's scaleResolutionDownBy property can be used to specify a factor by which to reduce the size of a video track during encoding.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": {
                    "version_added": "74"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": {
                    "version_added": "46"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "74"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpEncodingParameters.scaleResolutionDownBy"
        }
    ],
    "dom-rtcrtpencodingparameters": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCRtpEncodingParameters.json",
            "name": "RTCRtpEncodingParameters",
            "slug": "API/RTCRtpEncodingParameters",
            "summary": "An instance of the WebRTC API's RTCRtpEncodingParameters dictionary describes a single configuration of a codec for an RTCRtpSender.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": {
                    "version_added": "46"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpEncodingParameters"
        }
    ],
    "dom-rtcrtpreceiver-getcontributingsources": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "getContributingSources",
            "slug": "API/RTCRtpReceiver/getContributingSources",
            "summary": "The getContributingSources() method of the RTCRtpReceiver interface returns an array of RTCRtpContributingSource instances, each corresponding to one CSRC (contributing source) identifier received by the current RTCRtpReceiver in the last ten seconds.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": {
                    "version_added": "59"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": "59",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "media.peerconnection.rtpsourcesapi.enable",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "46"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "59"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver.getContributingSources()"
        }
    ],
    "widl-RTCRtpReceiver-getStats-Promise-RTCStatsReport": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "getStats",
            "slug": "API/RTCRtpReceiver/getStats",
            "summary": "The RTCRtpReceiver method getStats() asynchronously requests an RTCStatsReport object which provides statistics about incoming traffic on the owning RTCPeerConnection, returning a Promise whose fulfillment handler will be called once the results are available.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "55"
                },
                "firefox_android": {
                    "version_added": "55"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver.getStats()"
        }
    ],
    "dom-rtcrtpreceiver-getsynchronizationsources": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "getSynchronizationSources",
            "slug": "API/RTCRtpReceiver/getSynchronizationSources",
            "summary": "The getSynchronizationSources() method of the RTCRtpReceiver interface returns an array of RTCRtpContributingSource instances, each corresponding to one SSRC (synchronization source) identifier received by the current RTCRtpReceiver in the last ten seconds.",
            "support": {
                "chrome": {
                    "version_added": "73"
                },
                "chrome_android": {
                    "version_added": "73"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": "59",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "media.peerconnection.rtpsourcesapi.enable",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "60"
                },
                "opera_android": {
                    "version_added": "52"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "11.0"
                },
                "webview_android": {
                    "version_added": "73"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver.getSynchronizationSources()"
        }
    ],
    "dom-rtpreceiver-track": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "track",
            "slug": "API/RTCRtpReceiver/track",
            "summary": "The track read-only property of the RTCRtpReceiver interface returns the MediaStreamTrack associated with the current RTCRtpReceiver instance.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": {
                    "version_added": "59"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "46"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "59"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver.track"
        }
    ],
    "rtcrtpreceiver-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "RTCRtpReceiver",
            "slug": "API/RTCRtpReceiver",
            "summary": "The RTCRtpReceiver interface of the WebRTC API manages the reception and decoding of data for a MediaStreamTrack on an RTCPeerConnection.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": {
                    "version_added": "59"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "46"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "59"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver"
        }
    ],
    "dom-rtcrtpsendparameters-encodings": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCRtpSendParameters.json",
            "name": "encodings",
            "slug": "API/RTCRtpSendParameters/encodings",
            "summary": "The RTCRtpSendParameters dictionary's encodings property is an RTCRtpEncodingParameters object providing configuration settings for the encoder being used for the RTCRtpSender's track.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false,
                    "notes": "Firefox uses <code>RTCRtpParameters.encodings</code> instead."
                },
                "firefox_android": {
                    "version_added": false,
                    "notes": "Firefox uses <code>RTCRtpParameters.encodings</code> instead."
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSendParameters.encodings"
        }
    ],
    "dom-rtcrtpsendparameters": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCRtpSendParameters.json",
            "name": "RTCRtpSendParameters",
            "slug": "API/RTCRtpSendParameters",
            "summary": "The WebRTC API's RTCRtpSendParameters dictionary is used to specify the parameters for an RTCRtpSender when calling its setParameters() method.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false,
                    "notes": "Firefox expects an <code><a href='https://developer.mozilla.org/docs/Web/API/RTCRtpParameters'>RTCRtpParameters</a></code> object instead."
                },
                "firefox_android": {
                    "version_added": false,
                    "notes": "Firefox expects an <code><a href='https://developer.mozilla.org/docs/Web/API/RTCRtpParameters'>RTCRtpParameters</a></code> object instead."
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSendParameters"
        }
    ],
    "dom-rtcrtpsender-dtmf": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "dtmf",
            "slug": "API/RTCRtpSender/dtmf",
            "summary": "The read-only dtmf property on the RTCRtpSender interface returns a RTCDTMFSender object which can be used to send DTMF tones over the RTCPeerConnection . See Using DTMF for details on how to make use of the returned RTCDTMFSender object.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": {
                    "version_added": "52"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCRtpSender.dtmf"
        }
    ],
    "dom-rtcrtpsender-getparameters": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "getParameters",
            "slug": "API/RTCRtpSender/getParameters",
            "summary": "The getParameters() method of the RTCRtpSender interface returns an RTCRtpSendParameters object describing the current configuration for the encoding and transmission of media on the sender's track.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender.getParameters()"
        }
    ],
    "widl-RTCRtpSender-getStats-Promise-RTCStatsReport": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "getStats",
            "slug": "API/RTCRtpSender/getStats",
            "summary": "The RTCRtpSender method getStats() asynchronously requests an RTCStatsReport object which provides statistics about outgoing traffic on the RTCPeerConnection which owns the sender, returning a Promise which is fulfilled when the results are available.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": {
                    "version_added": "67"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "55"
                },
                "firefox_android": {
                    "version_added": "55"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "54"
                },
                "opera_android": {
                    "version_added": "48"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "67"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender.getStats()"
        }
    ],
    "dom-rtcrtpsender-replacetrack": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "replaceTrack",
            "slug": "API/RTCRtpSender/replaceTrack",
            "summary": "The RTCRtpSender method replaceTrack() replaces the track currently being used as the sender's source with a new MediaStreamTrack.",
            "support": {
                "chrome": {
                    "version_added": "65"
                },
                "chrome_android": {
                    "version_added": "65"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "65"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender.replaceTrack()"
        }
    ],
    "dom-rtcrtpsender-setparameters": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "setParameters",
            "slug": "API/RTCRtpSender/setParameters",
            "summary": "The setParameters() method of the RTCRtpSender interface applies changes the configuration of sender's track, which is the MediaStreamTrack for which the RTCRtpSender is responsible.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "64",
                        "notes": "Changes to parameters that should update live now do so starting in Firefox 64."
                    },
                    {
                        "version_added": "46"
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "64",
                        "notes": "Changes to parameters that should update live now do so starting in Firefox 64."
                    },
                    {
                        "version_added": "46"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCRtpSender.setParameters()"
        }
    ],
    "dom-rtcrtpsender-track": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "track",
            "slug": "API/RTCRtpSender/track",
            "summary": "The track read-only property of the RTCRtpSender interface returns the MediaStreamTrack which is being handled by the RTCRtpSender.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": {
                    "version_added": "34"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCRtpSender.track"
        }
    ],
    "rtcrtpsender-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "RTCRtpSender",
            "slug": "API/RTCRtpSender",
            "summary": "The RTCRtpSender interface provides the ability to control and obtain details about how a particular MediaStreamTrack is encoded and sent to a remote peer.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": {
                    "version_added": "34"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCRtpSender"
        }
    ],
    "dom-rtcrtpsynchronizationsource-voiceactivityflag": [
        {
            "engines": [
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/RTCRtpSynchronizationSource.json",
            "name": "voiceActivityFlag",
            "slug": "API/RTCRtpSynchronizationSource/voiceActivityFlag",
            "summary": "The read-only voiceActivityFlag property of the RTCRtpSynchronizationSource interface indicates whether or not the most recent RTP packet on the source includes voice activity.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "media.peerconnection.rtpsourcesapi.enable",
                            "value_to_set": "true"
                        }
                    ]
                },
                "firefox_android": {
                    "version_added": "59",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "media.peerconnection.rtpsourcesapi.enable",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCRtpSynchronizationSource.voiceActivityFlag"
        }
    ],
    "dom-rtcrtpsynchronizationsource": [
        {
            "engines": [
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/RTCRtpSynchronizationSource.json",
            "name": "RTCRtpSynchronizationSource",
            "slug": "API/RTCRtpSynchronizationSource",
            "summary": "The RTCRtpSynchronizationSource dictionary of the the WebRTC API is used by getSynchronizationSources() to describe a particular synchronization source (SSRC).",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "media.peerconnection.rtpsourcesapi.enable",
                            "value_to_set": "true"
                        }
                    ]
                },
                "firefox_android": {
                    "version_added": "59",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "media.peerconnection.rtpsourcesapi.enable",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCRtpSynchronizationSource"
        }
    ],
    "dom-rtcrtptransceiver-currentdirection": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "currentDirection",
            "slug": "API/RTCRtpTransceiver/currentDirection",
            "summary": "The read-only RTCRtpTransceiver property currentDirection is a string which indicates the current directionality of the transceiver.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": "59"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiver.currentDirection"
        }
    ],
    "dom-rtcrtptransceiver-direction": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "direction",
            "slug": "API/RTCRtpTransceiver/direction",
            "summary": "The RTCRtpTransceiver property direction is a string which indicates the transceiver's preferred directionality.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": "59"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiver.direction"
        }
    ],
    "dom-rtptransceiver-mid": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "mid",
            "slug": "API/RTCRtpTransceiver/mid",
            "summary": "The read-only RTCRtpTransceiver interface's mid property specifies the negotiated media ID (mid) which the local and remote peers have agreed upon to uniquely identify the stream's pairing of sender and receiver.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": "59"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiver.mid"
        }
    ],
    "dom-rtcrtptransceiver-receiver": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "receiver",
            "slug": "API/RTCRtpTransceiver/receiver",
            "summary": "The read-only  receiver property of WebRTC's RTCRtpTransceiver interface indicates the RTCRtpReceiver responsible for receiving and decoding incoming media data for the transceiver's stream.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": "59"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiver.receiver"
        }
    ],
    "dom-rtcrtptransceiver-sender": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "sender",
            "slug": "API/RTCRtpTransceiver/sender",
            "summary": "The read-only  sender property of WebRTC's RTCRtpTransceiver interface indicates the RTCRtpSender responsible for encoding and sending outgoing media data for the transceiver's stream.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": "59"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiver.sender"
        }
    ],
    "dom-rtcrtptransceiver-setcodecpreferences": [
        {
            "engines": [],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "setCodecPreferences",
            "slug": "API/RTCRtpTransceiver/setCodecPreferences",
            "summary": "The RTCRtpTransceiver method setCodecPreferences() configures the transceiver's codecs given a list of RTCRtpCodecCapability objects specifying the new preferences for each codec.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCRtpTransceiver.setCodecPreferences()"
        }
    ],
    "dom-rtcrtptransceiver-stop": [
        {
            "engines": [
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "stop",
            "slug": "API/RTCRtpTransceiver/stop",
            "summary": "The stop() method in the RTCRtpTransceiver interface permanently stops the transceiver by stopping both the associated RTCRtpSender and RTCRtpReceiver.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": "59"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCRtpTransceiver.stop()"
        }
    ],
    "rtcrtptransceiver-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "RTCRtpTransceiver",
            "slug": "API/RTCRtpTransceiver",
            "summary": "The WebRTC interface RTCRtpTransceiver describes a permanent pairing of an RTCRtpSender and an RTCRtpReceiver, along with some shared state.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": "59"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiver"
        }
    ],
    "dom-rtcrtptransceiverdirection": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCRtpTransceiverDirection.json",
            "name": "RTCRtpTransceiverDirection",
            "slug": "API/RTCRtpTransceiverDirection",
            "summary": "The RTCRtpTransceiverDirection type is an enumerated set of strings which are used to describe the directionality of a RTCRtpTransceiver instance.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": "59"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiverDirection"
        }
    ],
    "dom-rtcrtptransceiverinit": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCRtpTransceiverInit.json",
            "name": "RTCRtpTransceiverInit",
            "slug": "API/RTCRtpTransceiverInit",
            "summary": "The RTCRtpTransceiverInit dictionary is used when calling the WebRTC function RTCPeerConnection.addTransceiver() to provide configuration options for the new transceiver.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": "59"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "10.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiverInit"
        }
    ],
    "dom-rtcsctptransport-state": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCSctpTransport.json",
            "name": "state",
            "slug": "API/RTCSctpTransport/state",
            "summary": "The state read-only property of the RTCSctpTransport interface provides information which describes a Stream Control Transmission Protocol (SCTP) transport state.",
            "support": {
                "chrome": {
                    "version_added": "76"
                },
                "chrome_android": {
                    "version_added": "76"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1278299'>bug 1278299</a>."
                },
                "firefox_android": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1278299'>bug 1278299</a>."
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": "54"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "12.0"
                },
                "webview_android": {
                    "version_added": "76"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCSctpTransport.state"
        }
    ],
    "rtcsctptransport-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCSctpTransport.json",
            "name": "RTCSctpTransport",
            "slug": "API/RTCSctpTransport",
            "summary": "The RTCSctpTransport interface provides information which describes a Stream Control Transmission Protocol (SCTP) transport. This provides information about limitations of the transport, but also provides a way to access the underlying Datagram Transport Layer Security (DTLS) transport over which SCTP packets for all of an RTCPeerConnection's data channels are sent and received.",
            "support": {
                "chrome": {
                    "version_added": "76"
                },
                "chrome_android": {
                    "version_added": "76"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1278299'>bug 1278299</a>."
                },
                "firefox_android": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1278299'>bug 1278299</a>."
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": "54"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "12.0"
                },
                "webview_android": {
                    "version_added": "76"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCSctpTransport"
        }
    ],
    "dom-rtcsessiondescription-sdp": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "prefixed": [
                "gecko"
            ],
            "filename": "api/RTCSessionDescription.json",
            "name": "sdp",
            "slug": "API/RTCSessionDescription/sdp",
            "summary": "The property RTCSessionDescription.sdp is a read-only DOMString containing the SDP which describes the session.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "prefix": "moz",
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCSessionDescription.sdp"
        }
    ],
    "dom-rtcsessiondescription-tojson": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "prefixed": [
                "gecko"
            ],
            "filename": "api/RTCSessionDescription.json",
            "name": "toJSON",
            "slug": "API/RTCSessionDescription/toJSON",
            "summary": "The RTCSessionDescription.toJSON() method generates a JSON description of the object. Both properties, type and sdp, are contained in the generated JSON.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "prefix": "moz",
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCSessionDescription.toJSON()"
        }
    ],
    "dom-rtcsessiondescription-type": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "prefixed": [
                "gecko"
            ],
            "filename": "api/RTCSessionDescription.json",
            "name": "type",
            "slug": "API/RTCSessionDescription/type",
            "summary": "The property RTCSessionDescription.type is a read-only value of type RTCSdpType which describes the description's type.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "prefix": "moz",
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCSessionDescription.type"
        }
    ],
    "rtcsessiondescription-class": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "prefixed": [
                "gecko"
            ],
            "filename": "api/RTCSessionDescription.json",
            "name": "RTCSessionDescription",
            "slug": "API/RTCSessionDescription",
            "summary": "The RTCSessionDescription interface describes one end of a connection—or potential connection—and how it's configured. Each RTCSessionDescription consists of a description type indicating which part of the offer/answer negotiation process it describes and of the SDP descriptor of the session.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "prefix": "moz",
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "RTCSessionDescription"
        }
    ],
    "rtcstatsreport-object": [
        {
            "engines": [],
            "filename": "api/RTCStatsReport.json",
            "name": "RTCStatsReport",
            "slug": "API/RTCStatsReport",
            "summary": "The RTCStatsReport interface provides a statistics report obtained by calling one of the RTCPeerConnection.getStats(), RTCRtpReceiver.getStats(), and RTCRtpSender.getStats() methods.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCStatsReport"
        }
    ],
    "dom-trackevent-receiver": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCTrackEvent.json",
            "name": "receiver",
            "slug": "API/RTCTrackEvent/receiver",
            "summary": "The read-only receiver property of the RTCTrackEvent interface indicates the RTCRtpReceiver which is used to receive data containing media for the track to which the event refers.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEvent.receiver"
        }
    ],
    "dom-rtctrackevent-streams": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCTrackEvent.json",
            "name": "streams",
            "slug": "API/RTCTrackEvent/streams",
            "summary": "The WebRTC API interface RTCTrackEvent's read-only streams property specifies an array of MediaStream objects, one for each of the streams that comprise the track being added to the RTCPeerConnection.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEvent.streams"
        }
    ],
    "dom-rtctrackevent-track": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCTrackEvent.json",
            "name": "track",
            "slug": "API/RTCTrackEvent/track",
            "summary": "The WebRTC API interface RTCTrackEvent's read-only track property specifies the MediaStreamTrack that has been added to the RTCPeerConnection.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEvent.track"
        }
    ],
    "dom-trackevent-transceiver": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCTrackEvent.json",
            "name": "transceiver",
            "slug": "API/RTCTrackEvent/transceiver",
            "summary": "The WebRTC API interface RTCTrackEvent's read-only transceiver property indicates the RTCRtpTransceiver affiliated with the event's track.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": "59"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEvent.transceiver"
        }
    ],
    "dom-rtctrackevent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCTrackEvent.json",
            "name": "RTCTrackEvent",
            "slug": "API/RTCTrackEvent",
            "summary": "The WebRTC API interface RTCTrackEvent represents the track event, which is sent when a new MediaStreamTrack is added to an RTCRtpReceiver which is part of the RTCPeerConnection.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEvent"
        }
    ],
    "dom-rtctrackeventinit-receiver": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCTrackEventInit.json",
            "name": "receiver",
            "slug": "API/RTCTrackEventInit/receiver",
            "summary": "The RTCTrackEventInit dictionary's receiver property specifies the RTCRtpReceiver associated with the event.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEventInit.receiver"
        }
    ],
    "dom-rtctrackeventinit-streams": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCTrackEventInit.json",
            "name": "streams",
            "slug": "API/RTCTrackEventInit/streams",
            "summary": "The RTCTrackEventInit dictionary's optional streams property provides an array containing a MediaStream object for each of the streams associated with the event's track.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEventInit.streams"
        }
    ],
    "dom-rtctrackeventinit-track": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCTrackEventInit.json",
            "name": "track",
            "slug": "API/RTCTrackEventInit/track",
            "summary": "The RTCTrackEventInit dictionary's track property specifies the MediaStreamTrack associated with the track event.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEventInit.track"
        }
    ],
    "dom-rtctrackeventinit-transceiver": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCTrackEventInit.json",
            "name": "transceiver",
            "slug": "API/RTCTrackEventInit/transceiver",
            "summary": "The RTCTrackEventInit dictionary's transceiver property specifies the RTCRtpTransceiver associated with the track event.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": {
                    "version_added": "69"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": "59"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "69"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEventInit.transceiver"
        }
    ],
    "dom-rtctrackeventinit": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/RTCTrackEventInit.json",
            "name": "RTCTrackEventInit",
            "slug": "API/RTCTrackEventInit",
            "summary": "The WebRTC API's RTCTrackEventInit dictionary is used to provide information describing an RTCTrackEvent when instantiating a new track event using new RTCTrackEvent().",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "56"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "56"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEventInit"
        }
    ]
}

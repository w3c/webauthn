{
    "dom-formdata": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/FormData.json",
            "name": "FormData",
            "slug": "API/FormData/FormData",
            "summary": "The FormData() constructor creates a new FormData object.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "5"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "FormData()"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/FormData.json",
            "name": "entries",
            "slug": "API/FormData/entries",
            "summary": "The FormData.entries() method returns an iterator allowing to go through all key/value pairs contained in this object. The key of each pair is a USVString object; the value either a USVString, or a Blob.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "44"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "FormData.entries()"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/FormData.json",
            "name": "keys",
            "slug": "API/FormData/keys",
            "summary": "The FormData.keys() method returns an iterator allowing to go through all keys contained in this object. The keys are USVString objects.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "44"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "FormData.keys()"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/FormData.json",
            "name": "values",
            "slug": "API/FormData/values",
            "summary": "The FormData.values() method returns an iterator allowing to go through all values contained in this object. The values are USVString or Blob objects.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "44"
                },
                "firefox_android": {
                    "version_added": "44"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "FormData.values()"
        }
    ],
    "dom-formdata-append": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/FormData.json",
            "name": "append",
            "slug": "API/FormData/append",
            "summary": "The append() method of the FormData interface appends a new value onto an existing key inside a FormData object, or adds the key if it does not already exist.",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4",
                    "notes": "Prior to Firefox 7, specifying a <a href='https://developer.mozilla.org/docs/Web/API/Blob'><code>Blob</code></a> as the data to append to the object, the filename reported in the <code>Content-Disposition</code> HTTP header was an empty string, resulting in errors on some servers. Starting with Firefox 7, the filename <code>blob</code> is sent."
                },
                "firefox_android": {
                    "version_added": "4",
                    "notes": "Prior to Firefox 7, specifying a <a href='https://developer.mozilla.org/docs/Web/API/Blob'><code>Blob</code></a> as the data to append to the object, the filename reported in the <code>Content-Disposition</code> HTTP header was an empty string, resulting in errors on some servers. Starting with Firefox 7, the filename <code>blob</code> is sent."
                },
                "ie": {
                    "version_added": "10",
                    "notes": "With the \"Include local directory pass when uploading files to a server\" option enabled, IE will change the filename inside the <a href='https://developer.mozilla.org/docs/Web/API/Blob'><code>Blob</code></a> on the fly. To have direct control of the sent filename, the developer should send the filename as the third parameter value, i.e. <code>formData.append(name, value, filename)</code>."
                },
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "5"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "3",
                    "notes": "XHR in Android 4.0 sends empty content for <code>FormData</code> with <code>blob</code>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "FormData.append()"
        }
    ],
    "dom-formdata-delete": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/FormData.json",
            "name": "delete",
            "slug": "API/FormData/delete",
            "summary": "The delete() method of the FormData interface deletes a key and its value(s) from a FormData object.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "39"
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "FormData.delete()"
        }
    ],
    "dom-formdata-get": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/FormData.json",
            "name": "get",
            "slug": "API/FormData/get",
            "summary": "The get() method of the FormData interface returns the first value associated with a given key from within a FormData object. If you expect multiple values and want all of them, use the getAll() method instead.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "39"
                },
                "firefox_android": {
                    "version_added": "39"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "FormData.get()"
        }
    ],
    "dom-formdata-getall": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/FormData.json",
            "name": "getAll",
            "slug": "API/FormData/getAll",
            "summary": "The getAll() method of the FormData interface returns all the values associated with a given key from within a FormData object.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "39"
                },
                "firefox_android": {
                    "version_added": "39"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "FormData.getAll()"
        }
    ],
    "dom-formdata-has": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/FormData.json",
            "name": "has",
            "slug": "API/FormData/has",
            "summary": "The has() method of the FormData interface returns a boolean stating whether a FormData object contains a certain key.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "39"
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "FormData.has()"
        }
    ],
    "dom-formdata-set": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/FormData.json",
            "name": "set",
            "slug": "API/FormData/set",
            "summary": "The set() method of the FormData interface sets a new value for an existing key inside a FormData object, or adds the key/value if it does not already exist.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "39"
                },
                "firefox_android": {
                    "version_added": "39"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": "11"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "FormData.set()"
        }
    ],
    "interface-formdata": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/FormData.json",
            "name": "FormData",
            "slug": "API/FormData",
            "summary": "The FormData interface provides a way to easily construct a set of key/value pairs representing form fields and their values, which can then be easily sent using the XMLHttpRequest.send() method. It uses the same format a form would use if the encoding type were set to \"multipart/form-data\".",
            "support": {
                "chrome": {
                    "version_added": "7"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4",
                    "notes": "Prior to Firefox 7, specifying a <a href='https://developer.mozilla.org/docs/Web/API/Blob'><code>Blob</code></a> as the data to append to the object, the filename reported in the <code>Content-Disposition</code> HTTP header was an empty string, resulting in errors on some servers. Starting with Firefox 7, the filename <code>blob</code> is sent."
                },
                "firefox_android": {
                    "version_added": "4",
                    "notes": "Prior to Firefox 7, specifying a <a href='https://developer.mozilla.org/docs/Web/API/Blob'><code>Blob</code></a> as the data to append to the object, the filename reported in the <code>Content-Disposition</code> HTTP header was an empty string, resulting in errors on some servers. Starting with Firefox 7, the filename <code>blob</code> is sent."
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "5"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37",
                    "notes": "XHR in Android 4.0 sends empty content for <code>FormData</code> with <code>blob</code>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "FormData"
        }
    ],
    "dom-progressevent-progressevent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ProgressEvent.json",
            "name": "ProgressEvent",
            "slug": "API/ProgressEvent/ProgressEvent",
            "summary": "The ProgressEvent() constructor returns a newly created ProgressEvent, representing the current completion of a long process.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "22"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "ProgressEvent()"
        }
    ],
    "dom-progressevent-lengthcomputable": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ProgressEvent.json",
            "name": "lengthComputable",
            "slug": "API/ProgressEvent/lengthComputable",
            "summary": "The ProgressEvent.lengthComputable read-only property is a Boolean flag indicating if the resource concerned by the ProgressEvent has a length that can be calculated. If not, the ProgressEvent.total property has no significant value.",
            "support": {
                "chrome": {
                    "version_added": "50"
                },
                "chrome_android": {
                    "version_added": "50"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": true
                },
                "opera": {
                    "version_added": "37"
                },
                "opera_android": {
                    "version_added": "37"
                },
                "safari": {
                    "version_added": "3.1"
                },
                "safari_ios": {
                    "version_added": "2"
                },
                "samsunginternet_android": {
                    "version_added": "5.0"
                },
                "webview_android": {
                    "version_added": "50"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ProgressEvent.lengthComputable"
        }
    ],
    "dom-progressevent-loaded": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ProgressEvent.json",
            "name": "loaded",
            "slug": "API/ProgressEvent/loaded",
            "summary": "The ProgressEvent.loaded read-only property is an integer representing the amount of work already performed by the underlying process. The ratio of work done can be calculated with the property and ProgressEvent.total. When downloading a resource using HTTP, this only represent the part of the content itself, not headers and other overhead.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "ProgressEvent.loaded"
        }
    ],
    "dom-progressevent-total": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ProgressEvent.json",
            "name": "total",
            "slug": "API/ProgressEvent/total",
            "summary": "The ProgressEvent.total read-only property is an unsigned 64-bit integer value indicating the total size of the data being processed or transmitted. In the case of an HTTP transmission, this is the size of the body of the message (the Content-Length), and does not include headers and other overhead.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "ProgressEvent.total"
        }
    ],
    "interface-progressevent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ProgressEvent.json",
            "name": "ProgressEvent",
            "slug": "API/ProgressEvent",
            "summary": "The ProgressEvent interface represents events measuring progress of an underlying process, like an HTTP request (for an XMLHttpRequest, or the loading of the underlying resource of an <img>, <audio>, <video>, <style> or <link>).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3.5"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ProgressEvent"
        }
    ],
    "the-abort()-method": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "abort",
            "slug": "API/XMLHttpRequest/abort",
            "summary": "The XMLHttpRequest.abort() method aborts the request if it has already been sent. When a request is aborted, its readyState is changed to XMLHttpRequest.UNSENT (0) and the request's status code is set to 0.",
            "support": {
                "chrome": {
                    "version_added": "18"
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "5"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": "1.2"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.abort()"
        }
    ],
    "event-xhr-abort": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "abort_event",
            "slug": "API/XMLHttpRequest/abort_event",
            "summary": "The abort event is fired when a request has been aborted, for example because the program called XMLHttpRequest.abort().",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "XMLHttpRequest: abort event"
        }
    ],
    "event-xhr-error": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "error_event",
            "slug": "API/XMLHttpRequest/error_event",
            "summary": "The error event is fired when the request encountered an error.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "XMLHttpRequest: error event"
        }
    ],
    "the-getallresponseheaders()-method": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "getAllResponseHeaders",
            "slug": "API/XMLHttpRequest/getAllResponseHeaders",
            "summary": "The XMLHttpRequest method getAllResponseHeaders() returns all the response headers, separated by CRLF, as a string, or returns null if no response has been received.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4",
                    "notes": "Starting from Firefox 49, empty headers are returned as empty strings in case the preference <code>network.http.keep_empty_response_headers_as_empty_string</code> is set to <code>true</code>, defaulting to <code>false</code>. Before Firefox 49 empty headers had been ignored. Since Firefox 50 the preference defaults to <code>true</code>."
                },
                "firefox_android": {
                    "version_added": "4",
                    "notes": "Starting from Firefox 49, empty headers are returned as empty strings in case the preference <code>network.http.keep_empty_response_headers_as_empty_string</code> is set to <code>true</code>, defaulting to <code>false</code>. Before Firefox 49 empty headers had been ignored. Since Firefox 50 the preference defaults to <code>true</code>."
                },
                "ie": {
                    "version_added": "5"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": "1.2"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.getAllResponseHeaders()"
        }
    ],
    "dom-xmlhttprequest-getresponseheader": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "getResponseHeader",
            "slug": "API/XMLHttpRequest/getResponseHeader",
            "summary": "The XMLHttpRequest method getResponseHeader() returns the string containing the text of a particular header's value.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1",
                    "notes": "Starting from Firefox 49, empty headers are returned as empty strings in case the preference <code>network.http.keep_empty_response_headers_as_empty_string</code> is set to <code>true</code>, defaulting to <code>false</code>. Before Firefox 49 empty headers had been ignored. Since Firefox 50 the preference defaults to <code>true</code>."
                },
                "firefox_android": {
                    "version_added": "4",
                    "notes": "Starting from Firefox 49, empty headers are returned as empty strings in case the preference <code>network.http.keep_empty_response_headers_as_empty_string</code> is set to <code>true</code>, defaulting to <code>false</code>. Before Firefox 49 empty headers had been ignored. Since Firefox 50 the preference defaults to <code>true</code>."
                },
                "ie": {
                    "version_added": "5"
                },
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.2"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.getResponseHeader()"
        }
    ],
    "event-xhr-load": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "load_event",
            "slug": "API/XMLHttpRequest/load_event",
            "summary": "The load event is fired when an XMLHttpRequest transaction completes successfully.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "9"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "XMLHttpRequest: load event"
        }
    ],
    "event-xhr-loadend": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "loadend_event",
            "slug": "API/XMLHttpRequest/loadend_event",
            "summary": "The loadend event is fired when a request has completed, whether successfully (after load) or unsuccessfully (after abort or error).",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "XMLHttpRequest: loadend event"
        }
    ],
    "event-xhr-loadstart": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "loadstart_event",
            "slug": "API/XMLHttpRequest/loadstart_event",
            "summary": "The loadstart event is fired when a request has started to load data.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "XMLHttpRequest: loadstart event"
        }
    ],
    "handler-xhr-onreadystatechange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "onreadystatechange",
            "slug": "API/XMLHttpRequest/onreadystatechange",
            "summary": "An EventHandler that is called whenever the readyState attribute changes. The callback is called from the user interface thread. The XMLHttpRequest.onreadystatechange property contains the event handler to be called when the readystatechange event is fired, that is every time the readyState property of the XMLHttpRequest changes.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5"
                },
                "opera": {
                    "version_added": "9"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.2"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.onreadystatechange"
        }
    ],
    "the-open()-method": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "open",
            "slug": "API/XMLHttpRequest/open",
            "summary": "The XMLHttpRequest method open() initializes a newly-created request, or re-initializes an existing one.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1",
                    "notes": "Starting in Firefox 30, synchronous requests on the main thread have been deprecated due to their negative impact on performance and the user experience. Therefore, the <code>async</code> parameter may not be <code>false</code> except in a <code>Worker</code>."
                },
                "firefox_android": {
                    "version_added": "4",
                    "notes": "Starting in Firefox 30, synchronous requests on the main thread have been deprecated due to their negative impact on performance and the user experience. Therefore, the <code>async</code> parameter may not be <code>false</code> except in a <code>Worker</code>."
                },
                "ie": {
                    "version_added": "5"
                },
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.2"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.open()"
        }
    ],
    "the-overridemimetype()-method": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "overrideMimeType",
            "slug": "API/XMLHttpRequest/overrideMimeType",
            "summary": "The XMLHttpRequest method overrideMimeType() specifies a MIME type other than the one provided by the server to be used instead when interpreting the data being transferred in a request.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "5",
                        "notes": "Implemented via <code>ActiveXObject</code>"
                    }
                ],
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": "1.2"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.overrideMimeType()"
        }
    ],
    "event-xhr-progress": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "progress_event",
            "slug": "API/XMLHttpRequest/progress_event",
            "summary": "The progress event is fired periodically when a request receives more data.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "XMLHttpRequest: progress event"
        }
    ],
    "states": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "readyState",
            "slug": "API/XMLHttpRequest/readyState",
            "summary": "The XMLHttpRequest.readyState property returns the state an XMLHttpRequest client is in. An XHR client exists in one of the following states:",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "7"
                },
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.2"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.readyState"
        }
    ],
    "the-response-attribute": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "response",
            "slug": "API/XMLHttpRequest/response",
            "summary": "The XMLHttpRequest response property returns the response's body content as an ArrayBuffer, Blob, Document, JavaScript Object, or DOMString, depending on the value of the request's responseType property.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "6"
                },
                "firefox_android": {
                    "version_added": "6"
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "6"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.response"
        }
    ],
    "the-responsetext-attribute": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "responseText",
            "slug": "API/XMLHttpRequest/responseText",
            "summary": "The read-only XMLHttpRequest property responseText returns the text received from a server following a request being sent.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5",
                    "notes": "Before Internet Explorer 10, the value of <code>XMLHttpRequest.responseText</code> could be read only once the request was complete."
                },
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.2"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.responseText"
        }
    ],
    "the-responsetype-attribute": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "responseType",
            "slug": "API/XMLHttpRequest/responseType",
            "summary": "The XMLHttpRequest property responseType is an enumerated string value specifying the type of data contained in the response.",
            "support": {
                "chrome": {
                    "version_added": "31"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "6"
                },
                "firefox_android": {
                    "version_added": "50"
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": [
                    {
                        "version_added": "12",
                        "version_removed": "15"
                    },
                    {
                        "version_added": "18"
                    }
                ],
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "7"
                },
                "safari_ios": {
                    "version_added": "7"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.responseType"
        }
    ],
    "the-responseurl-attribute": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "responseURL",
            "slug": "API/XMLHttpRequest/responseURL",
            "summary": "The read-only XMLHttpRequest.responseURL property returns the serialized URL of the response or the empty string if the URL is null. If the URL is returned, any URL fragment present in the URL will be stripped away. The value of responseURL will be the final URL obtained after any redirects.",
            "support": {
                "chrome": {
                    "version_added": "37"
                },
                "chrome_android": {
                    "version_added": "37"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "32"
                },
                "firefox_android": {
                    "version_added": "32"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "24"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "8"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.responseURL"
        }
    ],
    "the-responsexml-attribute": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "responseXML",
            "slug": "API/XMLHttpRequest/responseXML",
            "summary": "The XMLHttpRequest.responseXML read-only property returns a Document containing the HTML or XML retrieved by the request; or null if the request was unsuccessful, has not yet been sent, or if the data can't be parsed as XML or HTML.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true,
                    "notes": "Prior to Firefox 51, an error parsing the received data added a <code>&lt;parsererror&gt;</code> node to the top of the <code>Document</code> and then returned the <code>Document</code> in whatever state it happens to be in. This was inconsistent with the specification. Starting with Firefox 51, this scenario now correctly returns <code>null</code> as per the spec."
                },
                "firefox_android": {
                    "version_added": true,
                    "notes": "Prior to Firefox 51, an error parsing the received data added a <code>&lt;parsererror&gt;</code> node to the top of the <code>Document</code> and then returned the <code>Document</code> in whatever state it happens to be in. This was inconsistent with the specification. Starting with Firefox 51, this scenario now correctly returns <code>null</code> as per the spec."
                },
                "ie": {
                    "version_added": true
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "XMLHttpRequest.responseXML"
        }
    ],
    "the-send()-method": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "send",
            "slug": "API/XMLHttpRequest/send",
            "summary": "The XMLHttpRequest method send() sends the request to the server.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5"
                },
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.2"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.send()"
        }
    ],
    "the-setrequestheader()-method": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "setRequestHeader",
            "slug": "API/XMLHttpRequest/setRequestHeader",
            "summary": "The XMLHttpRequest method setRequestHeader() sets the value of an HTTP request header. When using setRequestHeader(), you must call it after calling open(), but before calling send(). If this method is called several times with the same header, the values are merged into one single request header.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "5"
                },
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.2"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.setRequestHeader()"
        }
    ],
    "the-status-attribute": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "status",
            "slug": "API/XMLHttpRequest/status",
            "summary": "The read-only XMLHttpRequest.status property returns the numerical HTTP status code of the XMLHttpRequest's response.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "7",
                    "notes": "Internet Explorer version 5 and 6 supported ajax calls using <code>ActiveXObject()</code>"
                },
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.2"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.status"
        }
    ],
    "the-statustext-attribute": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "statusText",
            "slug": "API/XMLHttpRequest/statusText",
            "summary": "The read-only XMLHttpRequest.statusText property returns a DOMString containing the response's status message as returned by the HTTP server. Unlike XMLHTTPRequest.status which indicates a numerical status code, this property contains the text of the response status, such as \"OK\" or \"Not Found\". If the request's readyState is in UNSENT or OPENED state, the value of statusText will be an empty string.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "7",
                    "notes": "Internet Explorer version 5 and 6 supported ajax calls using <code>ActiveXObject()</code>"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": "1.2"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.statusText"
        }
    ],
    "the-timeout-attribute": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "timeout",
            "slug": "API/XMLHttpRequest/timeout",
            "summary": "The XMLHttpRequest.timeout property is an unsigned long representing the number of milliseconds a request can take before automatically being terminated. The default value is 0, which means there is no timeout. Timeout shouldn't be used for synchronous XMLHttpRequests requests used in a document environment or it will throw an InvalidAccessError exception. When a timeout happens, a timeout event is fired.",
            "support": {
                "chrome": {
                    "version_added": "29"
                },
                "chrome_android": {
                    "version_added": "29"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "12"
                },
                "firefox_android": {
                    "version_added": "14"
                },
                "ie": {
                    "version_added": "8"
                },
                "opera": [
                    {
                        "version_added": "17"
                    },
                    {
                        "version_added": "12",
                        "version_removed": "16"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "18"
                    },
                    {
                        "version_added": "12",
                        "version_removed": "16"
                    }
                ],
                "safari": {
                    "version_added": "6.1"
                },
                "safari_ios": {
                    "version_added": "7"
                },
                "samsunginternet_android": {
                    "version_added": "2.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.timeout"
        }
    ],
    "event-xhr-timeout": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "timeout_event",
            "slug": "API/XMLHttpRequest/timeout_event",
            "summary": "The timeout event is fired when progression is terminated due to preset time expiring.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "XMLHttpRequest: timeout event"
        }
    ],
    "the-upload-attribute": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "upload",
            "slug": "API/XMLHttpRequest/upload",
            "summary": "The XMLHttpRequest upload property returns an XMLHttpRequestUpload object that can be observed to monitor an upload's progress.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": "10"
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.upload"
        }
    ],
    "the-withcredentials-attribute": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequest.json",
            "name": "withCredentials",
            "slug": "API/XMLHttpRequest/withCredentials",
            "summary": "The XMLHttpRequest.withCredentials property is a Boolean that indicates whether or not cross-site Access-Control requests should be made using credentials such as cookies, authorization headers or TLS client certificates. Setting withCredentials has no effect on same-site requests.",
            "support": {
                "chrome": {
                    "version_added": "3"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3.5",
                    "notes": "Starting with Firefox 11, it's no longer supported to use the <code>withCredentials</code> attribute when performing synchronous requests. Attempting to do so throws an <code>NS_ERROR_DOM_INVALID_ACCESS_ERR</code> exception."
                },
                "firefox_android": {
                    "version_added": "4",
                    "notes": "Starting with Firefox 11, it's no longer supported to use the <code>withCredentials</code> attribute when performing synchronous requests. Attempting to do so throws an <code>NS_ERROR_DOM_INVALID_ACCESS_ERR</code> exception."
                },
                "ie": {
                    "version_added": "10",
                    "notes": "Internet Explorer versions 8 and 9 supported cross-domain requests (CORS) using <a href='https://developer.mozilla.org/docs/Web/API/XDomainRequest'><code>XDomainRequest</code></a>."
                },
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "4"
                },
                "safari_ios": {
                    "version_added": "3.2"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XMLHttpRequest.withCredentials"
        }
    ],
    "handler-xhr-onabort": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequestEventTarget.json",
            "name": "onabort",
            "slug": "API/XMLHttpRequestEventTarget/onabort",
            "summary": "The XMLHttpRequestEventTarget.onabort is the function called when an XMLHttpRequest transaction is aborted, such as when the XMLHttpRequest.abort() function is called.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "XMLHttpRequestEventTarget.onabort"
        }
    ],
    "handler-xhr-onerror": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequestEventTarget.json",
            "name": "onerror",
            "slug": "API/XMLHttpRequestEventTarget/onerror",
            "summary": "The XMLHttpRequestEventTarget.onerror is the function called when an XMLHttpRequest transaction fails due to an error.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "XMLHttpRequestEventTarget.onerror"
        }
    ],
    "handler-xhr-onload": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequestEventTarget.json",
            "name": "onload",
            "slug": "API/XMLHttpRequestEventTarget/onload",
            "summary": "The XMLHttpRequestEventTarget.onload is the function called when an XMLHttpRequest transaction completes successfully.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "9"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "XMLHttpRequestEventTarget.onload"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequestEventTarget.json",
            "name": "onprogress",
            "slug": "API/XMLHttpRequestEventTarget/onprogress",
            "summary": "The XMLHttpRequestEventTarget.onprogress is the function called periodically with information when an XMLHttpRequest before success completely.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "XMLHttpRequestEventTarget.onprogress"
        }
    ],
    "handler-xhr-onloadstart": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/XMLHttpRequestEventTarget.json",
            "name": "onloadstart",
            "slug": "API/XMLHttpRequestEventTarget/onloadstart",
            "summary": "The XMLHttpRequestEventTarget.onloadstart is the function called when an XMLHttpRequest transaction starts transferring data.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": true
                },
                "safari_ios": {
                    "version_added": true
                },
                "samsunginternet_android": {
                    "version_added": true
                },
                "webview_android": {
                    "version_added": true
                },
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "XMLHttpRequestEventTarget.onloadstart"
        }
    ],
    "feature-policy-integration": [
        {
            "engines": [
                "blink"
            ],
            "filename": "http/headers/feature-policy.json",
            "name": "sync-xhr",
            "slug": "HTTP/Headers/Feature-Policy/sync-xhr",
            "summary": "The HTTP Feature-Policy header sync-xhr directive controls whether the current document is allowed to make synchronous XMLHttpRequest requests.",
            "support": {
                "chrome": {
                    "version_added": "65"
                },
                "chrome_android": {
                    "version_added": "65"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "52"
                },
                "opera_android": {
                    "version_added": "47"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "9.0"
                },
                "webview_android": {
                    "version_added": "65"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Feature-Policy: sync-xhr"
        }
    ]
}

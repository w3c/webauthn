{
    "the-gotpointercapture-event": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/Document.json",
            "name": "gotpointercapture_event",
            "slug": "API/Document/gotpointercapture_event",
            "summary": "The gotpointercapture event is fired when an element captures a pointer using setPointerCapture().",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": "57"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": null
                },
                "opera": {
                    "version_added": "44"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "57"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Document: gotpointercapture event"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/HTMLElement.json",
            "name": "gotpointercapture_event",
            "slug": "API/HTMLElement/gotpointercapture_event",
            "summary": "The gotpointercapture event is fired when an element captures a pointer using setPointerCapture().",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": "57"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": null
                },
                "opera": {
                    "version_added": "44"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "57"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement: gotpointercapture event"
        }
    ],
    "the-lostpointercapture-event": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/Document.json",
            "name": "lostpointercapture_event",
            "slug": "API/Document/lostpointercapture_event",
            "summary": "The lostpointercapture event is fired when a captured pointer is released.",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": "57"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": null
                },
                "opera": {
                    "version_added": "44"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "57"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Document: lostpointercapture event"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/HTMLElement.json",
            "name": "lostpointercapture_event",
            "slug": "API/HTMLElement/lostpointercapture_event",
            "summary": "The lostpointercapture event is fired when a captured pointer is released.",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": "57"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": null
                },
                "opera": {
                    "version_added": "44"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": null
                },
                "safari_ios": {
                    "version_added": null
                },
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": {
                    "version_added": "57"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement: lostpointercapture event"
        }
    ],
    "the-pointercancel-event": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/Document.json",
            "name": "pointercancel_event",
            "slug": "API/Document/pointercancel_event",
            "summary": "The pointercancel event is fired when the browser determines that there are unlikely to be any more pointer events, or if after the pointerdown event is fired, the pointer is then used to manipulate the viewport by panning, zooming, or scrolling.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointercancel"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Document: pointercancel event"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/HTMLElement.json",
            "name": "pointercancel_event",
            "slug": "API/HTMLElement/pointercancel_event",
            "summary": "The pointercancel event is fired when the browser determines that there are unlikely to be any more pointer events, or if after the pointerdown event is fired, the pointer is then used to manipulate the viewport by panning, zooming, or scrolling.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointercancel"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement: pointercancel event"
        }
    ],
    "the-pointerdown-event": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/Document.json",
            "name": "pointerdown_event",
            "slug": "API/Document/pointerdown_event",
            "summary": "The pointerdown event is fired when a pointer becomes active. For mouse, it is fired when the device transitions from no buttons depressed to at least one button depressed. For touch, it is fired when physical contact is made with the digitizer. For pen, it is fired when the stylus makes physical contact with the digitizer.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointerdown"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Document: pointerdown event"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/HTMLElement.json",
            "name": "pointerdown_event",
            "slug": "API/HTMLElement/pointerdown_event",
            "summary": "The pointerdown event is fired when a pointer becomes active. For mouse, it is fired when the device transitions from no buttons depressed to at least one button depressed. For touch, it is fired when physical contact is made with the digitizer. For pen, it is fired when the stylus makes physical contact with the digitizer.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointerdown"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement: pointerdown event"
        }
    ],
    "the-pointerenter-event": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/Document.json",
            "name": "pointerenter_event",
            "slug": "API/Document/pointerenter_event",
            "summary": "The pointerenter event fires when a pointing device is moved into the hit test boundaries of an element or one of its descendants, including as a result of a pointerdown event from a device that does not support hover (see pointerdown).",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointerenter"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Document: pointerenter event"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/HTMLElement.json",
            "name": "pointerenter_event",
            "slug": "API/HTMLElement/pointerenter_event",
            "summary": "The pointerenter event fires when a pointing device is moved into the hit test boundaries of an element or one of its descendants, including as a result of a pointerdown event from a device that does not support hover (see pointerdown).",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointerenter"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement: pointerenter event"
        }
    ],
    "the-pointerleave-event": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/Document.json",
            "name": "pointerleave_event",
            "slug": "API/Document/pointerleave_event",
            "summary": "The pointerleave event is fired when a pointing device is moved out of the hit test boundaries of an element. For pen devices, this event is fired when the stylus leaves the hover range detectable by the digitizer.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointerleave"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Document: pointerleave event"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/HTMLElement.json",
            "name": "pointerleave_event",
            "slug": "API/HTMLElement/pointerleave_event",
            "summary": "The pointerleave event is fired when a pointing device is moved out of the hit test boundaries of an element. For pen devices, this event is fired when the stylus leaves the hover range detectable by the digitizer.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointerleave"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement: pointerleave event"
        }
    ],
    "the-pointermove-event": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/Document.json",
            "name": "pointermove_event",
            "slug": "API/Document/pointermove_event",
            "summary": "The pointermove event is fired when a pointer changes coordinates, and the pointer has not been canceled by a browser touch-action.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointermove"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Document: pointermove event"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/HTMLElement.json",
            "name": "pointermove_event",
            "slug": "API/HTMLElement/pointermove_event",
            "summary": "The pointermove event is fired when a pointer changes coordinates, and the pointer has not been canceled by a browser touch-action.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointermove"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement: pointermove event"
        }
    ],
    "the-pointerout-event": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/Document.json",
            "name": "pointerout_event",
            "slug": "API/Document/pointerout_event",
            "summary": "The pointerout event is fired for several reasons including: pointing device is moved out of the hit test boundaries of an element; firing the pointerup event for a device that does not support hover (see pointerup); after firing the pointercancel event (see pointercancel); when a pen stylus leaves the hover range detectable by the digitizer.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointerout"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Document: pointerout event"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/HTMLElement.json",
            "name": "pointerout_event",
            "slug": "API/HTMLElement/pointerout_event",
            "summary": "The pointerout event is fired for several reasons including: pointing device is moved out of the hit test boundaries of an element; firing the pointerup event for a device that does not support hover (see pointerup); after firing the pointercancel event (see pointercancel); when a pen stylus leaves the hover range detectable by the digitizer.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointerout"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement: pointerout event"
        }
    ],
    "the-pointerover-event": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/Document.json",
            "name": "pointerover_event",
            "slug": "API/Document/pointerover_event",
            "summary": "The pointerover event is fired when a pointing device is moved into an element's hit test boundaries.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointerover"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Document: pointerover event"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/HTMLElement.json",
            "name": "pointerover_event",
            "slug": "API/HTMLElement/pointerover_event",
            "summary": "The pointerover event is fired when a pointing device is moved into an element's hit test boundaries.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointerover"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement: pointerover event"
        }
    ],
    "the-pointerup-event": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/Document.json",
            "name": "pointerup_event",
            "slug": "API/Document/pointerup_event",
            "summary": "The pointerup event is fired when a pointer is no longer active.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointerup"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Document: pointerup event"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/HTMLElement.json",
            "name": "pointerup_event",
            "slug": "API/HTMLElement/pointerup_event",
            "summary": "The pointerup event is fired when a pointer is no longer active.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "mspointerup"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement: pointerup event"
        }
    ],
    "widl-Element-releasePointerCapture-void-long-pointerId": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/Element.json",
            "name": "releasePointerCapture",
            "slug": "API/Element/releasePointerCapture",
            "summary": "The releasePointerCapture() method of the Element interface releases (stops) pointer capture that was previously set for a specific (PointerEvent) pointer.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "41",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": false
                    },
                    {
                        "version_added": "41",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "prefix": "ms"
                    }
                ],
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element.releasePointerCapture()"
        }
    ],
    "widl-Element-setPointerCapture-void-long-pointerId": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/Element.json",
            "name": "setPointerCapture",
            "slug": "API/Element/setPointerCapture",
            "summary": "The setPointerCapture() method of the Element interface is used to designate a specific element as the capture target of future pointer events. Subsequent events for the pointer will be targeted at the capture element until capture is released (via Element.releasePointerCapture()).",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "41",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": false
                    },
                    {
                        "version_added": "41",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "prefix": "ms"
                    }
                ],
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element.setPointerCapture()"
        }
    ],
    "extensions-to-the-element-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "Element",
            "slug": "API/Element",
            "summary": "Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": "18"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1.3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": {
                    "version_added": "1.0"
                },
                "webview_android": {
                    "version_added": "1"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element"
        }
    ],
    "widl-GlobalEventHandlers-onpointercancel": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/GlobalEventHandlers.json",
            "name": "onpointercancel",
            "slug": "API/GlobalEventHandlers/onpointercancel",
            "summary": "The onpointercancel property of the GlobalEventHandlers mixin is an EventHandler that processes pointercancel events.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "onmspointercancel"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "GlobalEventHandlers.onpointercancel"
        }
    ],
    "widl-GlobalEventHandlers-onpointerdown": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/GlobalEventHandlers.json",
            "name": "onpointerdown",
            "slug": "API/GlobalEventHandlers/onpointerdown",
            "summary": "The GlobalEventHandlers event handler onpointerdown is used to specify the event handler for the pointerdown event, which is fired when the pointing device is initially pressed. This event can be sent to Window, Document, and Element objects.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "onmspointerdown"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "GlobalEventHandlers.onpointerdown"
        }
    ],
    "widl-GlobalEventHandlers-onpointerenter": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/GlobalEventHandlers.json",
            "name": "onpointerenter",
            "slug": "API/GlobalEventHandlers/onpointerenter",
            "summary": "The onpointerenter property of the GlobalEventHandlers mixin is an EventHandler that processes pointerenter events.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "onmspointerenter"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "GlobalEventHandlers.onpointerenter"
        }
    ],
    "widl-GlobalEventHandlers-onpointerleave": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/GlobalEventHandlers.json",
            "name": "onpointerleave",
            "slug": "API/GlobalEventHandlers/onpointerleave",
            "summary": "The global event handler for the pointerleave event, which is delivered to a Node when the pointer (mouse cursor, fingertip, etc.) exits its hit test area (for example, if the cursor exits an Element or Window's content area). This event is part of the Pointer Events API.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "onmspointerleave"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "GlobalEventHandlers.onpointerleave"
        }
    ],
    "widl-GlobalEventHandlers-onpointermove": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/GlobalEventHandlers.json",
            "name": "onpointermove",
            "slug": "API/GlobalEventHandlers/onpointermove",
            "summary": "The onpointermove property of the GlobalEventHandlers mixin is an EventHandler that processes pointermove events.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "onmspointermove"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "GlobalEventHandlers.onpointermove"
        }
    ],
    "widl-GlobalEventHandlers-onpointerout": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/GlobalEventHandlers.json",
            "name": "onpointerout",
            "slug": "API/GlobalEventHandlers/onpointerout",
            "summary": "The onpointerout property of the GlobalEventHandlers mixin is an EventHandler that processes pointerout events.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "onmspointerout"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "GlobalEventHandlers.onpointerout"
        }
    ],
    "widl-GlobalEventHandlers-onpointerover": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/GlobalEventHandlers.json",
            "name": "onpointerover",
            "slug": "API/GlobalEventHandlers/onpointerover",
            "summary": "The onpointerover property of the GlobalEventHandlers mixin is an EventHandler that processes pointerover events.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "onmspointerover"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "GlobalEventHandlers.onpointerover"
        }
    ],
    "widl-GlobalEventHandlers-onpointerup": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/GlobalEventHandlers.json",
            "name": "onpointerup",
            "slug": "API/GlobalEventHandlers/onpointerup",
            "summary": "The onpointerup property of the GlobalEventHandlers mixin is an EventHandler that processes pointerup events.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "alternative_name": "onmspointerup"
                    }
                ],
                "opera": {
                    "version_added": null
                },
                "opera_android": {
                    "version_added": null
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "GlobalEventHandlers.onpointerup"
        }
    ],
    "extensions-to-the-navigator-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/Navigator.json",
            "name": "maxTouchPoints",
            "slug": "API/Navigator/maxTouchPoints",
            "summary": "The maxTouchPoints read-only property of the Navigator interface returns the maximum number of simultaneous touch contact points are supported by the current device.",
            "support": {
                "chrome": {
                    "version_added": "35"
                },
                "chrome_android": {
                    "version_added": "35"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "29",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ],
                    "notes": "See <a href='https://bugzil.la/1426786'>bug 1426786</a>."
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "prefix": "ms"
                    }
                ],
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Navigator.maxTouchPoints"
        }
    ],
    "widl-PointerEvent-height": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/PointerEvent.json",
            "name": "height",
            "slug": "API/PointerEvent/height",
            "summary": "The height read-only property of the PointerEvent interface represents the height of the pointer's contact geometry, along the y-axis (in CSS pixels). Depending on the source of the pointer device (for example a finger), for a given pointer, each event may produce a different value.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "41",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "41",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "partial_implementation": true,
                        "notes": "Returns values in screen pixels instead of CSS document pixels."
                    }
                ],
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "PointerEvent.height"
        }
    ],
    "widl-PointerEvent-isPrimary": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/PointerEvent.json",
            "name": "isPrimary",
            "slug": "API/PointerEvent/isPrimary",
            "summary": "The isPrimary read-only property of the PointerEvent interface indicates whether or not the pointer device that created the event is the primary pointer. It returns true if the pointer that caused the event to be fired is the primary device and returns false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "41",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "41",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "PointerEvent.isPrimary"
        }
    ],
    "widl-PointerEventInit-pointerId": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/PointerEvent.json",
            "name": "pointerId",
            "slug": "API/PointerEvent/pointerId",
            "summary": "The pointerId read-only property of the PointerEvent interface is an identifier assigned to a given pointer event. The identifier is unique, being different from the identifiers of all other active pointer events. Since the value may be randomly generated, it is not guaranteed to convey any particular meaning.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "41",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "41",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "PointerEvent.pointerId"
        }
    ],
    "widl-PointerEventInit-pointerType": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/PointerEvent.json",
            "name": "pointerType",
            "slug": "API/PointerEvent/pointerType",
            "summary": "The pointerType read-only property of the PointerEvent interface indicates the device type (mouse, pen, or touch) that caused a given pointer event.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "41",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "41",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "partial_implementation": true,
                        "notes": "Returns an integer enumeration instead of a string."
                    }
                ],
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "PointerEvent.pointerType"
        }
    ],
    "widl-PointerEventInit-pressure": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/PointerEvent.json",
            "name": "pressure",
            "slug": "API/PointerEvent/pressure",
            "summary": "The pressure read-only property of the PointerEvent interface indicates the normalized pressure of the pointer input.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "41",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "41",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "partial_implementation": true,
                        "notes": "Returns 0 instead of 0.5 on hardware that doesn't support pressure."
                    }
                ],
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "PointerEvent.pressure"
        }
    ],
    "widl-PointerEventInit-tiltX": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/PointerEvent.json",
            "name": "tiltX",
            "slug": "API/PointerEvent/tiltX",
            "summary": "The tiltX read-only property of the PointerEvent interface is the angle (in degrees) between the Y-Z plane of the pointer and the screen. This property is typically only useful for a pen/stylus pointer type.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "41",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "41",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "PointerEvent.tiltX"
        }
    ],
    "widl-PointerEventInit-tiltY": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/PointerEvent.json",
            "name": "tiltY",
            "slug": "API/PointerEvent/tiltY",
            "summary": "The tiltY read-only property of the PointerEvent interface is the angle (in degrees) between the X-Z plane of the pointer and the screen. This property is typically only useful for a pen/stylus pointer type.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "41",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "41",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": "10"
                },
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "PointerEvent.tiltY"
        }
    ],
    "widl-PointerEvent-width": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/PointerEvent.json",
            "name": "width",
            "slug": "API/PointerEvent/width",
            "summary": "The width read-only property of the PointerEvent interface represents the width of the pointer's contact geometry along the x-axis, measured in CSS pixels. Depending on the source of the pointer device (such as a finger), for a given pointer, each event may produce a different value.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "41",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "41",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "partial_implementation": true,
                        "notes": "Returns values in screen pixels instead of CSS document pixels."
                    }
                ],
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "PointerEvent.width"
        }
    ],
    "pointerevent-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "api/PointerEvent.json",
            "name": "PointerEvent",
            "slug": "API/PointerEvent",
            "summary": "The PointerEvent interface represents the state of a DOM event produced by a pointer such as the geometry of the contact point, the device type that generated the event, the amount of pressure that was applied on the contact surface, etc.",
            "support": {
                "chrome": {
                    "version_added": "55"
                },
                "chrome_android": {
                    "version_added": "55"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "59"
                    },
                    {
                        "version_added": "41",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "dom.w3c_pointer_events.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "firefox_android": {
                    "version_added": "41",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.w3c_pointer_events.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "prefix": "MS",
                        "partial_implementation": true,
                        "notes": "See <a href='https://msdn.microsoft.com/library/dn304886'>MSDN Pointer events updates</a>."
                    }
                ],
                "opera": {
                    "version_added": "42"
                },
                "opera_android": {
                    "version_added": "42"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "13"
                },
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "55"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "PointerEvent"
        }
    ],
    "the-touch-action-css-property": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "css/properties/touch-action.json",
            "name": "touch-action",
            "slug": "CSS/touch-action",
            "summary": "The touch-action CSS property sets how an element's region can be manipulated by a touchscreen user (for example, by zooming features built into the browser).",
            "support": {
                "chrome": {
                    "version_added": "36"
                },
                "chrome_android": {
                    "version_added": "36"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "52",
                        "notes": "Not applicable to Firefox platforms that support neither pointer nor touch events."
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "layout.css.touch_action.enabled",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Not applicable to Firefox platforms that support neither pointer nor touch events."
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "52"
                    },
                    {
                        "version_added": "29",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "layout.css.touch_action.enabled",
                                "value_to_set": "true"
                            }
                        ]
                    }
                ],
                "ie": [
                    {
                        "version_added": "11"
                    },
                    {
                        "version_added": "10",
                        "prefix": "-ms-"
                    }
                ],
                "opera": {
                    "version_added": "23"
                },
                "opera_android": {
                    "version_added": "24"
                },
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": {
                    "version_added": "9.3"
                },
                "samsunginternet_android": {
                    "version_added": "3.0"
                },
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "touch-action"
        }
    ]
}
